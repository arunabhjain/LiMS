{"version":3,"sources":["components/HeaderComponent.js","components/HomeComponent.js","components/LoadingComponent.js","components/BooksComponent.js","components/SearchComponent.js","components/BookDetailComponent.js","components/ProfileComponent.js","components/AddBookComponent.js","components/HistoryComponent.js","components/IssueComponent.js","components/ReturnComponent.js","components/UserDetailComponent.js","components/StatsComponent.js","components/LogComponent.js","components/UserListComponent.js","redux/ActionTypes.js","baseUrl.js","redux/ActionCreators.js","components/AboutComponent.js","components/MainComponent.js","redux/books.js","redux/auth.js","redux/issues.js","redux/users.js","redux/store.js","App.js","serviceWorker.js","index.js"],"names":["required","val","length","maxLength","len","minLength","validEmail","test","Registerer","props","isSignedIn","Fragment","Button","className","outline","onClick","toggleRegister","Header","state","isNavOpen","isModalOpen","isRegisterOpen","dropdownOpen","toggleModal","bind","toggleNav","handleLogin","handleLogout","toggle","this","setState","window","innerWidth","event","loginUser","username","value","password","preventDefault","logoutUser","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","src","height","alt","Collapse","isOpen","navbar","Nav","NavItem","to","auth","userinfo","admin","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","tag","Link","isAuthenticated","style","color","fontSize","textShadow","firstname","toUpperCase","lastname","isLoading","Modal","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","id","name","innerRef","input","model","values","registerUser","email","roll","text","placeholder","validators","show","messages","Component","Home","Loading","align","RenderBook","book","changeSelected","isAdmin","toggleDeleteModal","toggleEditModal","i","_id","isbn","author","copies","Booklist","scrollTo","list","books","map","booksLoading","booksErrMess","Table","striped","bordered","hover","responsive","Search","cat","onChange","e","options","pos","target","checked","push","splice","colors","nameRegex","RegExp","authorRegex","category_matched","some","category","search","ListGroupItem","Badge","pill","floor","shelf","Row","form","Col","md","for","sm","check","xs","defaultChecked","ListGroup","Card","CardHeader","CardBody","CardTitle","CardText","description","CardFooter","Intl","DateTimeFormat","year","month","day","hour","minute","hour12","format","Date","parse","createdAt","updatedAt","BookDetail","errMess","Profile","isEditModalOpen","isPasswordModalOpen","togglePasswordModal","original","textAlign","marginRight","editUser","defaultValue","newpassword","confirm","editPassword","user","alert","matchcreds","requiredNum","maxVal","minVal","isNumber","isNaN","Number","AddBook","postBook","uniqueName","uniqueIsbn","select","textarea","rows","totalFine","RenderIssue","issue","dates","today","issueDate","deadline","setDate","getDate","returnDate","returned","Math","min","apply","fine","getTime","History","issues","Issue","usersLoading","usersErrMess","bookoptions","index","defaultBook","useroptions","users","filter","defaultUser","bookid","studentid","postIssue","row","onInput","disabled","returnBook","student","Return","console","log","returnIssue","UserDetail","Stats","CardLink","Log","RenderUser","UserList","BOOKS_LOADING","BOOKS_FAILED","ADD_BOOKS","ADD_BOOK","EDIT_BOOK","DELETE_BOOK","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","EDIT_USER","EDIT_PASSWORD","ISSUES_LOADING","ISSUES_FAILED","ADD_ISSUES","ADD_ISSUE","RETURN_ISSUE","USERS_LOADING","USERS_FAILED","ADD_USERS","baseUrl","dispatch","newBook","bearer","localStorage","getItem","fetch","method","body","JSON","stringify","headers","Authorization","then","response","ok","error","Error","status","statusText","json","ActionTypes","payload","catch","message","fetchUsers","addUsers","usersFailed","booksFailed","errmess","addBooks","editBookdispatch","editUserdispatch","USER","editPasswordDispatch","CREDS","deleteBookdispatch","resp","creds","requestLogin","success","setItem","token","fetchIssues","setTimeout","receiveLogin","bookId","studentId","newIssue","issueId","issueUrl","issuesLoading","addIssues","issuesFailed","removeItem","About","Main","isDeleteModalOpen","selectedBook","handleSubmitEdit","fetchBooks","editBook","defaultIsbn","defaultName","PrivateRouteCommon","component","rest","render","pathname","from","location","PrivateRouteAdmin","PrivateRoute","exact","path","match","params","notFoundErr","undefined","selectedUser","userId","deleteBook","withRouter","connect","newUser","newCreds","Books","action","concat","newbook","Auth","Issues","newissue","Users","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","App","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"khBA2BMA,EAAW,SAACC,GAAG,OAAKA,GAAOA,EAAIC,MAAO,EACtCC,EAAY,SAACC,GAAG,OAAK,SAACH,GAAG,OAAMA,GAAOA,EAAIC,QAAUE,CAAI,CAAD,EACvDC,EAAY,SAACD,GAAG,OAAK,SAACH,GAAG,OAAKA,GAAOA,EAAIC,QAAUE,CAAI,CAAD,EACtDE,EAAa,SAACL,GAAG,MACrB,4CAA4CM,KAAKN,EAAK,EAExD,SAASO,EAAWC,GAClB,OAAyB,IAArBA,EAAMC,WAEN,eAAC,IAAMC,SAAQ,uBAEb,eAACC,EAAA,EAAM,CACLC,UAAU,iBACVC,SAAO,EACPC,QAASN,EAAMO,eAAe,sBAErB,sBAAMH,UAAU,gCAIrB,cAAC,IAAMF,SAAQ,GAC7B,CAAC,IAqacM,EAnaH,kDACV,WAAYR,GAAQ,IAAD,EAaoB,OAbpB,qBACjB,cAAMA,IACDS,MAAQ,CACXC,WAAW,EACXC,aAAa,EACbC,gBAAgB,EAChBC,cAAc,GAEhB,EAAKC,YAAc,EAAKA,YAAYC,KAAK,gBACzC,EAAKC,UAAY,EAAKA,UAAUD,KAAK,gBACrC,EAAKE,YAAc,EAAKA,YAAYF,KAAK,gBACzC,EAAKG,aAAe,EAAKA,aAAaH,KAAK,gBAC3C,EAAKR,eAAiB,EAAKA,eAAeQ,KAAK,gBAC/C,EAAKI,OAAS,EAAKA,OAAOJ,KAAK,gBAAM,CACvC,CAiZC,OAjZA,mCAED,WACEK,KAAKC,SAAS,CAAER,cAAeO,KAAKX,MAAMI,cAC5C,GAAC,uBACD,WACMS,OAAOC,WAAa,MACtBH,KAAKC,SAAS,CACZX,WAAYU,KAAKX,MAAMC,WAG7B,GAAC,4BAED,SAAec,GACbJ,KAAKC,SAAS,CACZT,gBAAiBQ,KAAKX,MAAMG,gBAEhC,GAAC,yBAED,SAAYY,GACVJ,KAAKN,cACLM,KAAKpB,MAAMyB,UAAU,CACnBC,SAAUN,KAAKM,SAASC,MACxBC,SAAUR,KAAKQ,SAASD,QAE1BH,EAAMK,gBACR,GAAC,0BAED,WACET,KAAKpB,MAAM8B,YACb,GAAC,yBACD,WACEV,KAAKC,SAAS,CACZV,aAAcS,KAAKX,MAAME,aAE7B,GAAC,oBAED,WAAU,IAAD,OACP,OACE,eAAC,IAAMT,SAAQ,WACb,eAAC6B,EAAA,EAAM,CAACC,MAAI,EAACC,OAAO,KAAK7B,UAAU,kBAAiB,UAClD,cAAC8B,EAAA,EAAa,CAAC5B,QAASc,KAAKJ,YAC7B,cAACmB,EAAA,EAAW,CAAC/B,UAAU,UAAUgC,KAAK,QAAO,SAC3C,qBACEC,IAAI,mBACJC,OAAQ,GACRC,IAAI,GACJnC,UAAU,iBAGd,eAACoC,EAAA,EAAQ,CAACC,OAAQrB,KAAKX,MAAMC,UAAWgC,QAAM,YAC5C,eAACC,EAAA,EAAG,CAACD,QAAM,YACT,cAACE,EAAA,EAAO,CAACxC,UAAU,OAAOE,QAASc,KAAKJ,UAAU,SAChD,eAAC,IAAO,CAACZ,UAAU,wBAAwByC,GAAG,QAAO,UACnD,sBAAMzC,UAAU,qBAAqB,aAGzC,cAACwC,EAAA,EAAO,CAACxC,UAAU,OAAOE,QAASc,KAAKJ,UAAU,SAChD,eAAC,IAAO,CAACZ,UAAU,wBAAwByC,GAAG,SAAQ,UACpD,sBAAMzC,UAAU,4BAA4B,cAG/CgB,KAAKpB,MAAM8C,KAAKC,UAAY3B,KAAKpB,MAAM8C,KAAKC,SAASC,MACpD,cAACJ,EAAA,EAAO,UACN,eAACK,EAAA,EAAQ,CACPR,OAAQrB,KAAKX,MAAMI,aACnBM,OAAQC,KAAKD,OAAO,UAEpB,cAAC+B,EAAA,EAAc,CAAC9C,UAAU,iBAAgB,SACxC,sBAAKA,UAAU,qBAAoB,UACjC,sBAAMA,UAAU,qBAAqB,iBAErC,mBACEA,UAAU,yBACV,cAAY,cAIlB,eAAC+C,EAAA,EAAY,WACX,cAACC,EAAA,EAAY,CACX9C,QAASc,KAAKJ,UACdqC,IAAKC,IACLT,GAAG,SAAQ,0BAIb,cAACO,EAAA,EAAY,CACX9C,QAASc,KAAKJ,UACdqC,IAAKC,IACLT,GAAG,YAAW,+BAQtB,cAACD,EAAA,EAAO,CAACxC,UAAU,OAAOE,QAASc,KAAKJ,UAAU,SAChD,eAAC,IAAO,CAACZ,UAAU,wBAAwByC,GAAG,SAAQ,UACpD,sBAAMzC,UAAU,qBAAqB,cAK3C,cAACwC,EAAA,EAAO,CAACxC,UAAU,OAAOE,QAASc,KAAKJ,UAAU,SAChD,eAAC,IAAO,CAACZ,UAAU,wBAAwByC,GAAG,UAAS,UACrD,sBAAMzC,UAAU,uBAAuB,eAG1CgB,KAAKpB,MAAM8C,KAAKS,gBACf,cAACX,EAAA,EAAO,CAACtC,QAASc,KAAKJ,UAAWZ,UAAU,OAAM,SAChD,eAAC,IAAO,CAACA,UAAU,wBAAwByC,GAAG,WAAU,UACtD,sBAAMzC,UAAU,8BAA8B,mBAIlD,wBAEDgB,KAAKpB,MAAM8C,KAAKS,kBAChBnC,KAAKpB,MAAM8C,KAAKC,SAASC,MACxB,cAACJ,EAAA,EAAO,CAACtC,QAASc,KAAKJ,UAAWZ,UAAU,OAAM,SAChD,eAAC,IAAO,CAACA,UAAU,wBAAwByC,GAAG,WAAU,UACtD,sBAAMzC,UAAU,kBAAkB,sBAItC,wBAEDgB,KAAKpB,MAAM8C,KAAKS,iBACjBnC,KAAKpB,MAAM8C,KAAKC,SAASC,MACvB,eAAC,IAAM9C,SAAQ,WACb,cAAC0C,EAAA,EAAO,CAACtC,QAASc,KAAKJ,UAAWZ,UAAU,OAAM,SAChD,eAAC,IAAO,CAACA,UAAU,wBAAwByC,GAAG,SAAQ,UACpD,sBAAMzC,UAAU,sBAAsB,mBAG1C,cAACwC,EAAA,EAAO,CAACtC,QAASc,KAAKJ,UAAWZ,UAAU,OAAM,SAChD,eAAC,IAAO,CAACA,UAAU,wBAAwByC,GAAG,UAAS,UACrD,sBAAMzC,UAAU,kBAAkB,oBAGtC,cAACwC,EAAA,EAAO,CAACtC,QAASc,KAAKJ,UAAWZ,UAAU,OAAM,SAChD,eAAC,IAAO,CAACA,UAAU,wBAAwByC,GAAG,SAAQ,UACpD,sBAAMzC,UAAU,sBAAsB,iBAK5C,2BAGJ,cAACuC,EAAA,EAAG,CAACvC,UAAU,UAAUsC,QAAM,WAC7B,eAACE,EAAA,EAAO,WACJxB,KAAKpB,MAAM8C,KAAKS,gBAYhB,sBAAKnD,UAAU,cAAa,UAC1B,sBACEoD,MAAO,CACLC,MAAO,QACPC,SAAU,GACVC,WAAY,qBAEdvD,UAAU,mBAAkB,UAE3BgB,KAAKpB,MAAM8C,KAAKC,SAASa,UAAUC,cAAa,OAEhDzC,KAAKpB,MAAM8C,KAAKC,SAASe,SAASD,iBAErC,eAAC1D,EAAA,EAAM,CACLE,SAAO,EACPD,UAAU,iBACVE,QAASc,KAAKF,aAAa,oBAEpB,sBAAMd,UAAU,yBACtBgB,KAAKpB,MAAM8C,KAAKiB,UACf,sBAAM3D,UAAU,iCACd,WAhCR,eAACD,EAAA,EAAM,CACLE,SAAO,EACPD,UAAU,iBACVE,QAASc,KAAKN,YAAY,mBAEpB,sBAAMV,UAAU,wBACrBgB,KAAKpB,MAAM8C,KAAKiB,UACf,sBAAM3D,UAAU,iCACd,QA4BR,cAACL,EAAU,CACTE,WAAYmB,KAAKpB,MAAM8C,KAAKS,gBAC5BhD,eAAgB,WACd,EAAKA,gBACP,eAMV,eAACyD,EAAA,EAAK,CACJvB,QAASrB,KAAKpB,MAAM8C,KAAKS,iBAAmBnC,KAAKX,MAAME,YACvDQ,OAAQC,KAAKN,YAAY,UAEzB,cAACmD,EAAA,EAAW,CAAC9C,OAAQC,KAAKN,YAAY,qBACtC,cAACoD,EAAA,EAAS,UACR,eAACC,EAAA,EAAI,CAACC,SAAUhD,KAAKH,YAAY,UAC/B,eAACoD,EAAA,EAAS,WACR,cAACC,EAAA,EAAK,CAACC,QAAQ,WAAU,sBACzB,cAACC,EAAA,EAAK,CACJC,KAAK,OACLC,GAAG,WACHC,KAAK,WACLC,SAAU,SAACC,GAAK,OAAM,EAAKnD,SAAWmD,CAAK,OAG/C,eAACR,EAAA,EAAS,WACR,cAACC,EAAA,EAAK,CAACC,QAAQ,WAAU,sBACzB,cAACC,EAAA,EAAK,CACJC,KAAK,WACLC,GAAG,WACHC,KAAK,WACLC,SAAU,SAACC,GAAK,OAAM,EAAKjD,SAAWiD,CAAK,OAG/C,cAAC1E,EAAA,EAAM,CAACsE,KAAK,SAAS9C,MAAM,SAAS8B,MAAM,UAAS,2BAM1D,eAACO,EAAA,EAAK,CAACvB,OAAQrB,KAAKX,MAAMG,eAAgBO,OAAQC,KAAKb,eAAe,UACpE,cAAC0D,EAAA,EAAW,CAAC9C,OAAQC,KAAKb,eAAe,sBACzC,cAAC2D,EAAA,EAAS,UACR,eAAC,YAAS,CACRY,MAAM,OACNV,SAAU,SAACW,GACT,EAAKxE,iBACL,EAAKP,MAAMgF,aAAa,CACtBtD,SAAUqD,EAAOrD,SACjBE,SAAUmD,EAAOnD,SACjBqD,MAAOF,EAAOE,MACdC,KAAMH,EAAOG,KACbtB,UAAWmB,EAAOnB,UAClBE,SAAUiB,EAAOjB,UAErB,EAAE,UAEF,eAACO,EAAA,EAAS,WACR,cAACC,EAAA,EAAK,CAACC,QAAQ,WAAU,sBACzB,cAAC,UAAQY,KAAI,CACXL,MAAM,YACNJ,GAAG,WACHC,KAAK,WACLvE,UAAU,eACVgF,YAAY,WACZC,WAAY,CACV9F,WACAK,UAAWA,EAAU,GACrBF,UAAWA,EAAU,OAGzB,cAAC,SAAM,CACLU,UAAU,cACV0E,MAAM,YACNQ,KAAK,UACLC,SAAU,CACRhG,SAAU,WACVK,UAAW,qCACXF,UAAW,uCAIjB,eAAC2E,EAAA,EAAS,WACR,cAACC,EAAA,EAAK,CAACC,QAAQ,WAAU,sBACzB,cAAC,UAAQ3C,SAAQ,CACfkD,MAAM,YACNJ,GAAG,WACHC,KAAK,WACLvE,UAAU,eACVgF,YAAY,WACZC,WAAY,CACV9F,WACAK,UAAWA,EAAU,GACrBF,UAAWA,EAAU,OAGzB,cAAC,SAAM,CACLU,UAAU,cACV0E,MAAM,YACNQ,KAAK,UACLC,SAAU,CACRhG,SAAU,WACVK,UAAW,qCACXF,UAAW,uCAIjB,eAAC2E,EAAA,EAAS,WACR,cAACC,EAAA,EAAK,CAACC,QAAQ,YAAW,wBAC1B,cAAC,UAAQY,KAAI,CACXL,MAAM,aACNJ,GAAG,YACHC,KAAK,YACLvE,UAAU,eACVgF,YAAY,YACZC,WAAY,CACV9F,WACAK,UAAWA,EAAU,GACrBF,UAAWA,EAAU,OAGzB,cAAC,SAAM,CACLU,UAAU,cACV0E,MAAM,aACNQ,KAAK,UACLC,SAAU,CACRhG,SAAU,WACVK,UAAW,qCACXF,UAAW,uCAIjB,eAAC2E,EAAA,EAAS,WACR,cAACC,EAAA,EAAK,CAACC,QAAQ,WAAU,uBACzB,cAAC,UAAQY,KAAI,CACXL,MAAM,YACNJ,GAAG,WACHC,KAAK,WACLvE,UAAU,eACVgF,YAAY,WACZC,WAAY,CACV9F,WACAK,UAAWA,EAAU,GACrBF,UAAWA,EAAU,OAGzB,cAAC,SAAM,CACLU,UAAU,cACV0E,MAAM,YACNQ,KAAK,UACLC,SAAU,CACRhG,SAAU,WACVK,UAAW,qCACXF,UAAW,uCAIjB,eAAC2E,EAAA,EAAS,WACR,cAACC,EAAA,EAAK,CAACC,QAAQ,OAAM,sBACrB,cAAC,UAAQY,KAAI,CACXL,MAAM,QACNJ,GAAG,OACHC,KAAK,OACLvE,UAAU,eACVgF,YAAY,OACZC,WAAY,CACV9F,WACAK,UAAWA,EAAU,GACrBF,UAAWA,EAAU,OAGzB,cAAC,SAAM,CACLU,UAAU,cACV0E,MAAM,QACNQ,KAAK,UACLC,SAAU,CACRhG,SAAU,WACVK,UAAW,qCACXF,UAAW,uCAIjB,eAAC2E,EAAA,EAAS,WACR,cAACC,EAAA,EAAK,CAACC,QAAQ,QAAO,oBACtB,cAAC,UAAQY,KAAI,CACXL,MAAM,SACNJ,GAAG,QACHC,KAAK,QACLvE,UAAU,eACVgF,YAAY,QACZC,WAAY,CAAE9F,WAAUM,gBAE1B,cAAC,SAAM,CACLO,UAAU,cACV0E,MAAM,SACNQ,KAAK,UACLC,SAAU,CACRhG,SAAU,WACVM,WAAY,6BAIlB,cAACM,EAAA,EAAM,CAACsE,KAAK,SAAS9C,MAAM,SAAS8B,MAAM,UAAS,+BAQhE,KAAC,EAhaS,CAAS+B,a,OCxBNC,MAvBf,WACE,OACE,sBAAKrF,UAAU,gBAAe,UAC5B,qBAAKA,UAAU,YACf,qBAAKiC,IAAI,kBAAkBC,OAAQ,IAAKC,IAAI,KAC5C,mVAOA,qVASN,E,SCLemD,EAjBC,WACd,OACE,sBAAKtF,UAAU,gDAA+C,UAC5D,uBACA,uBACA,uBACA,uBACA,qBAAIuF,MAAM,SAAQ,UAChB,sBAAMvF,UAAU,oDAChB,uBACA,uBAAM,oBAKd,ECXA,SAASwF,EAAW,GAOhB,IANFC,EAAI,EAAJA,KACAC,EAAc,EAAdA,eACAC,EAAO,EAAPA,QACAC,EAAiB,EAAjBA,kBACAC,EAAe,EAAfA,gBACAC,EAAC,EAADA,EAEA,OACE,eAAC,IAAMhG,SAAQ,WACb,6BAAKgG,IACL,6BACE,cAAC,IAAI,CAACrD,GAAE,iBAAYgD,EAAKM,KAAM,SAAEN,EAAKlB,SAExC,6BAAKkB,EAAKO,OACV,6BAAKP,EAAKQ,SACV,6BAAKR,EAAKS,SACTP,EACC,+BACE,sBACEzF,QAAS,WACPwF,EAAeD,EAAKM,KACpBF,GACF,EACA7F,UAAU,wBACV,YACY,IACd,sBACEE,QAAS,WACPwF,EAAeD,EAAKM,KACpBH,GACF,EACA5F,UAAU,0BAId,cAAC,IAAMF,SAAQ,MAIvB,CAAC,IAqFcqG,EAnFD,kDACZ,WAAYvG,GAAQ,IAAD,EAGN,OAHM,qBACjB,cAAMA,IACDS,MAAQ,CAAC,EACd,EAAKyF,EAAI,EAAE,CACb,CA2EC,OA3EA,8CAED,WACE5E,OAAOkF,SAAS,EAAG,EACrB,GAAC,oBAED,WAAU,IAAD,OACDC,EAAOrF,KAAKpB,MAAM0G,MAAMC,KAAI,SAACd,GACjC,OACE,6BACE,cAACD,EAAU,CACTC,KAAMA,EACNE,QAAS,EAAK/F,MAAM+F,QACpBD,eAAgB,EAAK9F,MAAM8F,eAC3BE,kBAAmB,EAAKhG,MAAMgG,kBAC9BC,gBAAiB,EAAKjG,MAAMiG,gBAC5BC,EAAG,EAAKA,OAPHL,EAAKlB,KAWlB,IAEA,OAAIvD,KAAKpB,MAAM4G,aAEX,qBAAKxG,UAAU,YAAW,SACxB,qBAAKA,UAAU,MAAK,SAClB,cAAC,EAAO,QAILgB,KAAKpB,MAAM6G,aAElB,qBAAKzG,UAAU,oBAAmB,SAChC,qBAAKA,UAAU,cAAa,SAC1B,sBAAKA,UAAU,SAAQ,UACrB,uBACA,uBACA,uBACA,uBACA,6BAAKgB,KAAKpB,MAAM6G,sBAOtB,qBAAKzG,UAAU,YAAW,SACxB,qBAAKA,UAAU,MAAK,SAClB,sBAAKA,UAAU,iBAAgB,UAC7B,oBAAIuF,MAAM,SAAQ,+BAClB,eAACmB,EAAA,EAAK,CAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,YACtC,gCACE,+BACE,uCACA,8CACA,6CACA,yCACA,kDACC9F,KAAKpB,MAAM+F,QACV,yCACS,uBAAM,YAIf,cAAC,IAAM7F,SAAQ,SAIrB,gCAAQuG,aAOtB,KAAC,EAhFW,CAASjB,a,6CC2UR2B,EA5WH,kDACV,WAAYnH,GAAQ,IAAD,EAqBwB,OArBxB,qBACjB,cAAMA,IACDS,MAAQ,CACXkE,KAAM,GACN0B,OAAQ,GACRe,IAAK,CACH,UACA,aACA,mBACA,aACA,cACA,UACA,YACA,cACA,UACA,aACA,WACA,OACA,UAGJ,EAAKC,SAAW,EAAKA,SAAStG,KAAK,gBAAM,CAC3C,CAkVC,OAlVA,qCAED,SAASuG,GACP,IAAMC,EAAUnG,KAAKX,MAAM2G,IACvBI,GAAO,EAEX,GAAIF,EAAEG,OAAOC,QACXH,EAAQI,KAAKL,EAAEG,OAAO9F,WACjB,CAEL,IADA,IAAIuE,EAAI,EACDA,EAAIqB,EAAQ9H,OAAQyG,IACzB,GAAIqB,EAAQrB,KAAOoB,EAAEG,OAAO9F,MAAO,CACjC6F,EAAMtB,EACN,KACF,CAGFqB,EAAQK,OAAOJ,EAAK,EACtB,CACApG,KAAKC,SAAS,CAAE+F,IAAKG,GACvB,GAAC,+BAED,WACEjG,OAAOkF,SAAS,EAAG,EACrB,GAAC,oBAED,WAAU,IAAD,OACHqB,EAAS,CAAC,UAAW,SAAU,UAAW,OAAQ,aAClDC,EAAY,IAAIC,OAAO3G,KAAKX,MAAMkE,KAAM,KACxCqD,EAAc,IAAID,OAAO3G,KAAKX,MAAM4F,OAAQ,KAC1CI,EAAOrF,KAAKpB,MAAM0G,MAAMC,KAAI,SAACd,GACjC,IAAIoC,EAAmB,EAAKxH,MAAM2G,IAAIc,MACpC,SAACC,GAAQ,OAAKA,IAAatC,EAAKuB,GAAG,IAErC,OACmC,IAAjCvB,EAAKlB,KAAKyD,OAAON,KACoB,IAArCjC,EAAKQ,OAAO+B,OAAOJ,IACnBC,EAGE,eAACI,EAAA,EAAa,WACZ,cAAC,IAAI,CAACxF,GAAE,iBAAYgD,EAAKM,KAAM,SAC7B,sCAAON,EAAKlB,KAAI,UAElB,eAAC2D,EAAA,EAAK,CAAC7E,MAAOoE,EAAOhC,EAAKuB,IAAI3H,OAAS,GAAI8I,MAAI,YAC5C,IACA1C,EAAKuB,OAEP,EAAKpH,MAAM+F,QACV,eAAC,IAAM7F,SAAQ,uBAEb,sBACEI,QAAS,WACP,EAAKN,MAAM8F,eAAeD,EAAKM,KAC/B,EAAKnG,MAAMiG,iBACb,EACA7F,UAAU,wBAEX,KAAI,YAAe,IACpB,sBACEE,QAAS,WACP,EAAKN,MAAM8F,eAAeD,EAAKM,KAC/B,EAAKnG,MAAMgG,mBACb,EACA5F,UAAU,0BAId,cAAC,IAAMF,SAAQ,IAEjB,uBAAM,IAAC,oBAAGE,UAAU,UAAS,sCAAoByF,EAAKQ,WACtD,kCAAKR,EAAKS,OAAM,uBAChB,8DAA0BT,EAAK2C,MAAK,oBAAY3C,EAAK4C,YAhCnC5C,EAAKM,KAmCjB,cAAC,IAAMjG,SAAQ,GAC7B,IACA,OAAIkB,KAAKpB,MAAM4G,aAEX,qBAAKxG,UAAU,oBAAmB,SAChC,qBAAKA,UAAU,MAAK,SAClB,cAAC,EAAO,QAILgB,KAAKpB,MAAM6G,aAElB,qBAAKzG,UAAU,oBAAmB,SAChC,qBAAKA,UAAU,cAAa,SAC1B,sBAAKA,UAAU,SAAQ,UACrB,uBACA,uBACA,uBACA,uBACA,6BAAKgB,KAAKpB,MAAM6G,sBAOtB,sBAAKzG,UAAU,oBAAmB,UAChC,qBAAKA,UAAU,MAAK,SAClB,sBAAKA,UAAU,iBAAgB,UAC7B,oBAAIuF,MAAM,SAAQ,sCAClB,eAACxB,EAAA,EAAI,WACH,eAACuE,EAAA,EAAG,CAACC,MAAI,YACP,cAACC,EAAA,EAAG,CAACC,GAAI,EAAE,SACT,eAACxE,EAAA,EAAS,WACR,cAACC,EAAA,EAAK,CAACwE,IAAI,OAAM,0BACjB,cAACtE,EAAA,EAAK,CACJC,KAAK,OACLE,KAAK,OACLD,GAAG,OACH/C,MAAOP,KAAKX,MAAMkE,KAClB0C,SAAU,SAACC,GACT,EAAKjG,SAAS,CAAEsD,KAAM2C,EAAEG,OAAO9F,OACjC,EACAyD,YAAY,gCAIlB,cAACwD,EAAA,EAAG,CAACC,GAAI,EAAE,SACT,eAACxE,EAAA,EAAS,WACR,cAACC,EAAA,EAAK,CAACwE,IAAI,SAAQ,oBACnB,cAACtE,EAAA,EAAK,CACJC,KAAK,SACLE,KAAK,SACLD,GAAG,SACH/C,MAAOP,KAAKX,MAAM4F,OAClBgB,SAAU,SAACC,GACT,EAAKjG,SAAS,CAAEgF,OAAQiB,EAAEG,OAAO9F,OACnC,EACAyD,YAAY,iCAKpB,cAACsD,EAAA,EAAG,UACF,eAACE,EAAA,EAAG,CAACG,GAAI,EAAGF,GAAI,EAAE,uBACL,SAGf,eAACxE,EAAA,EAAS,CAAC2E,OAAK,YACd,eAACN,EAAA,EAAG,WACF,cAACE,EAAA,EAAG,CAACK,GAAI,EAAGJ,GAAI,EAAE,SAChB,eAACvE,EAAA,EAAK,CAAC0E,OAAK,EAACF,IAAI,UAAS,UACxB,cAACtE,EAAA,EAAK,CACJ0E,gBAAc,EACdzE,KAAK,WACL4C,SAAUjG,KAAKiG,SACf3C,GAAG,UACH/C,MAAM,UACNgD,KAAK,QACL,eAIN,cAACiE,EAAA,EAAG,CAACK,GAAI,EAAGJ,GAAI,EAAE,SAChB,eAACvE,EAAA,EAAK,CAAC0E,OAAK,EAACF,IAAI,UAAS,UACxB,cAACtE,EAAA,EAAK,CACJ0E,gBAAc,EACdzE,KAAK,WACL4C,SAAUjG,KAAKiG,SACf3C,GAAG,UACH/C,MAAM,UACNgD,KAAK,QACL,eAKN,cAACiE,EAAA,EAAG,CAACK,GAAI,EAAGJ,GAAI,EAAE,SAChB,eAACvE,EAAA,EAAK,CAAC0E,OAAK,EAACF,IAAI,OAAM,UACrB,cAACtE,EAAA,EAAK,CACJ0E,gBAAc,EACdzE,KAAK,WACL4C,SAAUjG,KAAKiG,SACf3C,GAAG,OACH/C,MAAM,OACNgD,KAAK,QACL,YAIN,cAACiE,EAAA,EAAG,CAACK,GAAI,EAAGJ,GAAI,EAAE,SAChB,eAACvE,EAAA,EAAK,CAAC0E,OAAK,EAACF,IAAI,WAAU,UACzB,cAACtE,EAAA,EAAK,CACJ0E,gBAAc,EACdzE,KAAK,WACL4C,SAAUjG,KAAKiG,SACf3C,GAAG,WACH/C,MAAM,mBACNgD,KAAK,QACL,2BAKR,eAAC+D,EAAA,EAAG,WACF,cAACE,EAAA,EAAG,CAACK,GAAI,EAAGJ,GAAI,EAAE,SAChB,eAACvE,EAAA,EAAK,CAAC0E,OAAK,EAACF,IAAI,aAAY,UAC3B,cAACtE,EAAA,EAAK,CACJ0E,gBAAc,EACdzE,KAAK,WACL4C,SAAUjG,KAAKiG,SACf3C,GAAG,aACH/C,MAAM,aACNgD,KAAK,QACL,kBAIN,cAACiE,EAAA,EAAG,CAACK,GAAI,EAAGJ,GAAI,EAAE,SAChB,eAACvE,EAAA,EAAK,CAAC0E,OAAK,EAACF,IAAI,UAAS,UACxB,cAACtE,EAAA,EAAK,CACJ0E,gBAAc,EACdzE,KAAK,WACL4C,SAAUjG,KAAKiG,SACf3C,GAAG,UACH/C,MAAM,UACNgD,KAAK,QACL,eAKN,cAACiE,EAAA,EAAG,CAACK,GAAI,EAAGJ,GAAI,EAAE,SAChB,eAACvE,EAAA,EAAK,CAAC0E,OAAK,EAACF,IAAI,aAAY,UAC3B,cAACtE,EAAA,EAAK,CACJ0E,gBAAc,EACdzE,KAAK,WACL4C,SAAUjG,KAAKiG,SACf3C,GAAG,aACH/C,MAAM,aACNgD,KAAK,QACL,kBAIN,cAACiE,EAAA,EAAG,CAACK,GAAI,EAAGJ,GAAI,EAAE,SAChB,eAACvE,EAAA,EAAK,CAAC0E,OAAK,EAACF,IAAI,aAAY,UAC3B,cAACtE,EAAA,EAAK,CACJ0E,gBAAc,EACdzE,KAAK,WACL4C,SAAUjG,KAAKiG,SACf3C,GAAG,aACH/C,MAAM,aACNgD,KAAK,QACL,qBAKR,eAAC+D,EAAA,EAAG,WACF,cAACE,EAAA,EAAG,CAACK,GAAI,EAAGJ,GAAI,EAAE,SAChB,eAACvE,EAAA,EAAK,CAAC0E,OAAK,EAACF,IAAI,cAAa,UAC5B,cAACtE,EAAA,EAAK,CACJ0E,gBAAc,EACdzE,KAAK,WACL4C,SAAUjG,KAAKiG,SACf3C,GAAG,cACH/C,MAAM,cACNgD,KAAK,QACL,mBAIN,cAACiE,EAAA,EAAG,CAACK,GAAI,EAAGJ,GAAI,EAAE,SAChB,eAACvE,EAAA,EAAK,CAAC0E,OAAK,EAACF,IAAI,YAAW,UAC1B,cAACtE,EAAA,EAAK,CACJ0E,gBAAc,EACdzE,KAAK,WACL4C,SAAUjG,KAAKiG,SACf3C,GAAG,YACH/C,MAAM,YACNgD,KAAK,QACL,iBAKN,cAACiE,EAAA,EAAG,CAACK,GAAI,EAAGJ,GAAI,EAAE,SAChB,eAACvE,EAAA,EAAK,CAAC0E,OAAK,EAACF,IAAI,cAAa,UAC5B,cAACtE,EAAA,EAAK,CACJ0E,gBAAc,EACdzE,KAAK,WACL4C,SAAUjG,KAAKiG,SACf3C,GAAG,cACH/C,MAAM,cACNgD,KAAK,QACL,mBAIN,cAACiE,EAAA,EAAG,CAACK,GAAI,EAAGJ,GAAI,EAAE,SAChB,eAACvE,EAAA,EAAK,CAAC0E,OAAK,EAACF,IAAI,WAAU,UACzB,cAACtE,EAAA,EAAK,CACJ0E,gBAAc,EACdzE,KAAK,WACL4C,SAAUjG,KAAKiG,SACf3C,GAAG,WACH/C,MAAM,WACNgD,KAAK,QACL,mBAKR,cAAC+D,EAAA,EAAG,UACF,cAACE,EAAA,EAAG,CAACK,GAAI,EAAGJ,GAAI,EAAE,SAChB,eAACvE,EAAA,EAAK,CAAC0E,OAAK,EAACF,IAAI,QAAO,UACtB,cAACtE,EAAA,EAAK,CACJ0E,gBAAc,EACdzE,KAAK,WACL4C,SAAUjG,KAAKiG,SACf3C,GAAG,QACH/C,MAAM,QACNgD,KAAK,QACL,0BAShB,qBAAKvE,UAAU,MAAK,SAClB,sBAAKA,UAAU,SAAQ,UACrB,uBACA,cAAC+I,EAAA,EAAS,UAAE1C,SAGhB,yBAIR,KAAC,EAzWS,CAASjB,a,0DCHrB,SAASI,GAAW,GAAqD,IAAnDC,EAAI,EAAJA,KAAME,EAAO,EAAPA,QAASE,EAAe,EAAfA,gBAAiBH,EAAc,EAAdA,eACpD,OAAY,MAARD,EAEA,eAACuD,EAAA,EAAI,WACH,eAACC,EAAA,EAAU,CAAChG,IAAI,KAAI,UACjBwC,EAAKlB,KAAI,sBACToB,EACC,sBACE3F,UAAU,sBACVE,QAAS,WACPwF,EAAeD,EAAKM,KACpBF,GACF,IAGF,cAAC,IAAM/F,SAAQ,OAGnB,eAACoJ,GAAA,EAAQ,WACP,eAACC,GAAA,EAAS,CAAC5D,MAAM,QAAO,gBAAKE,EAAKQ,UAClC,eAACmD,GAAA,EAAQ,WACP,4CAAkB,IAAE3D,EAAKuB,IAAG,IAAE,uBAC9B,uBACA,+CAAqB,IAAEvB,EAAKO,KAAI,IAAE,uBAClC,uBACA,6CACA,uBAAM,IAAEP,EAAK4D,YAAW,IAAE,uBAC1B,uBACA,4CAAkB,IAAC,uBAAM,aACd5D,EAAK4C,MAAK,KAAG,uBACR,IAAf5C,EAAK2C,MAAc,WAAa3C,EAAK2C,MACtB,IAAf3C,EAAK2C,MACF,MACe,IAAf3C,EAAK2C,MACL,MACe,IAAf3C,EAAK2C,MACL,MACe,IAAf3C,EAAK2C,MACL,GACA,MAAK,SACH,uBACN,uBACA,qDAA2B,IAAE3C,EAAKS,UAEpC,0BAEF,cAACoD,GAAA,EAAU,CAACtJ,UAAU,aAAY,SAChC,eAACsI,EAAA,EAAG,WACF,eAACE,EAAA,EAAG,CAACC,GAAI,EAAE,yBACI,IACZ,IAAIc,KAAKC,eAAe,QAAS,CAChCC,KAAM,UACNC,MAAO,QACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IACPC,OAAO,IAAIC,KAAKA,KAAKC,MAAMxE,EAAKyE,gBAErC,eAAC1B,EAAA,EAAG,CAACC,GAAI,EAAE,8BACS,IACjB,IAAIc,KAAKC,eAAe,QAAS,CAChCC,KAAM,UACNC,MAAO,QACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,QAAQ,IACPC,OAAO,IAAIC,KAAKA,KAAKC,MAAMxE,EAAK0E,wBAMnC,uBACd,CAAC,IAqDcC,GAnDC,kDACd,WAAYxK,GAAQ,IAAD,EAED,OAFC,qBACjB,cAAMA,IACDS,MAAQ,CAAC,EAAE,CAClB,CA4CC,OA5CA,8CACD,WACEa,OAAOkF,SAAS,EAAG,EACrB,GAAC,oBACD,WACE,OAAIpF,KAAKpB,MAAM+D,UAEX,qBAAK3D,UAAU,YAAW,SACxB,qBAAKA,UAAU,MAAK,SAClB,cAAC,EAAO,QAILgB,KAAKpB,MAAMyK,QAElB,qBAAKrK,UAAU,oBAAmB,SAChC,qBAAKA,UAAU,cAAa,SAC1B,sBAAKA,UAAU,SAAQ,UACrB,uBACA,uBACA,uBACA,uBACA,6BAAKgB,KAAKpB,MAAMyK,iBAOtB,qBAAKrK,UAAU,iBAAgB,SAC7B,qBAAKA,UAAU,cAAa,SAC1B,sBAAKA,UAAU,SAAQ,UACrB,uBAAM,IAAC,uBACP,cAAC,GAAU,CACTyF,KAAMzE,KAAKpB,MAAM6F,KACjBE,QAAS3E,KAAKpB,MAAM+F,QACpBE,gBAAiB7E,KAAKpB,MAAMiG,gBAC5BH,eAAgB1E,KAAKpB,MAAM8F,iBAE7B,6BAKZ,KAAC,EAhDa,CAASN,aCzEnBjG,I,OAAW,SAACC,GAAG,OAAKA,GAAOA,EAAIC,MAAO,GACtCC,GAAY,SAACC,GAAG,OAAK,SAACH,GAAG,OAAMA,GAAOA,EAAIC,QAAUE,CAAI,CAAD,EACvDC,GAAY,SAACD,GAAG,OAAK,SAACH,GAAG,OAAKA,GAAOA,EAAIC,QAAUE,CAAI,CAAD,EACtDE,GAAa,SAACL,GAAG,MACrB,4CAA4CM,KAAKN,EAAK,EAsTzCkL,GAnTF,kDACX,WAAY1K,GAAQ,IAAD,EAO8C,OAP9C,qBACjB,cAAMA,IACDS,MAAQ,CACXkK,iBAAiB,EACjBC,qBAAqB,GAEvB,EAAK3E,gBAAkB,EAAKA,gBAAgBlF,KAAK,gBACjD,EAAK8J,oBAAsB,EAAKA,oBAAoB9J,KAAK,gBAAM,CACjE,CAuSC,OAvSA,8CAED,WACEO,OAAOkF,SAAS,EAAG,EACrB,GAAC,iCAED,WACEpF,KAAKC,SAAS,CACZuJ,qBAAsBxJ,KAAKX,MAAMmK,qBAErC,GAAC,6BAED,WACExJ,KAAKC,SAAS,CAAEsJ,iBAAkBvJ,KAAKX,MAAMkK,iBAC/C,GAAC,oBAED,WAAU,IA3BQG,EA2BT,OACP,OAAiC,OAA7B1J,KAAKpB,MAAM8C,KAAKC,SAEhB,qBAAK3C,UAAU,cAAa,qDAM9B,qBAAKA,UAAU,eAAc,SAC3B,sBAAKA,UAAU,WAAU,UACvB,qBAAKoD,MAAO,CAAEuH,UAAW,UAAW,SAClC,eAAC3B,EAAA,EAAI,CAAChJ,UAAU,UAAS,UACvB,cAACiJ,EAAA,EAAU,UACT,oDAEF,eAACC,GAAA,EAAQ,WACP,eAACE,GAAA,EAAQ,CAAChG,MAAO,CAAEuH,UAAW,QAAS,UACrC,+CAAkB3J,KAAKpB,MAAM8C,KAAKC,SAASa,aAC3C,8CAAiBxC,KAAKpB,MAAM8C,KAAKC,SAASe,YAC1C,+BACG1C,KAAKpB,MAAM8C,KAAKC,SAASC,MAAQ,WAAa,WAAU,MAAK5B,KAAKpB,MAAM8C,KAAKC,SAASmC,QAEzF,0CAAa9D,KAAKpB,MAAM8C,KAAKC,SAASkC,YAExC,eAAC9E,EAAA,EAAM,CAACsD,MAAM,OAAOnD,QAASc,KAAK6E,gBAAiBzC,MAAO,CAACwH,YAAY,IAAI,sBAE1E,sBAAM5K,UAAU,oBAEjBgB,KAAKpB,MAAM8C,KAAKC,SAASC,MACxB,wBAEA,eAAC7C,EAAA,EAAM,CAACsD,MAAM,OAAOnD,QAASc,KAAKyJ,oBAAoB,iCAErD,sBAAMzK,UAAU,yBAM1B,eAAC4D,EAAA,EAAK,CACJvB,OAAQrB,KAAKX,MAAMkK,gBACnBxJ,OAAQC,KAAK6E,gBAAgB,UAE7B,cAAChC,EAAA,EAAW,CAAC9C,OAAQC,KAAK6E,gBAAgB,0BAG1C,cAAC/B,EAAA,EAAS,UACR,eAAC,YAAS,CACRY,MAAM,OACNV,SAAU,SAACW,GACT,EAAKkB,kBACL,EAAKjG,MAAMiL,SACT,EAAKjL,MAAM8C,KAAKC,SAASoD,IACzBpB,EAAOnB,UACPmB,EAAOjB,SACPiB,EAAOG,KACPH,EAAOE,MAEX,EAAE,UAEF,eAACZ,EAAA,EAAS,WACR,cAACC,EAAA,EAAK,CAACC,QAAQ,YAAW,wBAC1B,cAAC,UAAQY,KAAI,CACXL,MAAM,aACNJ,GAAG,YACHC,KAAK,YACLvE,UAAU,eACV8K,aAAc9J,KAAKpB,MAAM8C,KAAKC,SAASa,UACvCwB,YAAY,YACZC,WAAY,CACV9F,YACAK,UAAWA,GAAU,GACrBF,UAAWA,GAAU,OAGzB,cAAC,SAAM,CACLU,UAAU,cACV0E,MAAM,aACNQ,KAAK,UACLC,SAAU,CACRhG,SAAU,WACVK,UAAW,qCACXF,UAAW,uCAIjB,eAAC2E,EAAA,EAAS,WACR,cAACC,EAAA,EAAK,CAACC,QAAQ,WAAU,uBACzB,cAAC,UAAQY,KAAI,CACXL,MAAM,YACNJ,GAAG,WACHC,KAAK,WACLvE,UAAU,eACV8K,aAAc9J,KAAKpB,MAAM8C,KAAKC,SAASe,SACvCsB,YAAY,WACZC,WAAY,CACV9F,YACAK,UAAWA,GAAU,GACrBF,UAAWA,GAAU,OAGzB,cAAC,SAAM,CACLU,UAAU,cACV0E,MAAM,YACNQ,KAAK,UACLC,SAAU,CACRhG,SAAU,WACVK,UAAW,qCACXF,UAAW,uCAIjB,eAAC2E,EAAA,EAAS,WACR,cAACC,EAAA,EAAK,CAACC,QAAQ,OAAM,sBACrB,cAAC,UAAQY,KAAI,CACXL,MAAM,QACNJ,GAAG,OACHC,KAAK,OACLvE,UAAU,eACV8K,aAAc9J,KAAKpB,MAAM8C,KAAKC,SAASmC,KACvCE,YAAY,OACZC,WAAY,CACV9F,YACAK,UAAWA,GAAU,GACrBF,UAAWA,GAAU,OAGzB,cAAC,SAAM,CACLU,UAAU,cACV0E,MAAM,QACNQ,KAAK,UACLC,SAAU,CACRhG,SAAU,WACVK,UAAW,qCACXF,UAAW,uCAIjB,eAAC2E,EAAA,EAAS,WACR,cAACC,EAAA,EAAK,CAACC,QAAQ,QAAO,oBACtB,cAAC,UAAQY,KAAI,CACXL,MAAM,SACNJ,GAAG,QACHC,KAAK,QACLuG,aAAc9J,KAAKpB,MAAM8C,KAAKC,SAASkC,MACvC7E,UAAU,eACVgF,YAAY,QACZC,WAAY,CAAE9F,YAAUM,iBAE1B,cAAC,SAAM,CACLO,UAAU,cACV0E,MAAM,SACNQ,KAAK,UACLC,SAAU,CACRhG,SAAU,WACVM,WAAY,6BAIlB,cAACM,EAAA,EAAM,CAACsE,KAAK,SAAS9C,MAAM,SAAS8B,MAAM,UAAS,4BAO1D,eAACO,EAAA,EAAK,CACJvB,OAAQrB,KAAKX,MAAMmK,oBACnBzJ,OAAQC,KAAKyJ,oBAAoB,UAEjC,cAAC5G,EAAA,EAAW,CAAC9C,OAAQC,KAAKyJ,oBAAoB,6BAG9C,cAAC3G,EAAA,EAAS,UACR,eAAC,YAAS,CACRY,MAAM,eACNV,SAAU,SAACW,GACLA,EAAOoG,cAAgBpG,EAAOqG,SAChC,EAAKP,sBACL,EAAK7K,MAAMqL,aACT,EAAKrL,MAAM8C,KAAKC,SAASoD,IACzB,EAAKnG,MAAM8C,KAAKwI,KAAK5J,SACrBqD,EAAOoG,cAGTI,MAAM,gDAEV,EAAE,UAEF,eAAClH,EAAA,EAAS,WACR,cAACC,EAAA,EAAK,CAACC,QAAQ,WAAU,8BACzB,cAAC,UAAQ3C,SAAQ,CACfkD,MAAM,YACNJ,GAAG,WACHC,KAAK,WACLvE,UAAU,eACVgF,YAAY,WACZC,WAAY,CACV9F,YACAK,UAAWA,GAAU,GACrBF,UAAWA,GAAU,IACrB8L,YArOFV,EAqOyB1J,KAAKpB,MAAM8C,KAAKwI,KAAK1J,SArOjC,SAACpC,GAAG,OAAKA,IAAQsL,CAAS,MAwOzC,cAAC,SAAM,CACL1K,UAAU,cACV0E,MAAM,YACNQ,KAAK,UACLC,SAAU,CACRhG,SAAU,WACVK,UAAW,qCACXF,UAAW,iCACX8L,WAAY,oCAKlB,eAACnH,EAAA,EAAS,WACR,cAACC,EAAA,EAAK,CAACC,QAAQ,cAAa,0BAC5B,cAAC,UAAQ3C,SAAQ,CACfkD,MAAM,eACNJ,GAAG,cACHC,KAAK,cACLvE,UAAU,eACVgF,YAAY,eACZC,WAAY,CACV9F,YACAK,UAAWA,GAAU,GACrBF,UAAWA,GAAU,OAGzB,cAAC,SAAM,CACLU,UAAU,cACV0E,MAAM,eACNQ,KAAK,UACLC,SAAU,CACRhG,SAAU,WACVK,UAAW,qCACXF,UAAW,uCAKjB,eAAC2E,EAAA,EAAS,WACR,cAACC,EAAA,EAAK,CAACC,QAAQ,UAAS,8BACxB,cAAC,UAAQ3C,SAAQ,CACfkD,MAAM,WACNJ,GAAG,UACHC,KAAK,UACLvE,UAAU,eACVgF,YAAY,4BACZC,WAAY,CACV9F,YACAK,UAAWA,GAAU,GACrBF,UAAWA,GAAU,OAGzB,cAAC,SAAM,CACLU,UAAU,cACV0E,MAAM,WACNQ,KAAK,UACLC,SAAU,CACRhG,SAAU,WACVK,UAAW,qCACXF,UAAW,uCAKjB,cAACS,EAAA,EAAM,CAACsE,KAAK,SAAS9C,MAAM,SAAS8B,MAAM,UAAS,gCASlE,KAAC,EAhTU,CAAS+B,aClBhBjG,GAAW,SAACC,GAAG,OAAKA,GAAOA,EAAIC,MAAO,EACtCgM,GAAc,SAACjM,GAAG,QAAOA,CAAI,EAE7BI,GAAY,SAACD,GAAG,OAAK,SAACH,GAAG,OAAKA,GAAOA,EAAIC,QAAUE,CAAI,CAAD,EACtD+L,GAAS,SAAC/L,GAAG,OAAK,SAACH,GAAG,OAAMA,GAAOA,GAAOG,CAAI,CAAD,EAC7CgM,GAAS,SAAChM,GAAG,OAAK,SAACH,GAAG,OAAKA,GAAOA,GAAOG,CAAI,CAAD,EAC5CiM,GAAW,SAACpM,GAAG,OAAMqM,MAAMC,OAAOtM,GAAM,EAwR/BuM,GAtRF,kDACX,WAAY/L,GAAQ,IAAD,EAED,OAFC,qBACjB,cAAMA,IACDS,MAAQ,CAAC,EAAE,CAClB,CA+QC,OA/QA,8CAED,WACEa,OAAOkF,SAAS,EAAG,EACrB,GAAC,oBAED,WAAU,IAhBO7G,EAgBR,OAMP,OAAIyB,KAAKpB,MAAM4G,aAEX,qBAAKxG,UAAU,YAAW,SACxB,qBAAKA,UAAU,MAAK,SAClB,cAAC,EAAO,QAILgB,KAAKpB,MAAM6G,aAElB,qBAAKzG,UAAU,oBAAmB,SAChC,qBAAKA,UAAU,cAAa,SAC1B,sBAAKA,UAAU,SAAQ,UACrB,uBACA,uBACA,uBACA,uBACA,6BAAKgB,KAAKpB,MAAM6G,sBAOtB,sBAAKzG,UAAU,YAAW,UACxB,qBAAKA,UAAU,qCAAoC,SACjD,qBAAKA,UAAU,SAAQ,SACrB,oBAAIuF,MAAM,SAAQ,6BAGtB,qBAAKvF,UAAU,yCAAwC,SACrD,eAAC,YAAS,CACRgE,SAAU,SAACW,GACT,EAAK/E,MAAMgM,SACTjH,EAAOJ,KACPI,EAAOsB,OACPtB,EAAO0E,YACP1E,EAAOqB,KACPrB,EAAOqC,IACPrC,EAAOyD,MACPzD,EAAO0D,MACP1D,EAAOuB,OAEX,EAAE,UAEF,eAACoC,EAAA,EAAG,CAACtI,UAAU,aAAY,UACzB,eAACkE,EAAA,EAAK,CAACC,QAAQ,OAAOsE,GAAI,EAAE,iBACrB,OAEP,eAACD,EAAA,EAAG,CAACC,GAAI,EAAE,UACT,cAAC,UAAQ1D,KAAI,CACXL,MAAM,QACNJ,GAAG,OACHC,KAAK,OACLS,YAAY,eACZhF,UAAU,eACViF,WAAY,CACV9F,YACAK,UAAWA,GAAU,GACrBqM,WA9DD,SAACzM,GAAG,OAClB,EAAKQ,MAAM0G,MAAMwB,MAAK,SAACrC,GAAI,OAAKA,EAAKlB,OAASnF,CAAG,GAAE,KAgExC,cAAC,SAAM,CACLY,UAAU,cACV0E,MAAM,QACNQ,KAAK,UACLC,SAAU,CACRhG,SAAU,WACVK,UAAW,qCACXqM,WAAY,oDAIlB,eAAC3H,EAAA,EAAK,CAACC,QAAQ,SAASsE,GAAI,EAAE,oBACpB,OAEV,eAACD,EAAA,EAAG,CAACC,GAAI,EAAE,UACT,cAAC,UAAQ1D,KAAI,CACXL,MAAM,UACNJ,GAAG,SACHC,KAAK,SACLS,YAAY,kBACZhF,UAAU,eACViF,WAAY,CACV9F,YACAK,UAAWA,GAAU,MAGzB,cAAC,SAAM,CACLQ,UAAU,cACV0E,MAAM,UACNQ,KAAK,UACLC,SAAU,CACRhG,SAAU,WACVK,UAAW,8CAKnB,eAAC8I,EAAA,EAAG,CAACtI,UAAU,aAAY,UACzB,cAACkE,EAAA,EAAK,CAACC,QAAQ,OAAOsE,GAAI,EAAE,sBAG5B,eAACD,EAAA,EAAG,CAACC,GAAI,EAAE,UACT,cAAC,UAAQ1D,KAAI,CACXL,MAAM,QACNJ,GAAG,OACHC,KAAK,OACLS,YAAY,mBACZhF,UAAU,eACViF,WAAY,CACV9F,YACAK,UAAWA,GAAU,IACrBF,WAvIHC,EAuIwB,GAvIhB,SAACH,GAAG,OAAMA,GAAOA,EAAIC,QAAUE,CAAI,GAwIxCiM,YACAM,WAxHD,SAAC1M,GAAG,OAClB,EAAKQ,MAAM0G,MAAMwB,MAAK,SAACrC,GAAI,OAAKA,EAAKO,OAAS5G,CAAG,GAAE,KA0HxC,cAAC,SAAM,CACLY,UAAU,cACV0E,MAAM,QACNQ,KAAK,UACLC,SAAU,CACRhG,SAAU,WACVK,UAAW,kCACXF,UAAW,8BACXkM,SAAU,oBACVM,WAAY,gDAIlB,eAAC5H,EAAA,EAAK,CAACC,QAAQ,SAASsE,GAAI,EAAE,UAC3B,IAAG,sBAGN,eAACD,EAAA,EAAG,CAACC,GAAI,EAAE,UACT,cAAC,UAAQ1D,KAAI,CACXL,MAAM,UACNJ,GAAG,SACHC,KAAK,SACLS,YAAY,6BACZhF,UAAU,eACViF,WAAY,CACVoG,eACAE,OAAQA,GAAO,GACfD,OAAQA,GAAO,KACfE,eAGJ,cAAC,SAAM,CACLxL,UAAU,cACV0E,MAAM,UACNQ,KAAK,UACLC,SAAU,CACRkG,YAAa,WACbE,OAAQ,0BACRD,OAAQ,wBACRE,SAAU,6BAMlB,eAAClD,EAAA,EAAG,CAACtI,UAAU,aAAY,UACzB,eAACwI,EAAA,EAAG,WACF,cAACtE,EAAA,EAAK,CAACC,QAAQ,MAAK,sBACpB,eAAC,UAAQ4H,OAAM,CACbjB,aAAa,UACbpG,MAAM,OACNJ,GAAG,MACHtE,UAAU,eAAc,UAExB,6CAAwB,IAAC,gDACzB,sDAAkC,IAClC,gDACA,iDAA4B,IAAC,6CAC7B,+CAA0B,IAAC,iDAC3B,6CAAwB,IAAC,gDACzB,8CAAyB,IAAC,0CAC1B,iDAGJ,eAACwI,EAAA,EAAG,WACF,cAACtE,EAAA,EAAK,CAACC,QAAQ,QAAO,oBACtB,eAAC,UAAQ4H,OAAM,CACbjB,aAAc,EACdpG,MAAM,SACNJ,GAAG,QACHtE,UAAU,eAAc,UAExB,uCAAkB,IAAC,uCACnB,uCAAkB,IAAC,uCACnB,uCAAkB,IAAC,uCACnB,uCAAkB,IAAC,uCACnB,gDAKN,eAACsI,EAAA,EAAG,CAACtI,UAAU,gDAA+C,UAC5D,eAACkE,EAAA,EAAK,CAACC,QAAQ,QAAQsE,GAAI,EAAE,UAC1B,IAAG,WAGN,eAACD,EAAA,EAAG,CAACC,GAAI,EAAE,UACT,cAAC,UAAQ1D,KAAI,CACXL,MAAM,SACNJ,GAAG,QACHC,KAAK,QACLS,YAAY,8BACZhF,UAAU,eACViF,WAAY,CACVoG,eACAE,OAAQA,GAAO,GACfD,OAAQA,GAAO,KACfE,eAGJ,cAAC,SAAM,CACLxL,UAAU,cACV0E,MAAM,SACNQ,KAAK,UACLC,SAAU,CACRkG,YAAa,WACbE,OAAQ,0BACRD,OAAQ,uBACRE,SAAU,6BAMlB,eAAClD,EAAA,EAAG,CAACtI,UAAU,aAAY,UACzB,cAACkE,EAAA,EAAK,CAACC,QAAQ,cAAcsE,GAAI,EAAE,yBAGnC,cAACD,EAAA,EAAG,CAACC,GAAI,GAAG,SACV,cAAC,UAAQuD,SAAQ,CACftH,MAAM,eACNJ,GAAG,cACHC,KAAK,cACL0H,KAAK,KACLjH,YAAY,+BACZhF,UAAU,sBAIhB,cAACsI,EAAA,EAAG,CAACtI,UAAU,oBAAmB,SAChC,cAACwI,EAAA,EAAG,CAACxI,UAAU,cAAa,SAC1B,cAACD,EAAA,EAAM,CAACsE,KAAK,SAASrE,UAAU,aAAY,6BAOpD,yBAGR,KAAC,EAnRU,CAASoF,aCPlB8G,GAAY,EAEhB,SAASC,GAAY,GAAe,IAAbC,EAAK,EAALA,MAAOtG,EAAC,EAADA,EACtBuG,EAAQ,GACRC,EAAQ,IAAItC,KAClBqC,EAAM9E,KAAK+E,GACX,IAAMC,EAAY,IAAIvC,KAAKA,KAAKC,MAAMmC,EAAMlC,YACtCsC,EAAW,IAAIxC,KAAKA,KAAKC,MAAMmC,EAAMlC,YAC3CsC,EAASC,QAAQD,EAASE,UAAY,IACtCL,EAAM9E,KAAKiF,GACX,IAAMG,EAAaP,EAAMQ,SACrB,IAAI5C,KAAKA,KAAKC,MAAMmC,EAAMjC,YAC1B,IAAIH,KAAK6C,KAAKC,IAAIC,MAAM,KAAMV,IAC9BW,EAAO,EAWX,OATGL,EAAWM,UAAYV,EAAUU,WAAS,MAd3B,KAiBhBD,EAnBa,EAoBXH,KAAKzE,OACFuE,EAAWM,UAAYV,EAAUU,WAAS,QAGjDf,IAAac,EAEX,eAAC,IAAMlN,SAAQ,WACb,6BAAKgG,IACL,6BACE,cAAC,IAAI,CAACrD,GAAE,iBAAY2J,EAAM3G,KAAKM,KAAM,SAAEqG,EAAM3G,KAAKlB,SAEpD,6BAAK6H,EAAM3G,KAAKO,OAChB,6BACG,IAAIuD,KAAKC,eAAe,QAAS,CAChCC,KAAM,UACNC,MAAO,QACPC,IAAK,YACJI,OAAO,IAAIC,KAAKA,KAAKC,MAAMmC,EAAMlC,eAEtC,6BACG,IAAIX,KAAKC,eAAe,QAAS,CAChCC,KAAM,UACNC,MAAO,QACPC,IAAK,YACJI,OAAOyC,KAEZ,6BACGJ,EAAMQ,SACH,eACA,IAAIrD,KAAKC,eAAe,QAAS,CAC/BC,KAAM,UACNC,MAAO,QACPC,IAAK,YACJI,OAAO,IAAIC,KAAKA,KAAKC,MAAM0C,KAC9B,qBAEN,6BAAKK,MAGX,CAAC,IA6FcE,GA3FF,kDACX,WAAYtN,GAAQ,IAAD,EAGN,OAHM,qBACjB,cAAMA,IACDS,MAAQ,CAAC,EACd,EAAKyF,EAAI,EAAE,CACb,CAmFC,OAnFA,8CACD,WACE5E,OAAOkF,SAAS,EAAG,EACrB,GAAC,oBAED,WAAU,IAAD,OACP,GAAIpF,KAAKpB,MAAMuN,OAAOxJ,UACpB,OACE,qBAAK3D,UAAU,YAAW,SACxB,qBAAKA,UAAU,MAAK,SAClB,cAAC,EAAO,QAIT,GAAIgB,KAAKpB,MAAMuN,OAAO9C,QAC3B,OACE,qBAAKrK,UAAU,oBAAmB,SAChC,qBAAKA,UAAU,cAAa,SAC1B,sBAAKA,UAAU,SAAQ,UACrB,uBACA,uBACA,uBACA,uBACA,6BAAKgB,KAAKpB,MAAMyK,iBAKnB,GAAwC,IAApCrJ,KAAKpB,MAAMuN,OAAOA,OAAO9N,OAClC,OACE,qBAAKW,UAAU,oBAAmB,SAChC,qBAAKA,UAAU,cAAa,SAC1B,sBAAKA,UAAU,qBAAoB,UACjC,uBACA,uBACA,uBACA,uBACA,6BAAK,mCACL,6BAAK,yCAMb,IAAMqG,EAAOrF,KAAKpB,MAAMuN,OAAOA,OAAO5G,KAAI,SAAC6F,GACzC,OACE,6BACE,cAACD,GAAW,CAACC,MAAOA,EAAOtG,EAAG,EAAKA,OAD5BsG,EAAMrG,IAInB,IAEA,OACE,qBAAK/F,UAAU,oDAAmD,SAChE,qBAAKA,UAAU,yCAAwC,SACrD,sBAAKA,UAAU,iBAAgB,UAC7B,+CACA,eAAC0G,EAAA,EAAK,CAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,YACtC,gCACE,+BACE,uCACA,8CACA,6CACA,4CACA,iDACA,+CACA,oDAGJ,gCAAQT,OAEV,uBACA,+BACG,IAAG,iEAC2D,IAC9D6F,GAAW,OAEd,6BAMZ,KAAC,EAxFU,CAAS9G,aCoJPgI,GAlNJ,kDACT,WAAYxN,GAAQ,IAAD,EAKf,OALe,qBACjB,cAAMA,IACDS,MAAQ,CACX2F,KAAM,GACNlB,KAAM,IACN,CACJ,CAwMC,OAxMA,8CAED,WACE5D,OAAOkF,SAAS,EAAG,EACrB,GAAC,oBAED,WAAU,IAAD,OACP,GAAIpF,KAAKpB,MAAM4G,cAAgBxF,KAAKpB,MAAMyN,aACxC,OACE,qBAAKrN,UAAU,YAAW,SACxB,qBAAKA,UAAU,MAAK,SAClB,cAAC,EAAO,QAIT,GAAIgB,KAAKpB,MAAM6G,aACpB,OACE,qBAAKzG,UAAU,oBAAmB,SAChC,qBAAKA,UAAU,cAAa,SAC1B,sBAAKA,UAAU,SAAQ,UACrB,uBACA,uBACA,uBACA,uBACA,6BAAKgB,KAAKpB,MAAM6G,sBAKnB,GAAIzF,KAAKpB,MAAM0N,aACpB,OACE,qBAAKtN,UAAU,oBAAmB,SAChC,qBAAKA,UAAU,cAAa,SAC1B,sBAAKA,UAAU,SAAQ,UACrB,uBACA,uBACA,uBACA,uBACA,6BAAKgB,KAAKpB,MAAM0N,sBAMxB,IAAMC,EAAcvM,KAAKpB,MAAM0G,MAAMC,KAAI,SAACd,EAAM+H,GAAK,OACnD,iCAAyB/H,EAAKO,MAAjBP,EAAKO,KAA0B,IAExCyH,EAAczM,KAAKpB,MAAM0G,MAAM,GAEjCoH,EAAc1M,KAAKpB,MAAM+N,MAAMC,QAAO,SAAC1C,GAAI,OAAMA,EAAKtI,KAAK,IACzDiL,EAAcH,EAAY,GAOhC,OANAA,EAAcA,EAAYnH,KAAI,SAAC2E,EAAMsC,GAAK,OACxC,iCAAyBtC,EAAKpG,MAAjBoG,EAAKpG,KAA0B,IAEtB,KAApB9D,KAAKX,MAAM2F,MACbhF,KAAKC,SAAS,CAAE+E,KAAMyH,EAAYzH,KAAMlB,KAAM+I,EAAY/I,OAG1D,sBAAK9E,UAAU,iBAAgB,UAC7B,qBAAKA,UAAU,qCAAoC,SACjD,qBAAKA,UAAU,SAAQ,SACrB,oBAAIuF,MAAM,SAAQ,6BAGtB,qBAAKvF,UAAU,yCAAwC,SACrD,eAAC+D,EAAA,EAAI,CACHC,SAAU,SAACkD,GACT,IAAI4G,EAAS,EAAKlO,MAAM0G,MAAMsH,QAC5B,SAACnI,GAAI,OAAKA,EAAKO,OAAS,EAAK3F,MAAM2F,IAAI,IACvC,GAAGD,IACDgI,EAAY,EAAKnO,MAAM+N,MAAMC,QAC/B,SAAC1C,GAAI,OAAKA,EAAKpG,OAAS,EAAKzE,MAAMyE,IAAI,IACvC,GAAGiB,IACL,EAAKnG,MAAMoO,UAAUF,EAAQC,GAC7B7G,EAAEzF,gBACJ,EAAE,UAEF,eAACwC,EAAA,EAAS,CAACgK,KAAG,YACZ,cAAC/J,EAAA,EAAK,CAACC,QAAQ,OAAM,+BACrB,cAACC,EAAA,EAAK,CACJC,KAAK,SACLyG,aAAc2C,EAAYlJ,KAC1BA,KAAK,OACLD,GAAG,OACHtE,UAAU,eACVkO,QAAS,SAAChH,GACR,EAAKjG,SAAS,CAAE+E,KAAMkB,EAAEG,OAAO9F,OACjC,EAAE,SAEDgM,OAGL,eAACtJ,EAAA,EAAS,CAACgK,KAAG,YACZ,cAAC/J,EAAA,EAAK,CAACC,QAAQ,OAAM,mCACrB,cAACC,EAAA,EAAK,CACJC,KAAK,SACLC,GAAG,OACHtE,UAAU,eACVkO,QAAS,SAAChH,GACR,EAAKjG,SAAS,CAAE6D,KAAMoC,EAAEG,OAAO9F,OACjC,EAAE,SAEDmM,OAGL,eAACzJ,EAAA,EAAS,CAACgK,KAAG,YACZ,cAAC/J,EAAA,EAAK,CAACC,QAAQ,OAAM,4BACrB,cAACC,EAAA,EAAK,CACJC,KAAK,OACLC,GAAG,OACHC,KAAK,OACLS,YAAY,eACZ8F,aAAc2C,EAAYlJ,KAC1BhD,MACGP,KAAKX,MAAM2F,KAERhF,KAAKpB,MAAM0G,MAAMsH,QACf,SAACnI,GAAI,OAAKA,EAAKO,OAAS,EAAK3F,MAAM2F,IAAI,IACvC,GAAGzB,KAHL,GAKNvE,UAAU,eACVmO,UAAQ,OAGZ,eAAClK,EAAA,EAAS,CAACgK,KAAG,YACZ,cAAC/J,EAAA,EAAK,CAACC,QAAQ,SAAQ,uBACvB,cAACC,EAAA,EAAK,CACJC,KAAK,OACLC,GAAG,SACHC,KAAK,SACLS,YAAY,kBACZ8F,aAAc2C,EAAYxH,OAC1B1E,MACGP,KAAKX,MAAM2F,KAERhF,KAAKpB,MAAM0G,MAAMsH,QACf,SAACnI,GAAI,OAAKA,EAAKO,OAAS,EAAK3F,MAAM2F,IAAI,IACvC,GAAGC,OAHL,GAKNjG,UAAU,eACVmO,UAAQ,OAGZ,eAAClK,EAAA,EAAS,CAACgK,KAAG,YACZ,cAAC/J,EAAA,EAAK,CAACC,QAAQ,eAAc,+BAC7B,cAACC,EAAA,EAAK,CACJC,KAAK,OACLC,GAAG,eACHC,KAAK,eACLS,YAAY,kBACZ8F,aACE+C,EAAYrK,UAAY,IAAMqK,EAAYnK,SAE5CnC,MACGP,KAAKX,MAAMyE,KAER9D,KAAKpB,MAAM+N,MAAMC,QACf,SAAC1C,GAAI,OAAKA,EAAKpG,OAAS,EAAKzE,MAAMyE,IAAI,IACvC,GAAGtB,UACL,IACAxC,KAAKpB,MAAM+N,MAAMC,QACf,SAAC1C,GAAI,OAAKA,EAAKpG,OAAS,EAAKzE,MAAMyE,IAAI,IACvC,GAAGpB,SAPL,GASN1D,UAAU,eACVmO,UAAQ,OAGZ,eAAClK,EAAA,EAAS,CAACgK,KAAG,YACZ,cAAC/J,EAAA,EAAK,CAACC,QAAQ,WAAU,mCACzB,cAACC,EAAA,EAAK,CACJC,KAAK,OACLC,GAAG,WACHC,KAAK,WACLS,YAAY,sBACZ8F,aAAc+C,EAAYvM,SAC1BC,MACGP,KAAKX,MAAMyE,KAER9D,KAAKpB,MAAM+N,MAAMC,QACf,SAAC1C,GAAI,OAAKA,EAAKpG,OAAS,EAAKzE,MAAMyE,IAAI,IACvC,GAAGxD,SAHL,GAKNtB,UAAU,eACVmO,UAAQ,OAGZ,cAAC7F,EAAA,EAAG,CAACtI,UAAU,oBAAmB,SAChC,cAACwI,EAAA,EAAG,CAACxI,UAAU,cAAa,SAC1B,cAACD,EAAA,EAAM,CAACsE,KAAK,SAASrE,UAAU,aAAY,6BAOpD,yBAIR,KAAC,EA/MQ,CAASoF,aCEhB8G,GAAY,EAEhB,SAASC,GAAY,GAA2B,IAAzBC,EAAK,EAALA,MAAOtG,EAAC,EAADA,EAAGsI,EAAU,EAAVA,WACzB/B,EAAQ,GACRC,EAAQ,IAAItC,KAClBqC,EAAM9E,KAAK+E,GACX,IAAMC,EAAY,IAAIvC,KAAKA,KAAKC,MAAMmC,EAAMlC,YACtCsC,EAAW,IAAIxC,KAAKA,KAAKC,MAAMmC,EAAMlC,YAC3CsC,EAASC,QAAQD,EAASE,UAAY,IACtCL,EAAM9E,KAAKiF,GACX,IAAMG,EAAaP,EAAMQ,SACrB,IAAI5C,KAAKA,KAAKC,MAAMmC,EAAMjC,YAC1B,IAAIH,KAAK6C,KAAKC,IAAIC,MAAM,KAAMV,IAC9BW,EAAO,EAWX,OATGL,EAAWM,UAAYV,EAAUU,WAAS,MAd3B,KAiBhBD,EAnBa,EAoBXH,KAAKzE,OACFuE,EAAWM,UAAYV,EAAUU,WAAS,QAGjDf,IAAac,EAEX,eAAC,IAAMlN,SAAQ,WACb,6BAAKgG,IACL,6BACE,cAAC,IAAI,CAACrD,GAAE,iBAAY2J,EAAMiC,QAAQtI,KAAM,SACrCqG,EAAMiC,QAAQ7K,UAAY,IAAM4I,EAAMiC,QAAQ3K,aAGnD,6BAAK0I,EAAMiC,QAAQvJ,OACnB,6BACiB,MAAdsH,EAAM3G,KACL,MAEA,cAAC,IAAI,CAAChD,GAAE,iBAAY2J,EAAM3G,KAAKM,KAAM,SAAEqG,EAAM3G,KAAKlB,SAGtD,6BAAmB,MAAd6H,EAAM3G,KAAe,MAAQ2G,EAAM3G,KAAKO,OAC7C,6BACG,IAAIuD,KAAKC,eAAe,QAAS,CAChCC,KAAM,UACNC,MAAO,QACPC,IAAK,YACJI,OAAO,IAAIC,KAAKA,KAAKC,MAAMmC,EAAMlC,eAEtC,6BACG,IAAIX,KAAKC,eAAe,QAAS,CAChCC,KAAM,UACNC,MAAO,QACPC,IAAK,YACJI,OAAOyC,KAEZ,6BAAKQ,IACL,6BACE,cAACjN,EAAA,EAAM,CACLsD,MAAM,OACNnD,QAAS,WACPkO,EAAWhC,EAAMrG,IACnB,EAAE,wBAOZ,CAAC,IAuGcuI,GArGH,kDACV,WAAY1O,GAAQ,IAAD,EAGN,OAHM,qBACjB,cAAMA,IACDS,MAAQ,CAAC,EACd,EAAKyF,EAAI,EAAE,CACb,CA6FC,OA7FA,8CAED,WACE5E,OAAOkF,SAAS,EAAG,EACrB,GAAC,oBAED,WAAU,IAAD,OAEP,GADAmI,QAAQC,IAAIxN,KAAKpB,MAAMuN,QACnBnM,KAAKpB,MAAMuN,OAAOxJ,UACpB,OACE,qBAAK3D,UAAU,YAAW,SACxB,qBAAKA,UAAU,MAAK,SAClB,cAAC,EAAO,QAIT,GAAIgB,KAAKpB,MAAMuN,OAAO9C,QAC3B,OACE,qBAAKrK,UAAU,oBAAmB,SAChC,qBAAKA,UAAU,cAAa,SAC1B,sBAAKA,UAAU,SAAQ,UACrB,uBACA,uBACA,uBACA,uBACA,6BAAKgB,KAAKpB,MAAMyK,iBAKnB,GAAwC,IAApCrJ,KAAKpB,MAAMuN,OAAOA,OAAO9N,OAClC,OACE,qBAAKW,UAAU,oBAAmB,SAChC,qBAAKA,UAAU,cAAa,SAC1B,sBAAKA,UAAU,qBAAoB,UACjC,uBACA,uBACA,uBACA,uBACA,6BAAK,yCAMb,IAGMqG,EAHYrF,KAAKpB,MAAMuN,OAAOA,OAAOS,QACzC,SAACxB,GAAK,OAAMA,EAAMQ,QAAQ,IAELrG,KAAI,SAAC6F,GAC1B,OACE,6BACE,cAAC,GAAW,CACVA,MAAOA,EACPtG,EAAG,EAAKA,IACRsI,WAAY,EAAKxO,MAAM6O,eAJlBrC,EAAMrG,IAQnB,IAEA,OACE,qBAAK/F,UAAU,oDAAmD,SAChE,qBAAKA,UAAU,yCAAwC,SACrD,sBAAKA,UAAU,iBAAgB,UAC7B,4DACA,eAAC0G,EAAA,EAAK,CAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,YACtC,gCACE,+BACE,uCACA,iDACA,0CACA,8CACA,6CACA,4CACA,iDACA,+CACA,kDAGJ,gCAAQT,OAEV,uBACA,+BACG,IAAG,iEAC2D,IAC9D6F,GAAW,OAEd,6BAMZ,KAAC,EAlGS,CAAS9G,aCLNsJ,GAnEC,kDACd,WAAY9O,GAAQ,IAAD,EAED,OAFC,qBACjB,cAAMA,IACDS,MAAQ,CAAC,EAAE,CAClB,CA4DC,OA5DA,8CAED,WACEa,OAAOkF,SAAS,EAAG,EACrB,GAAC,oBAED,WACE,OAAIpF,KAAKpB,MAAM+D,UAEX,qBAAK3D,UAAU,YAAW,SACxB,qBAAKA,UAAU,MAAK,SAClB,cAAC,EAAO,QAILgB,KAAKpB,MAAMyK,QAElB,qBAAKrK,UAAU,oBAAmB,SAChC,qBAAKA,UAAU,cAAa,SAC1B,sBAAKA,UAAU,SAAQ,UACrB,uBACA,uBACA,uBACA,uBACA,6BAAKgB,KAAKpB,MAAMyK,iBAOtB,qBAAKrK,UAAU,oDAAmD,SAChE,qBAAKA,UAAU,yCAAwC,SACrD,eAACgJ,EAAA,EAAI,CAAChJ,UAAU,UAAS,UACvB,cAACiJ,EAAA,EAAU,UACT,gDAEF,cAACC,GAAA,EAAQ,UACP,eAACE,GAAA,EAAQ,WACP,+BACG,IAAG,gBACU,aAAepI,KAAKpB,MAAMsL,KAAK1H,aAE/C,+BACG,IAAG,eACS,aAAexC,KAAKpB,MAAMsL,KAAKxH,YAE9C,+BACG,IACA1C,KAAKpB,MAAMsL,KAAKtI,MAAQ,WAAa,WAAU,KAAI,IACnD,aAAe5B,KAAKpB,MAAMsL,KAAKpG,QAElC,2CAAc,aAAe9D,KAAKpB,MAAMsL,KAAKrG,SAC7C,8CAAiB,aAAe7D,KAAKpB,MAAMsL,KAAK5J,uBAOhE,KAAC,EAhEa,CAAS8D,a,UCiLVuJ,GAzKJ,kDACT,WAAY/O,GAAQ,IAAD,EAGN,OAHM,qBACjB,cAAMA,IACDS,MAAQ,CAAC,EACd,EAAKyF,EAAI,EAAE,CACb,CAiKC,OAjKA,8CACD,WACE5E,OAAOkF,SAAS,EAAG,EACrB,GAAC,oBAED,WACE,OACEpF,KAAKpB,MAAMuN,OAAOxJ,WAClB3C,KAAKpB,MAAM4G,cACXxF,KAAKpB,MAAMyN,aAGT,qBAAKrN,UAAU,YAAW,SACxB,qBAAKA,UAAU,MAAK,SAClB,cAAC,EAAO,QAILgB,KAAKpB,MAAMuN,OAAO9C,QAEzB,qBAAKrK,UAAU,oBAAmB,SAChC,qBAAKA,UAAU,cAAa,SAC1B,sBAAKA,UAAU,SAAQ,UACrB,uBACA,uBACA,uBACA,uBACA,6BAAKgB,KAAKpB,MAAMuN,OAAO9C,iBAKtBrJ,KAAKpB,MAAM0N,aAElB,qBAAKtN,UAAU,oBAAmB,SAChC,qBAAKA,UAAU,cAAa,SAC1B,sBAAKA,UAAU,SAAQ,UACrB,uBACA,uBACA,uBACA,uBACA,6BAAKgB,KAAKpB,MAAM0N,sBAKftM,KAAKpB,MAAM6G,aAElB,qBAAKzG,UAAU,oBAAmB,SAChC,qBAAKA,UAAU,cAAa,SAC1B,sBAAKA,UAAU,SAAQ,UACrB,uBACA,uBACA,uBACA,uBACA,6BAAKgB,KAAKpB,MAAM6G,sBAOtB,sBAAKzG,UAAU,oDAAmD,UAChE,qBAAKA,UAAU,iDAAgD,SAC7D,qBAAKA,UAAU,SAAQ,SACrB,2CAGJ,sBAAKA,UAAU,MAAK,UAClB,qBAAKA,UAAU,gCAA+B,SAC5C,cAACgJ,EAAA,EAAI,UACH,eAACE,GAAA,EAAQ,WACP,cAACC,GAAA,EAAS,UACR,6BAAKnI,KAAKpB,MAAM0G,MAAMjH,WAExB,cAAC+J,GAAA,EAAQ,wCACT,cAACwF,GAAA,EAAQ,CAAC3L,IAAKC,IAAMT,GAAG,SAAQ,SAC9B,eAAC1C,EAAA,EAAM,CAACsD,MAAM,OAAM,UAClB,mBAAGrD,UAAU,oBAAoB,wBAO3C,qBAAKA,UAAU,gCAA+B,SAC5C,cAACgJ,EAAA,EAAI,UACH,eAACE,GAAA,EAAQ,WACP,cAACC,GAAA,EAAS,UACR,6BAAKnI,KAAKpB,MAAMuN,OAAOA,OAAO9N,WAEhC,cAAC+J,GAAA,EAAQ,2BACT,cAACwF,GAAA,EAAQ,CAAC3L,IAAKC,IAAMT,GAAG,QAAO,SAC7B,eAAC1C,EAAA,EAAM,CAACsD,MAAM,OAAM,UAClB,mBAAGrD,UAAU,oBAAoB,wBAM3C,qBAAKA,UAAU,gCAA+B,SAC5C,cAACgJ,EAAA,EAAI,UACH,eAACE,GAAA,EAAQ,WACP,cAACC,GAAA,EAAS,UACR,6BAEInI,KAAKpB,MAAMuN,OAAOA,OAAOS,QACvB,SAACxB,GAAK,OAAMA,EAAMQ,QAAQ,IAC1BvN,WAIR,cAAC+J,GAAA,EAAQ,qCACT,cAACwF,GAAA,EAAQ,UACP,eAAC7O,EAAA,EAAM,CAACkD,IAAKC,IAAMT,GAAG,UAAUY,MAAM,OAAM,UAC1C,mBAAGrD,UAAU,oBAAoB,wBAM3C,qBAAKA,UAAU,gCAA+B,SAC5C,cAACgJ,EAAA,EAAI,UACH,eAACE,GAAA,EAAQ,WACP,cAACC,GAAA,EAAS,UACR,6BACGnI,KAAKpB,MAAM+N,MAAMC,QAAO,SAAC1C,GAAI,OAAMA,EAAKtI,KAAK,IAAEvD,WAGpD,cAAC+J,GAAA,EAAQ,kCACT,cAACwF,GAAA,EAAQ,CAAC3L,IAAKC,IAAMT,GAAG,iBAAgB,SACtC,eAAC1C,EAAA,EAAM,CAACsD,MAAM,OAAM,UAClB,mBAAGrD,UAAU,oBAAoB,wBAM3C,qBAAKA,UAAU,gCAA+B,SAC5C,cAACgJ,EAAA,EAAI,UACH,eAACE,GAAA,EAAQ,WACP,cAACC,GAAA,EAAS,UACR,6BACGnI,KAAKpB,MAAM+N,MAAMC,QAAO,SAAC1C,GAAI,OAAKA,EAAKtI,KAAK,IAAEvD,WAGnD,cAAC+J,GAAA,EAAQ,uCACT,cAACwF,GAAA,EAAQ,CAAC3L,IAAKC,IAAMT,GAAG,eAAc,SACpC,eAAC1C,EAAA,EAAM,CAACsD,MAAM,OAAM,UAClB,mBAAGrD,UAAU,oBAAoB,2BAQ7C,yBAIR,KAAC,EAtKQ,CAASoF,aCJpB,SAAS+G,GAAY,GAAe,IAAbC,EAAK,EAALA,MAAOtG,EAAC,EAADA,EACtBuG,EAAQ,GACRC,EAAQ,IAAItC,KAClBqC,EAAM9E,KAAK+E,GACX,IAAMC,EAAY,IAAIvC,KAAKA,KAAKC,MAAMmC,EAAMlC,YACtCsC,EAAW,IAAIxC,KAAKA,KAAKC,MAAMmC,EAAMlC,YAC3CsC,EAASC,QAAQD,EAASE,UAAY,IACtCL,EAAM9E,KAAKiF,GACX,IAAMG,EAAaP,EAAMQ,SACrB,IAAI5C,KAAKA,KAAKC,MAAMmC,EAAMjC,YAC1B,IAAIH,KAAK6C,KAAKC,IAAIC,MAAM,KAAMV,IAC9BW,EAAO,EAUX,OARGL,EAAWM,UAAYV,EAAUU,WAAS,MAd3B,KAiBhBD,EAnBa,EAoBXH,KAAKzE,OACFuE,EAAWM,UAAYV,EAAUU,WAAS,QAI/C,eAAC,IAAMnN,SAAQ,WACb,6BAAKgG,IACL,6BACE,cAAC,IAAI,CAACrD,GAAE,iBAAY2J,EAAMiC,QAAQtI,KAAM,SACrCqG,EAAMiC,QAAQ7K,UAAY,IAAM4I,EAAMiC,QAAQ3K,aAGnD,6BAAK0I,EAAMiC,QAAQvJ,OACnB,6BACiB,MAAdsH,EAAM3G,KACL,MAEA,cAAC,IAAI,CAAChD,GAAE,iBAAY2J,EAAM3G,KAAKM,KAAM,SAAEqG,EAAM3G,KAAKlB,SAGtD,6BAAmB,MAAd6H,EAAM3G,KAAe,MAAQ2G,EAAM3G,KAAKO,OAC7C,6BACG,IAAIuD,KAAKC,eAAe,QAAS,CAChCC,KAAM,UACNC,MAAO,QACPC,IAAK,YACJI,OAAO,IAAIC,KAAKA,KAAKC,MAAMmC,EAAMlC,eAEtC,6BACG,IAAIX,KAAKC,eAAe,QAAS,CAChCC,KAAM,UACNC,MAAO,QACPC,IAAK,YACJI,OAAOyC,KAEZ,6BACGJ,EAAMQ,SACH,eACA,IAAIrD,KAAKC,eAAe,QAAS,CAC/BC,KAAM,UACNC,MAAO,QACPC,IAAK,YACJI,OAAO,IAAIC,KAAKA,KAAKC,MAAM0C,KAC9B,qBAEN,6BAAKK,MAGX,CAAC,IA2Fc6B,GAzFN,kDACP,WAAYjP,GAAQ,IAAD,EAGN,OAHM,qBACjB,cAAMA,IACDS,MAAQ,CAAC,EACd,EAAKyF,EAAI,EAAE,CACb,CAiFC,OAjFA,8CACD,WACE5E,OAAOkF,SAAS,EAAG,EACrB,GAAC,oBAED,WAAU,IAAD,OACP,GAAIpF,KAAKpB,MAAMuN,OAAOxJ,UACpB,OACE,qBAAK3D,UAAU,YAAW,SACxB,qBAAKA,UAAU,MAAK,SAClB,cAAC,EAAO,QAIT,GAAIgB,KAAKpB,MAAMuN,OAAO9C,QAC3B,OACE,qBAAKrK,UAAU,oBAAmB,SAChC,qBAAKA,UAAU,cAAa,SAC1B,sBAAKA,UAAU,SAAQ,UACrB,uBACA,uBACA,uBACA,uBACA,6BAAKgB,KAAKpB,MAAMyK,iBAKnB,GAAwC,IAApCrJ,KAAKpB,MAAMuN,OAAOA,OAAO9N,OAClC,OACE,qBAAKW,UAAU,oBAAmB,SAChC,qBAAKA,UAAU,cAAa,SAC1B,sBAAKA,UAAU,qBAAoB,UACjC,uBACA,uBACA,uBACA,uBACA,6BAAK,mCACL,6BAAK,yCAMb,IAAMqG,EAAOrF,KAAKpB,MAAMuN,OAAOA,OAAO5G,KAAI,SAAC6F,GACzC,OACE,6BACE,cAAC,GAAW,CAACA,MAAOA,EAAOtG,EAAG,EAAKA,OAD5BsG,EAAMrG,IAInB,IAEA,OACE,qBAAK/F,UAAU,oDAAmD,SAChE,qBAAKA,UAAU,yCAAwC,SACrD,sBAAKA,UAAU,iBAAgB,UAC7B,2CACA,eAAC0G,EAAA,EAAK,CAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,YACtC,gCACE,+BACE,uCACA,iDACA,0CACA,8CACA,6CACA,4CACA,iDACA,+CACA,oDAGJ,gCAAQT,OAEV,uBAEA,6BAMZ,KAAC,EAtFM,CAASjB,aCtElB,SAAS0J,GAAW,GAAc,IAAZ5D,EAAI,EAAJA,KAAMpF,EAAC,EAADA,EAC1B,OACE,eAAC,IAAMhG,SAAQ,WACb,6BAAKgG,IACL,6BACE,cAAC,IAAI,CAACrD,GAAE,iBAAYyI,EAAKnF,KAAM,SAC5BmF,EAAK1H,UAAY,IAAM0H,EAAKxH,aAGjC,6BAAKwH,EAAKpG,OACV,6BAAKoG,EAAK5J,WACV,6BAAK4J,EAAKrG,UAGhB,CAAC,IA+FckK,GA7FD,kDACZ,WAAYnP,GAAQ,IAAD,EAGN,OAHM,qBACjB,cAAMA,IACDS,MAAQ,CAAC,EACd,EAAKyF,EAAI,EAAE,CACb,CAqFC,OArFA,8CACD,WACE5E,OAAOkF,SAAS,EAAG,EACrB,GAAC,oBAED,WAAU,IAAD,OACP,GAAIpF,KAAKpB,MAAMyN,aACb,OACE,qBAAKrN,UAAU,YAAW,SACxB,qBAAKA,UAAU,MAAK,SAClB,cAAC,EAAO,QAIT,GAAIgB,KAAKpB,MAAM0N,aACpB,OACE,qBAAKtN,UAAU,oBAAmB,SAChC,qBAAKA,UAAU,cAAa,SAC1B,sBAAKA,UAAU,SAAQ,UACrB,uBACA,uBACA,uBACA,uBACA,6BAAKgB,KAAKpB,MAAMyK,iBAKnB,GAAgC,IAA5BrJ,KAAKpB,MAAM+N,MAAMtO,OAC1B,OACE,qBAAKW,UAAU,oBAAmB,SAChC,qBAAKA,UAAU,cAAa,SAC1B,sBAAKA,UAAU,qBAAoB,UACjC,uBACA,uBACA,uBACA,uBACA,6BAAK,0BAMb,IAAMqG,EAAOrF,KAAKpB,MAAM+N,MAAMpH,KAAI,SAAC2E,GACjC,OACE,6BACE,cAAC4D,GAAU,CAAC5D,KAAMA,EAAMpF,EAAG,EAAKA,OADzBoF,EAAKnF,IAIlB,IAEA,OACE,qBAAK/F,UAAU,oDAAmD,SAChE,qBAAKA,UAAU,yCAAwC,SACrD,sBAAKA,UAAU,iBAAgB,UAC7B,yCACU,IACPgB,KAAKpB,MAAM+N,MAAM,GAAG/K,MACjB,oBACA,0BAEN,eAAC8D,EAAA,EAAK,CAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,YACtC,gCACE,+BACE,uCACA,yCACU,IACP9F,KAAKpB,MAAM+N,MAAM,GAAG/K,MAAQ,SAAW,cAE1C,6BACG5B,KAAKpB,MAAM+N,MAAM,GAAG/K,MAAQ,YAAc,cAE7C,0CACA,4CAGJ,gCAAQyD,OAEV,uBACA,6BAMZ,KAAC,EA1FW,CAASjB,a,kBCrBV4J,GAAgB,gBAChBC,GAAe,eACfC,GAAY,YACZC,GAAW,WACXC,GAAY,YACZC,GAAc,cACdC,GAAgB,gBAChBC,GAAgB,gBAChBC,GAAgB,gBAChBC,GAAiB,iBACjBC,GAAiB,iBAEjBC,GAAY,YACZC,GAAgB,gBAChBC,GAAiB,iBACjBC,GAAgB,gBAChBC,GAAa,aACbC,GAAY,YACZC,GAAe,eACfC,GAAgB,gBAChBC,GAAe,eACfC,GAAY,YCrBZC,GAAQ,uCCQRzE,GACX,SAACrH,EAAM0B,EAAQoD,EAAarD,EAAMgB,EAAKoB,EAAOC,EAAOnC,GAAM,OAC3D,SAACoK,GACC,IAAMC,EAAU,CACdhM,KAAMA,EACN0B,OAAQA,EACRoD,YAAaA,EACbrD,KAAMA,EACNgB,IAAKA,EACLoB,MAAOA,EACPC,MAAOA,EACPnC,OAAQA,GAEJsK,EAAS,UAAYC,aAAaC,QAAQ,SAChD,OAAOC,MAAMN,GAAU,QAAS,CAC9BO,OAAQ,OACRC,KAAMC,KAAKC,UAAUR,GACrBS,QAAS,CACP,eAAgB,mBAChBC,cAAeT,KAIhBU,MACC,SAACC,GACC,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MACd,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAG/C,MADAH,EAAMF,SAAWA,EACXE,CAEV,IACA,SAACA,GACC,MAAMA,CACR,IAEDH,MAAK,SAACC,GAAQ,OAAKA,EAASM,MAAM,IAClCP,MAAK,SAACC,GAEL,OADAhG,MAAM,2BACCmF,EA/CmB,CAChCjM,KAAMqN,GACNC,QA6C8BR,GAC1B,IACCS,OAAM,SAACP,GACNlG,MAAM,wCAA0CkG,EAAMQ,QACxD,GACJ,CAAE,EAkMSC,GAAa,WAAH,OAAS,SAACxB,GAC/B,IAAME,EAAS,UAAYC,aAAaC,QAAQ,SAEhD,OADAJ,EAASjD,IAAa,IACfsD,MAAMN,GAAU,QAAS,CAC9BW,QAAS,CACPC,cAAeT,KAGhBU,MACC,SAACC,GACC,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MACd,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAG/C,MADAH,EAAMF,SAAWA,EACXE,CAEV,IACA,SAACA,GAEC,MADc,IAAIC,MAAMD,EAAMQ,QAEhC,IAEDX,MAAK,SAACC,GAAQ,OAAKA,EAASM,MAAM,IAClCP,MAAK,SAACvD,GAAK,OAAK2C,EAASyB,GAASpE,GAAO,IACzCiE,OAAM,SAACP,GAAK,OAAKf,EAAS0B,GAAYX,EAAMQ,SAAS,GAC1D,CAAE,EAEWrL,GAAe,WAAH,MAAU,CACjCnC,KAAMqN,GACP,EAEYO,GAAc,SAACC,GAAO,MAAM,CACvC7N,KAAMqN,GACNC,QAASO,EACV,EAEYC,GAAW,SAAC7L,GAAK,MAAM,CAClCjC,KAAMqN,GACNC,QAASrL,EACV,EAEYyL,GAAW,SAACpE,GAAK,MAAM,CAClCtJ,KAAMqN,GACNC,QAAShE,EACV,EAEYN,GAAe,WAAH,MAAU,CACjChJ,KAAMqN,GACP,EAEYU,GAAmB,SAAC9L,GAAK,MAAM,CAC1CjC,KAAMqN,GACNC,QAASrL,EACV,EAOY+L,GAAmB,SAACC,GAAI,MAAM,CACzCjO,KAAMqN,GACNC,QAASW,EACV,EAEYC,GAAuB,SAACC,GAAK,MAAM,CAC9CnO,KAAMqN,GACNC,QAASa,EACV,EAEYC,GAAqB,SAACC,GAAI,MAAM,CAC3CrO,KAAMqN,GACNC,QAASe,EACV,EAwBYrR,GAAY,SAACsR,GAAK,OAAK,SAACrC,GAEnC,OADAA,EAvB0B,SAACqC,GAC3B,MAAO,CACLtO,KAAMqN,GACNiB,QAEJ,CAkBWC,CAAaD,IACfhC,MAAMN,GAAU,cAAe,CACpCO,OAAQ,OACRI,QAAS,CACP,eAAgB,oBAElBH,KAAMC,KAAKC,UAAU4B,KAEpBzB,MACC,SAACC,GACC,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MACd,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAG/C,MADAH,EAAMF,SAAWA,EACXE,CAEV,IACA,SAACA,GACC,MAAMA,CACR,IAEDH,MAAK,SAACC,GAAQ,OAAKA,EAASM,MAAM,IAClCP,MAAK,SAACC,GACL,IAAIA,EAAS0B,QAiBN,CACL,IAAIxB,EAAQ,IAAIC,MAAM,SAAWH,EAASI,QAE1C,MADAF,EAAMF,SAAWA,EACXE,CACR,CAnBEZ,aAAaqC,QAAQ,QAAS3B,EAAS4B,OACvCtC,aAAaqC,QAAQ,QAAShC,KAAKC,UAAU4B,IAC7ClC,aAAaqC,QAAQ,WAAYhC,KAAKC,UAAUI,EAASxO,WACzD2N,EAAS0C,IAAa7B,EAASxO,SAASC,QACpCuO,EAASxO,SAASC,OACpB0N,EAASwB,MAEXmB,YAAW,WACTvR,KACAyJ,MACE,iEAEJ,GAAG,MAEHmF,EA1DoB,SAACa,GAC3B,MAAO,CACL9M,KAAMqN,GACNqB,MAAO5B,EAAS4B,MAChBpQ,SAAUwO,EAASxO,SAEvB,CAoDiBuQ,CAAa/B,GAM1B,IACCS,OAAM,SAACP,GAEN,OADAlG,MAAMkG,EAAMQ,QAANR,wCACCf,GA3DcuB,EA2DMR,EAAMQ,QA1D9B,CACLxN,KAAMqN,GACNG,aAHsB,IAACA,CA4DvB,GACJ,CAAE,EAmDW7D,GAAY,SAACmF,EAAQC,GAAS,OAAK,SAAC9C,GAC/C,IAAM+C,EAAW,CACf5N,KAAM0N,EACN9E,QAAS+E,GAEL5C,EAAS,UAAYC,aAAaC,QAAQ,SAChD,OAAOC,MAAMN,GAAU,SAAU,CAC/BO,OAAQ,OACRC,KAAMC,KAAKC,UAAUsC,GACrBrC,QAAS,CACP,eAAgB,mBAChBC,cAAeT,KAIhBU,MACC,SAACC,GACC,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MACd,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAG/C,MADAH,EAAMF,SAAWA,EACXE,CAEV,IACA,SAACA,GACC,MAAMA,CACR,IAEDH,MAAK,SAACC,GAAQ,OAAKA,EAASM,MAAM,IAClCP,MAAK,SAACC,GAEL,OADAhG,MAAM,4BACCmF,EAvCuB,CAClCjM,KAAMqN,GACNC,QAqC6BR,GAC3B,IACCS,OAAM,SAACP,GACNlG,MACE,oCACEkG,EAAMQ,QADR,kMAMJ,GACJ,CAAE,EAEWpD,GAAc,SAAC6E,GAAO,OAAK,SAAChD,GACvC,IAAME,EAAS,UAAYC,aAAaC,QAAQ,SAChD,OAAOC,MAAMN,GAAU,UAAYiD,EAAS,CAC1C1C,OAAQ,MAERI,QAAS,CACP,eAAgB,mBAChBC,cAAeT,KAGhBU,MACC,SAACC,GACC,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MACd,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAG/C,MADAH,EAAMF,SAAWA,EACXE,CAEV,IACA,SAACA,GACC,MAAMA,CACR,IAEDH,MAAK,SAACC,GAAQ,OAAKA,EAASM,MAAM,IAClCP,MAAK,SAACC,GAEL,OADAhG,MAAM,8BACCmF,EA/NiC,CAC5CjM,KAAMqN,GACNC,QA6NuCR,GACrC,IACCS,OAAM,SAACP,GACNlG,MAAM,0CAA4CkG,EAAMQ,QAC1D,GACJ,CAAE,EAEWmB,GAAc,SAAC3E,GAAO,OAAK,SAACiC,GACvC,IAAIiD,EACE/C,EAAS,UAAYC,aAAaC,QAAQ,SAOhD,OALE6C,EADElF,EACS,iBAEA,SAEbiC,EAASkD,IAAc,IAChB7C,MAAMN,GAAUkD,EAAU,CAC/BvC,QAAS,CACPC,cAAeT,KAGhBU,MACC,SAACC,GACC,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MACd,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAG/C,MADAH,EAAMF,SAAWA,EACXE,CAEV,IACA,SAACA,GAEC,MADc,IAAIC,MAAMD,EAAMQ,QAEhC,IAEDX,MAAK,SAACC,GAAQ,OAAKA,EAASM,MAAM,IAClCP,MAAK,SAAC/D,GAAM,OAAKmD,EAASmD,GAAUtG,GAAQ,IAC5CyE,OAAM,SAACP,GAAK,OAAKf,EAASoD,GAAarC,EAAMQ,SAAS,GAC3D,CAAE,EAEW2B,GAAgB,WAAH,MAAU,CAClCnP,KAAMqN,GACP,EAEYgC,GAAe,SAACxB,GAAO,MAAM,CACxC7N,KAAMqN,GACNC,QAASO,EACV,EAEYuB,GAAY,SAACtG,GAAM,MAAM,CACpC9I,KAAMqN,GACNC,QAASxE,EACV,EAEY6E,GAAc,SAACE,GAAO,MAAM,CACvC7N,KAAMqN,GACNC,QAASO,EACV,EAcYxQ,GAAa,WAAH,OAAS,SAAC4O,GAC/BA,EAZO,CACLjM,KAAMqN,KAYRjB,aAAakD,WAAW,SACxBlD,aAAakD,WAAW,SACxBlD,aAAakD,WAAW,YACxBrD,EAVO,CACLjM,KAAMqN,IAUV,CAAE,E,OCtjBakC,OA3Cf,WACE,OACE,qBAAK5T,UAAU,aAAY,SACzB,sBAAKA,UAAU,mBAAkB,UAC/B,sBAAKA,UAAU,gBAAe,UAC5B,4DACA,wTASF,2DACA,sBAAKA,UAAU,kBAAiB,UAC9B,sBAAKA,UAAU,gBAAe,UAC5B,qBAAKA,UAAU,iBAAiBiC,IAAI,iBAAiBE,IAAI,KACzD,8CACA,+CAEF,sBAAKnC,UAAU,gBAAe,UAC5B,qBAAKA,UAAU,iBAAiBiC,IAAI,eAAeE,IAAI,KACvD,8CACA,+CAEF,sBAAKnC,UAAU,gBAAe,UAC5B,qBAAKA,UAAU,iBAAiBiC,IAAI,iBAAiBE,IAAI,KACzD,gDACA,+CAEF,sBAAKnC,UAAU,gBAAe,UAC5B,qBAAKA,UAAU,iBAAiBiC,IAAI,cAAcE,IAAI,KACtD,2CACA,sDAMZ,E,mDCGMhD,GAAW,SAACC,GAAG,OAAKA,GAAOA,EAAIC,MAAO,EACtCgM,GAAc,SAACjM,GAAG,QAAOA,CAAI,EAE7BI,GAAY,SAACD,GAAG,OAAK,SAACH,GAAG,OAAKA,GAAOA,EAAIC,QAAUE,CAAI,CAAD,EACtD+L,GAAS,SAAC/L,GAAG,OAAK,SAACH,GAAG,OAAMA,GAAOA,GAAOG,CAAI,CAAD,EAC7CgM,GAAS,SAAChM,GAAG,OAAK,SAACH,GAAG,OAAKA,GAAOA,GAAOG,CAAI,CAAD,EAC5CiM,GAAW,SAACpM,GAAG,OAAMqM,MAAMC,OAAOtM,GAAM,EAyCxCyU,GAAI,kDAUR,WAAYjU,GAAQ,IAAD,EAUwC,OAVxC,qBACjB,cAAMA,IACDS,MAAQ,CACXyT,mBAAmB,EACnBvJ,iBAAiB,EACjBwJ,aAAc,MAEhB,EAAKnO,kBAAoB,EAAKA,kBAAkBjF,KAAK,gBACrD,EAAKkF,gBAAkB,EAAKA,gBAAgBlF,KAAK,gBACjD,EAAK+E,eAAiB,EAAKA,eAAe/E,KAAK,gBAC/C,EAAKqT,iBAAmB,EAAKA,iBAAiBrT,KAAK,gBAAM,CAC3D,CAkkBC,OAlkBA,8CApBD,WACEK,KAAKpB,MAAMqU,aACPjT,KAAKpB,MAAM8C,KAAKS,iBAClBnC,KAAKpB,MAAMoT,aAAahS,KAAKpB,MAAM8C,KAAKC,SAASC,OAE/C5B,KAAKpB,MAAM8C,KAAKS,iBAAmBnC,KAAKpB,MAAM8C,KAAKC,SAASC,OAC9D5B,KAAKpB,MAAMkS,YAEf,GAAC,8BAcD,SAAiBnN,GACf3D,KAAK6E,kBACL7E,KAAKpB,MAAMsU,SACTlT,KAAKX,MAAM0T,aAAahO,IACxBpB,EAAOJ,KACPI,EAAOsB,OACPtB,EAAO0E,YACP1E,EAAOqB,KACPrB,EAAOqC,IACPrC,EAAOyD,MACPzD,EAAO0D,MACP1D,EAAOuB,OAEX,GAAC,4BAED,SAAeH,GACb/E,KAAKC,SAAS,CACZ8S,aAAc/S,KAAKpB,MAAM0G,MAAMA,MAAMsH,QACnC,SAACnI,GAAI,OAAKA,EAAKM,MAAQA,CAAG,IAC1B,IAEN,GAAC,+BAED,WACE/E,KAAKC,SAAS,CAAE6S,mBAAoB9S,KAAKX,MAAMyT,mBACjD,GAAC,6BAED,WACE9S,KAAKC,SAAS,CAAEsJ,iBAAkBvJ,KAAKX,MAAMkK,iBAC/C,GAAC,oBAED,WAAU,IAgGU4J,EAnMH5U,EAsMG6U,EAnGX,OA0CDC,EAAqB,SAAH,OAAiBjP,EAAS,EAApBkP,UAAyBC,EAAI,yBACzD,cAAC,KAAK,2BACAA,GAAI,IACRC,OAAQ,SAAC5U,GAAK,OACZ,EAAKA,MAAM8C,KAAKS,gBACd,cAACiC,EAAS,eAAKxF,IAEf,cAAC,KAAQ,CACP6C,GAAI,CACFgS,SAAU,QACVpU,MAAO,CAAEqU,KAAM9U,EAAM+U,YAG1B,IAEH,EAGEC,EAAoB,SAAH,OAAiBxP,EAAS,EAApBkP,UAAyBC,EAAI,yBACxD,cAAC,KAAK,2BACAA,GAAI,IACRC,OAAQ,SAAC5U,GAAK,OACZ,EAAKA,MAAM8C,KAAKS,iBAAmB,EAAKvD,MAAM8C,KAAKC,SAASC,MAC1D,cAACwC,EAAS,eAAKxF,IAEf,cAAC,KAAQ,CACP6C,GAAI,CACFgS,SAAU,QACVpU,MAAO,CAAEqU,KAAM9U,EAAM+U,YAG1B,IAEH,EAGEE,EAAe,SAAH,OAAiBzP,EAAS,EAApBkP,UAAyBC,EAAI,yBACnD,cAAC,KAAK,2BACAA,GAAI,IACRC,OAAQ,SAAC5U,GAAK,OACZ,EAAKA,MAAM8C,KAAKS,kBAAoB,EAAKvD,MAAM8C,KAAKC,SAASC,MAC3D,cAACwC,EAAS,eAAKxF,IAEf,cAAC,KAAQ,CACP6C,GAAI,CACFgS,SAAU,QACVpU,MAAO,CAAEqU,KAAM9U,EAAM+U,YAG1B,IAEH,EAUJ,OACE,eAAC,WAAQ,WACP,cAAC,EAAM,CACLjS,KAAM1B,KAAKpB,MAAM8C,KACjBrB,UAAWL,KAAKpB,MAAMyB,UACtBK,WAAYV,KAAKpB,MAAM8B,WACvBkD,aAAc5D,KAAKpB,MAAMgF,eAE3B,eAAC,KAAM,CAAC+P,SAAU3T,KAAKpB,MAAM+U,SAAS,UACpC,cAAC,KAAK,CAACG,OAAK,EAACC,KAAK,QAAQT,UAAW,kBAAM,cAAC,EAAI,GAAG,IACnD,cAAC,KAAK,CAACQ,OAAK,EAACC,KAAK,SAAST,UAAW,kBAAM,cAAC,GAAK,GAAG,IACrD,cAAC,KAAK,CACJQ,OAAK,EACLC,KAAK,UACLT,UAAW,kBACT,cAAC,EAAM,CACLhO,MAAO,EAAK1G,MAAM0G,MAAMA,MACxBE,aAAc,EAAK5G,MAAM0G,MAAM3C,UAC/B8C,aAAc,EAAK7G,MAAM0G,MAAM+D,QAC/BxK,WAAY,EAAKD,MAAM8C,KAAKS,gBAC5BwC,QAC8B,MAA5B,EAAK/F,MAAM8C,KAAKC,UAEZ,EAAK/C,MAAM8C,KAAKC,SAASC,MAE/BiD,gBAAiB,EAAKA,gBACtBD,kBAAmB,EAAKA,kBACxBF,eAAgB,EAAKA,gBACrB,IAIN,cAAC,KAAK,CACJoP,OAAK,EACLC,KAAK,SACLT,UAAW,kBACT,cAAC,EAAQ,CACPhO,MAAO,EAAK1G,MAAM0G,MAAMA,MACxBE,aAAc,EAAK5G,MAAM0G,MAAM3C,UAC/B8C,aAAc,EAAK7G,MAAM0G,MAAM+D,QAC/BxK,WAAY,EAAKD,MAAM8C,KAAKS,gBAC5BwC,QAC8B,MAA5B,EAAK/F,MAAM8C,KAAKC,UAEZ,EAAK/C,MAAM8C,KAAKC,SAASC,MAE/BF,KAAM,EAAK9C,MAAM8C,KACjBmD,gBAAiB,EAAKA,gBACtBD,kBAAmB,EAAKA,kBACxBF,eAAgB,EAAKA,gBACrB,IAGN,cAAC,KAAK,CAACqP,KAAK,iBAAiBT,UA3JhB,SAAH,GAAmB,IAAbU,EAAK,EAALA,MAChBjB,EAAe,EAAKnU,MAAM0G,MAAMA,MAAMsH,QACxC,SAACnI,GAAI,OAAKA,EAAKM,MAAQiP,EAAMC,OAAO9B,MAAM,IAC1C,GACE+B,EAAc,KAIlB,YAHqBC,IAAjBpB,IACFmB,EAAc,oCAGd,cAAC,GAAU,CACTzP,KAAMsO,EACNpQ,UAAW,EAAK/D,MAAM0G,MAAM3C,UAC5B0G,QAAS,EAAKzK,MAAM0G,MAAM+D,SAAW6K,EACrCrP,gBAAiB,EAAKA,gBACtBH,eAAgB,EAAKA,eACrBC,QAC8B,MAA5B,EAAK/F,MAAM8C,KAAKC,UAEZ,EAAK/C,MAAM8C,KAAKC,SAASC,OAIrC,IAsIM,cAACyR,EAAkB,CACjBS,OAAK,EACLC,KAAK,WACLT,UAAW,kBACT,cAAC,GAAO,CACN5R,KAAM,EAAK9C,MAAM8C,KACjBmI,SAAU,EAAKjL,MAAMiL,SACrBI,aAAc,EAAKrL,MAAMqL,cACzB,IAGN,cAAC2J,EAAiB,CAChBE,OAAK,EACLC,KAAK,YACLT,UAAW,kBACT,cAAC,GAAO,CACN3O,QAC8B,MAA5B,EAAK/F,MAAM8C,KAAKC,UAEZ,EAAK/C,MAAM8C,KAAKC,SAASC,MAE/BgJ,SAAU,EAAKhM,MAAMgM,SACrBtF,MAAO,EAAK1G,MAAM0G,MAAMA,MACxBE,aAAc,EAAK5G,MAAM0G,MAAM3C,UAC/B8C,aAAc,EAAK7G,MAAM0G,MAAM+D,SAC/B,IAGN,cAACwK,EAAY,CACXC,OAAK,EACLC,KAAK,WACLT,UAAW,kBACT,cAAC,GAAO,CAAC5R,KAAM,EAAK9C,MAAM8C,KAAMmI,SAAU,EAAKjL,MAAMiL,UAAY,IAGrE,cAACgK,EAAY,CACXC,OAAK,EACLC,KAAK,WACLT,UAAW,kBACT,cAAC,GAAO,CAACnH,OAAQ,EAAKvN,MAAMuN,OAAQzK,KAAM,EAAK9C,MAAM8C,MAAQ,IAGjE,cAACkS,EAAiB,CAChBE,OAAK,EACLC,KAAK,QACLT,UAAW,kBAAM,cAAC,GAAG,CAACnH,OAAQ,EAAKvN,MAAMuN,QAAU,IAErD,cAACyH,EAAiB,CAChBE,OAAK,EACLC,KAAK,iBACLT,UAAW,kBACT,cAAC,GAAQ,CACP3G,MAAO,EAAK/N,MAAM+N,MAAMA,MAAMC,QAAO,SAAC1C,GAAI,OAAMA,EAAKtI,KAAK,IAC1DyK,aAAc,EAAKzN,MAAM+N,MAAMhK,UAC/B2J,aAAc,EAAK1N,MAAM+N,MAAMtD,SAC/B,IAGN,cAACuK,EAAiB,CAChBE,OAAK,EACLC,KAAK,eACLT,UAAW,kBACT,cAAC,GAAQ,CACP3G,MAAO,EAAK/N,MAAM+N,MAAMA,MAAMC,QAAO,SAAC1C,GAAI,OAAKA,EAAKtI,KAAK,IACzDyK,aAAc,EAAKzN,MAAM+N,MAAMhK,UAC/B2J,aAAc,EAAK1N,MAAM+N,MAAMtD,SAC/B,IAGN,cAACuK,EAAiB,CAChBE,OAAK,EACLC,KAAK,SACLT,UAAW,kBACT,cAAC,GAAK,CACJ5R,KAAM,EAAK9C,MAAM8C,KACjB4D,MAAO,EAAK1G,MAAM0G,MAAMA,MACxBE,aAAc,EAAK5G,MAAM0G,MAAM3C,UAC/B8C,aAAc,EAAK7G,MAAM0G,MAAM+D,QAC/BsD,MAAO,EAAK/N,MAAM+N,MAAMA,MACxBN,aAAc,EAAKzN,MAAM+N,MAAMhK,UAC/B2J,aAAc,EAAK1N,MAAM+N,MAAMtD,QAC/B2D,UAAW,EAAKpO,MAAMoO,WACtB,IAGN,cAAC4G,EAAiB,CAChBE,OAAK,EACLC,KAAK,UACLT,UAAW,kBACT,cAAC,GAAM,CACLnH,OAAQ,EAAKvN,MAAMuN,OACnBzK,KAAM,EAAK9C,MAAM8C,KACjB+L,YAAa,EAAK7O,MAAM6O,aACxB,IAGN,cAACmG,EAAiB,CAACG,KAAK,iBAAiBT,UApO5B,SAAH,GAAmB,IAAbU,EAAK,EAALA,MAChBI,EAAe,EAAKxV,MAAM+N,MAAMA,MAAMC,QACxC,SAAC1C,GAAI,OAAKA,EAAKnF,MAAQiP,EAAMC,OAAOI,MAAM,IAC1C,GACEH,EAAc,KAIlB,YAHqBC,IAAjBC,IACFF,EAAc,oCAGd,cAAC,GAAU,CACThK,KAAMkK,EACNzR,UAAW,EAAK/D,MAAM+N,MAAMhK,UAC5B0G,QAAS,EAAKzK,MAAM+N,MAAMtD,SAAW6K,GAG3C,IAsNM,cAACN,EAAiB,CAChBG,KAAK,SACLT,UAAW,kBACT,cAAC,GAAK,CACJnH,OAAQ,EAAKvN,MAAMuN,OACnB7G,MAAO,EAAK1G,MAAM0G,MAAMA,MACxBE,aAAc,EAAK5G,MAAM0G,MAAM3C,UAC/B8C,aAAc,EAAK7G,MAAM0G,MAAM+D,QAC/BsD,MAAO,EAAK/N,MAAM+N,MAAMA,MACxBN,aAAc,EAAKzN,MAAM+N,MAAMhK,UAC/B2J,aAAc,EAAK1N,MAAM+N,MAAMtD,SAC/B,IAGN,cAAC,KAAQ,CAAC5H,GAAG,aAEf,eAACmB,EAAA,EAAK,CACJvB,OAAQrB,KAAKX,MAAMyT,kBACnB/S,OAAQC,KAAK4E,kBAAkB,UAE/B,cAAC/B,EAAA,EAAW,CAAC9C,OAAQC,KAAK4E,kBAAkB,8BAG5C,eAAC9B,EAAA,EAAS,6BACO,uBACf,uBAAM,UACE9C,KAAKX,MAAM0T,aACf/S,KAAKX,MAAM0T,aAAaxP,KACxB,GAAI,IACR,uBAAM,YACI,IACTvD,KAAKX,MAAM0T,aAAe/S,KAAKX,MAAM0T,aAAa9N,OAAS,GAAI,IAChE,uBAAM,gBACQ,IACbjF,KAAKX,MAAM0T,aAAe/S,KAAKX,MAAM0T,aAAa/N,KAAO,GAAE,IAAE,uBAAM,qBACjD,IAClBhF,KAAKX,MAAM0T,aAAe/S,KAAKX,MAAM0T,aAAa7N,OAAS,GAAI,IAChE,uBAAM,IAAC,uBAAM,+CAC+B,uBAC5C,uBACA,cAACnG,EAAA,EAAM,CACLsD,MAAM,SACNnD,QAAS,WACP,EAAKN,MAAM0V,WAAW,EAAKjV,MAAM0T,aAAahO,KAC9C,EAAKH,mBACP,EAAE,iBAGM,IACV,cAAC7F,EAAA,EAAM,CACLsD,MAAM,UACNnD,QAAS,WACP,EAAK0F,mBACP,EAAE,sBAMP5E,KAAKX,MAAM0T,aACV,eAACnQ,EAAA,EAAK,CACJvB,OAAQrB,KAAKX,MAAMkK,gBACnBxJ,OAAQC,KAAK6E,gBAAgB,UAE7B,cAAChC,EAAA,EAAW,CAAC9C,OAAQC,KAAK6E,gBAAgB,yBAC1C,cAAC/B,EAAA,EAAS,UACR,eAAC,YAAS,CAACE,SAAU,SAACW,GAAM,OAAK,EAAKqP,iBAAiBrP,EAAO,EAAC,UAC7D,eAAC2D,EAAA,EAAG,CAACtI,UAAU,aAAY,UACzB,eAACkE,EAAA,EAAK,CAACC,QAAQ,OAAOsE,GAAI,EAAE,iBACrB,OAEP,eAACD,EAAA,EAAG,CAACC,GAAI,GAAG,UACV,cAAC,UAAQ1D,KAAI,CACXL,MAAM,QACNJ,GAAG,OACHC,KAAK,OACLuG,aAAc9J,KAAKX,MAAM0T,aAAaxP,KACtCvE,UAAU,eACViF,WAAY,CACV9F,YACAK,UAAWA,GAAU,GACrBqM,YA5OFuI,EA4OyBpT,KAAKX,MAAM0T,aAAaxP,KA5OjC,SAACnF,GAAG,OACnC,EAAKQ,MAAM0G,MAAMA,MAAMwB,MAAK,SAACrC,GAAI,OAAKA,EAAKlB,OAASnF,CAAG,KACxDA,IAAQgV,CAAY,MA6ON,cAAC,SAAM,CACLpU,UAAU,cACV0E,MAAM,QACNQ,KAAK,UACLC,SAAU,CACRhG,SAAU,WACVK,UAAW,oCACXqM,WACE,uDAKV,eAACvD,EAAA,EAAG,CAACtI,UAAU,aAAY,UACzB,eAACkE,EAAA,EAAK,CAACC,QAAQ,SAASsE,GAAI,EAAE,oBACpB,OAEV,eAACD,EAAA,EAAG,CAACC,GAAI,GAAG,UACV,cAAC,UAAQ1D,KAAI,CACXL,MAAM,UACNJ,GAAG,SACHC,KAAK,SACLuG,aAAc9J,KAAKX,MAAM0T,aAAa9N,OACtCjG,UAAU,eACViF,WAAY,CACV9F,YACAK,UAAWA,GAAU,MAGzB,cAAC,SAAM,CACLQ,UAAU,cACV0E,MAAM,UACNQ,KAAK,UACLC,SAAU,CACRhG,SAAU,WACVK,UAAW,6CAKnB,eAAC8I,EAAA,EAAG,CAACtI,UAAU,aAAY,UACzB,cAACkE,EAAA,EAAK,CAACC,QAAQ,OAAOsE,GAAI,EAAE,sBAG5B,eAACD,EAAA,EAAG,CAACC,GAAI,EAAE,UACT,cAAC,UAAQ1D,KAAI,CACXL,MAAM,QACNJ,GAAG,OACHC,KAAK,OACLuG,aAAc9J,KAAKX,MAAM0T,aAAa/N,KACtChG,UAAU,eACViF,WAAY,CACV9F,YACAK,UAAWA,GAAU,IACrBF,WA3eLC,EA2e0B,GA3elB,SAACH,GAAG,OAAMA,GAAOA,EAAIC,QAAUE,CAAI,GA4etCiM,YACAM,YA1SFqI,EA0SyBnT,KAAKX,MAAM0T,aAAa/N,KA1SjC,SAAC5G,GAAG,OACnC,EAAKQ,MAAM0G,MAAMA,MAAMwB,MAAK,SAACrC,GAAI,OAAKA,EAAKO,OAAS5G,CAAG,KACxDA,IAAQ+U,CAAY,MA2SN,cAAC,SAAM,CACLnU,UAAU,cACV0E,MAAM,QACNQ,KAAK,UACLC,SAAU,CACRhG,SAAU,WACVK,UAAW,iCACXF,UAAW,6BACXkM,SAAU,mBACVM,WAAY,mDAMpB,cAACxD,EAAA,EAAG,CAACtI,UAAU,aAAY,SACzB,eAACwI,EAAA,EAAG,WACF,cAACtE,EAAA,EAAK,CAACC,QAAQ,MAAK,sBACpB,eAAC,UAAQ4H,OAAM,CACbrH,MAAM,OACNJ,GAAG,MACHtE,UAAU,eACV8K,aAAc9J,KAAKX,MAAM0T,aAAa/M,IAAI,UAE1C,6CAAwB,IAAC,gDACzB,sDAAkC,IAClC,gDACA,iDAA4B,IAAC,6CAC7B,+CAA0B,IAAC,iDAC3B,6CAAwB,IAAC,gDACzB,8CAAyB,IAAC,0CAC1B,mDAKN,eAACsB,EAAA,EAAG,CAACtI,UAAU,aAAY,UACzB,eAACkE,EAAA,EAAK,CAACC,QAAQ,SAASsE,GAAI,EAAE,UAC3B,IAAG,sBAGN,eAACD,EAAA,EAAG,CAACC,GAAI,EAAE,UACT,cAAC,UAAQ1D,KAAI,CACXL,MAAM,UACNJ,GAAG,SACHC,KAAK,SACLuG,aAAc9J,KAAKX,MAAM0T,aAAa7N,OACtClG,UAAU,eACViF,WAAY,CACVoG,eACAE,OAAQA,GAAO,GACfD,OAAQA,GAAO,KACfE,eAGJ,cAAC,SAAM,CACLxL,UAAU,cACV0E,MAAM,UACNS,SAAU,CACRkG,YAAa,WACbE,OAAQ,yBACRD,OAAQ,uBACRE,SAAU,4BAMlB,cAAClD,EAAA,EAAG,CAACtI,UAAU,aAAY,SACzB,eAACwI,EAAA,EAAG,WACF,cAACtE,EAAA,EAAK,CAACC,QAAQ,QAAO,oBACtB,eAAC,UAAQ4H,OAAM,CACbrH,MAAM,SACNJ,GAAG,QACHtE,UAAU,eACV8K,aAAc9J,KAAKX,MAAM0T,aAAa3L,MAAM,UAE5C,uCAAkB,IAAC,uCACnB,uCAAkB,IAAC,uCACnB,uCAAkB,IAAC,uCACnB,uCAAkB,IAAC,uCACnB,+CAKN,eAACE,EAAA,EAAG,CAACtI,UAAU,aAAY,UACzB,eAACkE,EAAA,EAAK,CAACC,QAAQ,QAAQsE,GAAI,EAAE,UAC1B,IAAG,WAGN,eAACD,EAAA,EAAG,CAACC,GAAI,EAAE,UACT,cAAC,UAAQ1D,KAAI,CACXL,MAAM,SACNJ,GAAG,QACHC,KAAK,QACLuG,aAAc9J,KAAKX,MAAM0T,aAAa1L,MACtCrI,UAAU,eACViF,WAAY,CACVoG,eACAE,OAAQA,GAAO,GACfD,OAAQA,GAAO,KACfE,eAGJ,cAAC,SAAM,CACLxL,UAAU,cACV0E,MAAM,SACNS,SAAU,CACRkG,YAAa,WACbE,OAAQ,yBACRD,OAAQ,sBACRE,SAAU,4BAMlB,eAAClD,EAAA,EAAG,CAACtI,UAAU,aAAY,UACzB,cAACkE,EAAA,EAAK,CAACC,QAAQ,cAAcsE,GAAI,EAAE,yBAGnC,cAACD,EAAA,EAAG,CAACC,GAAI,GAAG,SACV,cAAC,UAAQuD,SAAQ,CACftH,MAAM,eACNJ,GAAG,cACHC,KAAK,cACL0H,KAAK,KACLnB,aAAc9J,KAAKX,MAAM0T,aAAa1K,YACtCrJ,UAAU,sBAIhB,cAACsI,EAAA,EAAG,UACF,cAACE,EAAA,EAAG,CAACxI,UAAU,kBAAiB,SAC9B,cAACD,EAAA,EAAM,CAACsE,KAAK,SAASrE,UAAU,aAAY,gCAStD,cAAC,IAAMF,SAAQ,MAIvB,KAAC,EAvlBO,CAASsF,aA0lBJmQ,gBAAWC,oBAjoBF,SAACnV,GACvB,MAAO,CACLiG,MAAOjG,EAAMiG,MACb5D,KAAMrC,EAAMqC,KACZyK,OAAQ9M,EAAM8M,OACdQ,MAAOtN,EAAMsN,MAEjB,IAE2B,SAAC2C,GAAQ,MAAM,CACxC2D,WAAY,WACV3D,GFgK4B,SAACA,GAE/B,OADAA,EAAS9J,IAAa,IACfmK,MAAMN,GAAU,SACpBa,MACC,SAACC,GACC,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MACd,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAG/C,MADAH,EAAMF,SAAWA,EACXE,CAEV,IACA,SAACA,GAEC,MADc,IAAIC,MAAMD,EAAMQ,QAEhC,IAEDX,MAAK,SAACC,GAAQ,OAAKA,EAASM,MAAM,IAClCP,MAAK,SAAC5K,GAAK,OAAKgK,EAAS6B,GAAS7L,GAAO,IACzCsL,OAAM,SAACP,GAAK,OAAKf,EAAS2B,GAAYZ,EAAMQ,SAAS,GAC1D,GEtLE,EACAmB,YAAa,SAAC3E,GACZiC,EAAS0C,GAAY3E,GACvB,EACAyD,WAAY,WACVxB,EAASwB,KACX,EACAlG,SAAU,SAACrH,EAAM0B,EAAQoD,EAAarD,EAAMgB,EAAKoB,EAAOC,EAAOnC,GAAM,OACnEoK,EACE1E,GAASrH,EAAM0B,EAAQoD,EAAarD,EAAMgB,EAAKoB,EAAOC,EAAOnC,GAC9D,EACHgO,SAAU,SAACnO,EAAKxB,EAAM0B,EAAQoD,EAAarD,EAAMgB,EAAKoB,EAAOC,EAAOnC,GAAM,OACxEoK,EFnBF,SAACvK,EAAKxB,EAAM0B,EAAQoD,EAAarD,EAAMgB,EAAKoB,EAAOC,EAAOnC,GAAM,OAChE,SAACoK,GACC,IAAMC,EAAU,CACdhM,KAAMA,EACN0B,OAAQA,EACRoD,YAAaA,EACbrD,KAAMA,EACNgB,IAAKA,EACLoB,MAAOA,EACPC,MAAOA,EACPnC,OAAQA,GAEJsK,EAAS,UAAYC,aAAaC,QAAQ,SAChD,OAAOC,MAAMN,GAAU,SAAWtK,EAAK,CACrC6K,OAAQ,MAERC,KAAMC,KAAKC,UAAUR,GACrBS,QAAS,CACP,eAAgB,mBAChBC,cAAeT,KAGhBU,MACC,SAACC,GACC,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MACd,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAG/C,MADAH,EAAMF,SAAWA,EACXE,CAEV,IACA,SAACA,GACC,MAAMA,CACR,IAEDH,MAAK,SAACC,GAAQ,OAAKA,EAASM,MAAM,IAClCP,MAAK,SAACC,GAAQ,OAAKb,EAAS8B,GAAiBjB,GAAU,IACvDS,OAAM,SAACP,GACNlG,MAAM,yCAA2CkG,EAAMQ,QACzD,GACJ,CAAE,CEvBEqC,CAASnO,EAAKxB,EAAM0B,EAAQoD,EAAarD,EAAMgB,EAAKoB,EAAOC,EAAOnC,GACnE,EACHoP,WAAY,SAACvP,GAAG,OAAKuK,EFgHG,SAACvK,GAAG,OAAK,SAACuK,GAClC,IAAME,EAAS,UAAYC,aAAaC,QAAQ,SAChD,OAAOC,MAAMN,GAAU,SAAWtK,EAAK,CACrC6K,OAAQ,SAERI,QAAS,CACPC,cAAeT,KAGhBU,MACC,SAACC,GACC,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MACd,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAG/C,MADAH,EAAMF,SAAWA,EACXE,CAEV,IACA,SAACA,GACC,MAAMA,CACR,IAEDH,MAAK,SAACC,GAAQ,OAAKA,EAASM,MAAM,IAClCP,MAAK,SAACC,GAAQ,OAAKb,EAASmC,GAAmBtB,GAAU,IACzDS,OAAM,SAACP,GACNlG,MAAM,0CAA4CkG,EAAMQ,QAC1D,GACJ,CAAE,CE9I8ByD,CAAWvP,GAAK,EAC9C1E,UAAW,SAACsR,GAAK,OAAKrC,EAASjP,GAAUsR,GAAO,EAChDjR,WAAY,kBAAM4O,EAAS5O,KAAa,EACxCkD,aAAc,SAAC+N,GAAK,OAAKrC,EFkUC,SAACqC,GAAK,OAAK,SAACrC,GACtC,OAAOK,MAAMN,GAAU,eAAgB,CACrCO,OAAQ,OACRI,QAAS,CACP,eAAgB,oBAElBH,KAAMC,KAAKC,UAAU4B,KAEpBzB,MACC,SAACC,GACC,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MACd,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAG/C,MADAH,EAAMF,SAAWA,EACXE,CAEV,IACA,SAACA,GACC,MAAMA,CACR,IAEDH,MAAK,SAACC,GAAQ,OAAKA,EAASM,MAAM,IAClCP,MAAK,SAACC,GACL,IAAIA,EAAS0B,QAGN,CACL,IAAIxB,EAAQ,IAAIC,MAAM,SAAWH,EAASI,QAE1C,MADAF,EAAMF,SAAWA,EACXE,CACR,CALElG,MAAM,0BAMV,IACCyG,OAAM,SAACP,GAAK,OACXlG,MACEkG,EAAMQ,QAANR,gIAGD,GAEP,CAAE,CE5WkCzM,CAAa+N,GAAO,EACtD9H,SAAU,SAAC9E,EAAKvC,EAAWE,EAAUoB,EAAMD,GAAK,OAC9CyL,EF2DF,SAACvK,EAAKvC,EAAWE,EAAUoB,EAAMD,GAAK,OAAK,SAACyL,GAC1C,IAAMmF,EAAU,CACdjS,UAAWA,EACXE,SAAUA,EACVoB,KAAMA,EACND,MAAOA,GAEH2L,EAAS,UAAYC,aAAaC,QAAQ,SAChD,OAAOC,MAAMN,GAAU,SAAWtK,EAAK,CACrC6K,OAAQ,MAERC,KAAMC,KAAKC,UAAU0E,GACrBzE,QAAS,CACP,eAAgB,mBAChBC,cAAeT,KAGhBU,MACC,SAACC,GACC,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MACd,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAG/C,MADAH,EAAMF,SAAWA,EACXE,CAEV,IACA,SAACA,GACC,MAAMA,CACR,IAEDH,MAAK,SAACC,GAAQ,OAAKA,EAASM,MAAM,IAClCP,MAAK,SAACC,GAGL,OAFAV,aAAakD,WAAW,YACxBlD,aAAaqC,QAAQ,WAAYhC,KAAKC,UAAUI,IACzCb,EAAS+B,GAAiBlB,GACnC,IACCS,OAAM,SAACP,GACNlG,MACE,4CACEkG,EAAMQ,QACN,uEAEN,GACJ,CAAE,CEzGShH,CAAS9E,EAAKvC,EAAWE,EAAUoB,EAAMD,GAAO,EAC3DoG,aAAc,SAAClF,EAAKzE,EAAUE,GAAQ,OACpC8O,EFgBwB,SAACvK,EAAKzE,EAAUE,GAAQ,OAAK,SAAC8O,GACxD,IAAME,EAAS,UAAYC,aAAaC,QAAQ,SAChD,OAAOC,MAAMN,GAAU,kBAAoBtK,EAAK,CAC9C6K,OAAQ,MAERC,KAAMC,KAAKC,UAAU,CAAEvP,SAAUA,IACjCwP,QAAS,CACP,eAAgB,mBAChBC,cAAeT,KAGhBU,MACC,SAACC,GACC,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MACd,SAAWH,EAASI,OAAS,KAAOJ,EAASK,WAAa,OAG5D,MADAH,EAAMF,SAAWA,EACXE,CAEV,IACA,SAACA,GACC,MAAMA,CACR,IAEDH,MAAK,SAACC,GAAQ,OAAKA,EAASM,MAAM,IAClCP,MAAK,SAACC,GACL,IAAIuE,EAAW,CAAEpU,SAAUA,EAAUE,SAAUA,GAI/C,OAHAiP,aAAakD,WAAW,SACxBlD,aAAaqC,QAAQ,QAAShC,KAAKC,UAAU2E,IAC7CvK,MAAM,iCACCmF,EAASiC,GAAqBmD,GACvC,IACC9D,OAAM,SAACP,GACNlG,MAAM,8CAAgDkG,EAAMQ,QAC9D,GACJ,CAAE,CEtDW5G,CAAalF,EAAKzE,EAAUE,GAAU,EACjDwM,UAAW,SAACmF,EAAQC,GAAS,OAAK9C,EAAStC,GAAUmF,EAAQC,GAAW,EACxE3E,YAAa,SAAC6E,GAAO,OAAKhD,EAAS7B,GAAY6E,GAAS,EACzD,GA4lByBkC,CAA6C3B,K,mBCnoBxD8B,GAjDD,WAGR,IAFJtV,EAAK,uDAAG,CAAEsD,WAAW,EAAM0G,QAAS,KAAM/D,MAAO,IACjDsP,EAAM,uCAEN,OAAQA,EAAOvR,MACb,KAAKqN,GACH,OAAO,2BACFrR,GAAK,IACRsD,WAAW,EACX0G,QAAS,KACT/D,MAAOsP,EAAOjE,UAGlB,KAAKD,GACH,OAAO,2BAAKrR,GAAK,IAAEsD,WAAW,EAAM0G,QAAS,KAAM/D,MAAO,KAE5D,KAAKoL,GACH,OAAO,2BAAKrR,GAAK,IAAEsD,WAAW,EAAO0G,QAASuL,EAAOjE,UAEvD,KAAKD,GACH,IAAIjM,EAAOmQ,EAAOjE,QAClB,OAAO,2BAAKtR,GAAK,IAAEiG,MAAOjG,EAAMiG,MAAMuP,OAAOpQ,KAE/C,KAAKiM,GACH,IAAIoE,EAAUF,EAAOjE,QACrB,OAAO,2BACFtR,GAAK,IACRiG,MAAOjG,EAAMiG,MAAMC,KAAI,SAACd,GACtB,OAAIA,EAAKM,MAAQ+P,EAAQ/P,IAChB+P,EAEArQ,CAEX,MAGJ,KAAKiM,GACH,IAAIgB,EAAOkD,EAAOjE,QAClB,OAAO,2BACFtR,GAAK,IACRiG,MAAOjG,EAAMiG,MAAMsH,QAAO,SAACnI,GACzB,OAAOA,EAAKM,MAAQ2M,EAAK3M,GAC3B,MAGJ,QACE,OAAO1F,EAEb,ECoBe0V,GAjEF,WAcP,IAbJ1V,EAAK,uDAAG,CACNsD,WAAW,EACXR,kBAAiBsN,aAAaC,QAAQ,SACtCqC,MAAOtC,aAAaC,QAAQ,SAC5BxF,KAAMuF,aAAaC,QAAQ,SACvBI,KAAK7G,MAAMwG,aAAaC,QAAQ,UAChC,KACJ/N,SAAU8N,aAAaC,QAAQ,YAC3BI,KAAK7G,MAAMwG,aAAaC,QAAQ,aAChC,KACJrG,QAAS,MAEXuL,EAAM,uCAEN,OAAQA,EAAOvR,MACb,KAAKqN,GACH,OAAO,2BACFrR,GAAK,IACRsD,WAAW,EACXR,iBAAiB,EACjB+H,KAAM0K,EAAOjD,QAEjB,KAAKjB,GACH,OAAO,2BACFrR,GAAK,IACRsD,WAAW,EACXR,iBAAiB,EACjBkH,QAAS,GACT0I,MAAO6C,EAAO7C,MACdpQ,SAAUiT,EAAOjT,WAErB,KAAK+O,GACH,OAAO,2BACFrR,GAAK,IACRsD,WAAW,EACXR,iBAAiB,EACjBkH,QAASuL,EAAO/D,UAEpB,KAAKH,GACH,OAAO,2BAAKrR,GAAK,IAAEsD,WAAW,EAAMR,iBAAiB,IAEvD,KAAKuO,GACH,OAAO,2BACFrR,GAAK,IACRsD,WAAW,EACXR,iBAAiB,EACjB4P,MAAO,GACP7H,KAAM,KACNvI,SAAU,OAGd,KAAK+O,GACH,OAAO,2BAAKrR,GAAK,IAAEsC,SAAUiT,EAAOjE,UAEtC,KAAKD,GACH,OAAO,2BACFrR,GAAK,IACR6K,KAAM0K,EAAOjE,UAEjB,QACE,OAAOtR,EAEb,EC1Be2V,GAxCA,WAGT,IAFJ3V,EAAK,uDAAG,CAAEsD,WAAW,EAAM0G,QAAS,KAAM8C,OAAQ,IAClDyI,EAAM,uCAEN,OAAQA,EAAOvR,MACb,KAAKqN,GACH,OAAO,2BACFrR,GAAK,IACRsD,WAAW,EACX0G,QAAS,KACT8C,OAAQyI,EAAOjE,UAGnB,KAAKD,GACH,OAAO,2BAAKrR,GAAK,IAAEsD,WAAW,EAAM0G,QAAS,KAAM8C,OAAQ,KAE7D,KAAKuE,GACH,OAAO,2BAAKrR,GAAK,IAAEsD,WAAW,EAAO0G,QAASuL,EAAOjE,UAEvD,KAAKD,GACH,IAAItF,EAAQwJ,EAAOjE,QACnB,OAAO,2BAAKtR,GAAK,IAAE8M,OAAQ9M,EAAM8M,OAAO0I,OAAOzJ,KAEjD,KAAKsF,GACH,IAAIuE,EAAWL,EAAOjE,QACtB,OAAO,2BACFtR,GAAK,IACR8M,OAAQ9M,EAAM8M,OAAO5G,KAAI,SAAC6F,GACxB,OAAIA,EAAMrG,MAAQkQ,EAASlQ,IAClBkQ,EAEA7J,CAEX,MAGJ,QACE,OAAO/L,EAEb,EChBe6V,GAvBD,WAGR,IAFJ7V,EAAK,uDAAG,CAAEsD,WAAW,EAAM0G,QAAS,KAAMsD,MAAO,IACjDiI,EAAM,uCAEN,OAAQA,EAAOvR,MACb,KAAKqN,GACH,OAAO,2BACFrR,GAAK,IACRsD,WAAW,EACX0G,QAAS,KACTsD,MAAOiI,EAAOjE,UAGlB,KAAKD,GACH,OAAO,2BAAKrR,GAAK,IAAEsD,WAAW,EAAM0G,QAAS,KAAMsD,MAAO,KAE5D,KAAK+D,GACH,OAAO,2BAAKrR,GAAK,IAAEsD,WAAW,EAAO0G,QAASuL,EAAOjE,UAEvD,QACE,OAAOtR,EAEb,EClBM8V,GAAmBjV,OAAOkV,sCAAwCC,WCGlEC,I,qBDAUC,uBACZC,2BAAgB,CACdlQ,MAAOqP,GACPjT,KAAMqT,GACN5I,OAAQ6I,GACRrI,MAAOuI,KAETC,GAAiBM,2BAAgBC,SCKtBC,OAVf,WACE,OACE,cAAC,YAAQ,CAACL,MAAOA,GAAM,SACrB,cAAC,IAAa,UACV,cAAC,GAAI,OAIf,ECPoBM,QACW,cAA7B1V,OAAOyT,SAASkC,UAEe,UAA7B3V,OAAOyT,SAASkC,UAEhB3V,OAAOyT,SAASkC,SAAS7B,MACvB,2DCZN8B,IAAStC,OAAO,cAAC,GAAG,IAAKuC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjG,MAAK,SAACkG,GAClCA,EAAaC,YACf,G","file":"static/js/main.7b683d14.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./stylesheets/HeaderComponent.css\";\r\nimport {\r\n  Navbar,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Nav,\r\n  NavbarToggler,\r\n  Collapse,\r\n  NavItem,\r\n  NavbarBrand,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport {\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nconst validEmail = (val) =>\r\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nfunction Registerer(props) {\r\n  if (props.isSignedIn === false)\r\n    return (\r\n      <React.Fragment>\r\n        &nbsp; &nbsp;\r\n        <Button\r\n          className=\"navigation-btn\"\r\n          outline\r\n          onClick={props.toggleRegister}\r\n        >\r\n          Register <span className=\"fa fa-user-plus fa-lg\"></span>\r\n        </Button>\r\n      </React.Fragment>\r\n    );\r\n  else return <React.Fragment></React.Fragment>;\r\n}\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isNavOpen: false,\r\n      isModalOpen: false,\r\n      isRegisterOpen: false,\r\n      dropdownOpen: false,\r\n    };\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n    this.toggleRegister = this.toggleRegister.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({ dropdownOpen: !this.state.dropdownOpen });\r\n  }\r\n  toggleNav() {\r\n    if (window.innerWidth < 1200) {\r\n      this.setState({\r\n        isNavOpen: !this.state.isNavOpen,\r\n      });\r\n    }\r\n  }\r\n\r\n  toggleRegister(event) {\r\n    this.setState({\r\n      isRegisterOpen: !this.state.isRegisterOpen,\r\n    });\r\n  }\r\n\r\n  handleLogin(event) {\r\n    this.toggleModal();\r\n    this.props.loginUser({\r\n      username: this.username.value,\r\n      password: this.password.value,\r\n    });\r\n    event.preventDefault();\r\n  }\r\n\r\n  handleLogout() {\r\n    this.props.logoutUser();\r\n  }\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar dark expand=\"xl\" className=\"navigator-class\">\r\n          <NavbarToggler onClick={this.toggleNav}></NavbarToggler>\r\n          <NavbarBrand className=\"mr-auto\" href=\"/home\">\r\n            <img\r\n              src=\"library-logo.png\"\r\n              height={40}\r\n              alt=\"\"\r\n              className=\"logo-class\"\r\n            />\r\n          </NavbarBrand>\r\n          <Collapse isOpen={this.state.isNavOpen} navbar>\r\n            <Nav navbar>\r\n              <NavItem className=\"ml-2\" onClick={this.toggleNav}>\r\n                <NavLink className=\"nav-link text-primary\" to=\"/home\">\r\n                  <span className=\"fa fa-home fa-lg\" /> Home\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem className=\"ml-2\" onClick={this.toggleNav}>\r\n                <NavLink className=\"nav-link text-primary\" to=\"/about\">\r\n                  <span className=\"fa fa-info-circle fa-lg\" /> About\r\n                </NavLink>\r\n              </NavItem>\r\n              {this.props.auth.userinfo && this.props.auth.userinfo.admin ? (\r\n                <NavItem>\r\n                  <Dropdown\r\n                    isOpen={this.state.dropdownOpen}\r\n                    toggle={this.toggle}\r\n                  >\r\n                    <DropdownToggle className=\"admin-dropdown\">\r\n                      <div className=\"admin-dropdown-all\">\r\n                        <span className=\"fa fa-book fa-lg\" />\r\n                        &nbsp;Books &nbsp;\r\n                        <i\r\n                          className=\"fa fa-caret-down fa-sm\"\r\n                          aria-hidden=\"true\"\r\n                        ></i>\r\n                      </div>\r\n                    </DropdownToggle>\r\n                    <DropdownMenu>\r\n                      <DropdownItem\r\n                        onClick={this.toggleNav}\r\n                        tag={Link}\r\n                        to=\"/books\"\r\n                      >\r\n                        Modify books\r\n                      </DropdownItem>\r\n                      <DropdownItem\r\n                        onClick={this.toggleNav}\r\n                        tag={Link}\r\n                        to=\"/add_book\"\r\n                      >\r\n                        Add books\r\n                      </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </Dropdown>\r\n                </NavItem>\r\n              ) : (\r\n                <NavItem className=\"ml-2\" onClick={this.toggleNav}>\r\n                  <NavLink className=\"nav-link text-primary\" to=\"/books\">\r\n                    <span className=\"fa fa-book fa-lg\" /> Books\r\n                  </NavLink>\r\n                </NavItem>\r\n              )}\r\n\r\n              <NavItem className=\"ml-2\" onClick={this.toggleNav}>\r\n                <NavLink className=\"nav-link text-primary\" to=\"/search\">\r\n                  <span className=\"fa fa-search fa-lg\" /> Search\r\n                </NavLink>\r\n              </NavItem>\r\n              {this.props.auth.isAuthenticated ? (\r\n                <NavItem onClick={this.toggleNav} className=\"ml-2\">\r\n                  <NavLink className=\"nav-link text-primary\" to=\"/profile\">\r\n                    <span className=\"fa fa-user-circle-o fa-lg\" /> My Profile\r\n                  </NavLink>\r\n                </NavItem>\r\n              ) : (\r\n                <div />\r\n              )}\r\n              {this.props.auth.isAuthenticated &&\r\n              !this.props.auth.userinfo.admin ? (\r\n                <NavItem onClick={this.toggleNav} className=\"ml-2\">\r\n                  <NavLink className=\"nav-link text-primary\" to=\"/history\">\r\n                    <span className=\"fa fa-history\" /> Issue history\r\n                  </NavLink>\r\n                </NavItem>\r\n              ) : (\r\n                <div />\r\n              )}\r\n              {this.props.auth.isAuthenticated &&\r\n              this.props.auth.userinfo.admin ? (\r\n                <React.Fragment>\r\n                  <NavItem onClick={this.toggleNav} className=\"ml-2\">\r\n                    <NavLink className=\"nav-link text-primary\" to=\"/issue\">\r\n                      <span className=\"fa fa-plus-square\" /> Issue Book\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem onClick={this.toggleNav} className=\"ml-2\">\r\n                    <NavLink className=\"nav-link text-primary\" to=\"/return\">\r\n                      <span className=\"fa fa-list-ul\" /> Return Book\r\n                    </NavLink>\r\n                  </NavItem>\r\n                  <NavItem onClick={this.toggleNav} className=\"ml-2\">\r\n                    <NavLink className=\"nav-link text-primary\" to=\"/stats\">\r\n                      <span className=\"fa fa-info-circle\" /> Stats\r\n                    </NavLink>\r\n                  </NavItem>\r\n                </React.Fragment>\r\n              ) : (\r\n                <div />\r\n              )}\r\n            </Nav>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                {!this.props.auth.isAuthenticated ? (\r\n                  <Button\r\n                    outline\r\n                    className=\"navigation-btn\"\r\n                    onClick={this.toggleModal}\r\n                  >\r\n                    Login <span className=\"fa fa-sign-in fa-lg\"></span>\r\n                    {this.props.auth.isLoading ? (\r\n                      <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\r\n                    ) : null}\r\n                  </Button>\r\n                ) : (\r\n                  <div className=\"second-link\">\r\n                    <div\r\n                      style={{\r\n                        color: \"white\",\r\n                        fontSize: 15,\r\n                        textShadow: \"2px 2px 5px black\",\r\n                      }}\r\n                      className=\"navbar-text mr-3\"\r\n                    >\r\n                      {this.props.auth.userinfo.firstname.toUpperCase()}\r\n                      &nbsp;\r\n                      {this.props.auth.userinfo.lastname.toUpperCase()}\r\n                    </div>\r\n                    <Button\r\n                      outline\r\n                      className=\"navigation-btn\"\r\n                      onClick={this.handleLogout}\r\n                    >\r\n                      Logout <span className=\"fa fa-sign-out fa-lg\"></span>\r\n                      {this.props.auth.isLoading ? (\r\n                        <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\r\n                      ) : null}\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n                <Registerer\r\n                  isSignedIn={this.props.auth.isAuthenticated}\r\n                  toggleRegister={() => {\r\n                    this.toggleRegister();\r\n                  }}\r\n                />\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n        <Modal\r\n          isOpen={!this.props.auth.isAuthenticated && this.state.isModalOpen}\r\n          toggle={this.toggleModal}\r\n        >\r\n          <ModalHeader toggle={this.toggleModal}>Sign In</ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={this.handleLogin}>\r\n              <FormGroup>\r\n                <Label htmlFor=\"username\">Username</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  innerRef={(input) => (this.username = input)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label htmlFor=\"password\">Password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  innerRef={(input) => (this.password = input)}\r\n                />\r\n              </FormGroup>\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Login\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n        <Modal isOpen={this.state.isRegisterOpen} toggle={this.toggleRegister}>\r\n          <ModalHeader toggle={this.toggleRegister}>Register</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm\r\n              model=\"user\"\r\n              onSubmit={(values) => {\r\n                this.toggleRegister();\r\n                this.props.registerUser({\r\n                  username: values.username,\r\n                  password: values.password,\r\n                  email: values.email,\r\n                  roll: values.roll,\r\n                  firstname: values.firstname,\r\n                  lastname: values.lastname,\r\n                });\r\n              }}\r\n            >\r\n              <FormGroup>\r\n                <Label htmlFor=\"username\">Username</Label>\r\n                <Control.text\r\n                  model=\".username\"\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Username\"\r\n                  validators={{\r\n                    required,\r\n                    minLength: minLength(3),\r\n                    maxLength: maxLength(20),\r\n                  }}\r\n                />\r\n                <Errors\r\n                  className=\"text-danger\"\r\n                  model=\".username\"\r\n                  show=\"touched\"\r\n                  messages={{\r\n                    required: \"Required\",\r\n                    minLength: \" Must be greater than 2 characters\",\r\n                    maxLength: \" Must be 20 characters or less\",\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label htmlFor=\"password\">Password</Label>\r\n                <Control.password\r\n                  model=\".password\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"password\"\r\n                  validators={{\r\n                    required,\r\n                    minLength: minLength(6),\r\n                    maxLength: maxLength(20),\r\n                  }}\r\n                />\r\n                <Errors\r\n                  className=\"text-danger\"\r\n                  model=\".password\"\r\n                  show=\"touched\"\r\n                  messages={{\r\n                    required: \"Required\",\r\n                    minLength: \" Must be greater than 5 characters\",\r\n                    maxLength: \" Must be 20 characters or less\",\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label htmlFor=\"firstname\">First Name</Label>\r\n                <Control.text\r\n                  model=\".firstname\"\r\n                  id=\"firstname\"\r\n                  name=\"firstname\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"firstname\"\r\n                  validators={{\r\n                    required,\r\n                    minLength: minLength(3),\r\n                    maxLength: maxLength(20),\r\n                  }}\r\n                />\r\n                <Errors\r\n                  className=\"text-danger\"\r\n                  model=\".firstname\"\r\n                  show=\"touched\"\r\n                  messages={{\r\n                    required: \"Required\",\r\n                    minLength: \" Must be greater than 2 characters\",\r\n                    maxLength: \" Must be 20 characters or less\",\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label htmlFor=\"lastname\">Last Name</Label>\r\n                <Control.text\r\n                  model=\".lastname\"\r\n                  id=\"lastname\"\r\n                  name=\"lastname\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"lastname\"\r\n                  validators={{\r\n                    required,\r\n                    minLength: minLength(3),\r\n                    maxLength: maxLength(20),\r\n                  }}\r\n                />\r\n                <Errors\r\n                  className=\"text-danger\"\r\n                  model=\".lastname\"\r\n                  show=\"touched\"\r\n                  messages={{\r\n                    required: \"Required\",\r\n                    minLength: \" Must be greater than 2 characters\",\r\n                    maxLength: \" Must be 20 characters or less\",\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label htmlFor=\"roll\">Roll No.</Label>\r\n                <Control.text\r\n                  model=\".roll\"\r\n                  id=\"roll\"\r\n                  name=\"roll\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"roll\"\r\n                  validators={{\r\n                    required,\r\n                    minLength: minLength(3),\r\n                    maxLength: maxLength(12),\r\n                  }}\r\n                />\r\n                <Errors\r\n                  className=\"text-danger\"\r\n                  model=\".roll\"\r\n                  show=\"touched\"\r\n                  messages={{\r\n                    required: \"Required\",\r\n                    minLength: \" Must be greater than 2 characters\",\r\n                    maxLength: \" Must be 12 characters or less\",\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label htmlFor=\"email\">E-mail</Label>\r\n                <Control.text\r\n                  model=\".email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"email\"\r\n                  validators={{ required, validEmail }}\r\n                />\r\n                <Errors\r\n                  className=\"text-danger\"\r\n                  model=\".email\"\r\n                  show=\"touched\"\r\n                  messages={{\r\n                    required: \"Required\",\r\n                    validEmail: \" Enter a valid email\",\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Sign Up\r\n              </Button>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./stylesheets/HomeComponent.css\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"homepage-main\">\r\n      <div className=\"dark-bg\" />\r\n      <img src=\"lims-circle.png\" height={300} alt=\"\" />\r\n      <p>\r\n        GyanKund is a very useful library of SKIT that brings together people\r\n        willing to learn. It helps us in learning and expanding our knowledge.\r\n        You can develop your reading habits here and satisfy your thirst and\r\n        curiosity for knowledge. Reading books helps in the personal growth and\r\n        development of a person.\r\n      </p>\r\n      <p>\r\n        GyanKund Library provides authentic and reliable sources of information\r\n        for both students and teachers. They are able to complete their papers and carry out their\r\n        studies using the material present in the library. In short, it is a\r\n        great place for studying alone or even in groups, without any\r\n        disturbance.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"col-12 heading justify-content-center loading\">\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <h1 align=\"center\">\r\n        <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n        <br />\r\n        <br />\r\n        Loading ....\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"./LoadingComponent.js\";\r\n\r\n// RenderBook is a functional component\r\nfunction RenderBook({\r\n  book,\r\n  changeSelected,\r\n  isAdmin,\r\n  toggleDeleteModal,\r\n  toggleEditModal,\r\n  i,\r\n}) {\r\n  return (\r\n    <React.Fragment>\r\n      <td>{i}</td>\r\n      <td>\r\n        <Link to={`/books/${book._id}`}>{book.name}</Link>\r\n      </td>\r\n      <td>{book.isbn}</td>\r\n      <td>{book.author}</td>\r\n      <td>{book.copies}</td>\r\n      {isAdmin ? (\r\n        <td>\r\n          <span\r\n            onClick={() => {\r\n              changeSelected(book._id);\r\n              toggleEditModal();\r\n            }}\r\n            className=\"Option fa fa-pencil\"\r\n          />\r\n          &nbsp; &nbsp;{\" \"}\r\n          <span\r\n            onClick={() => {\r\n              changeSelected(book._id);\r\n              toggleDeleteModal();\r\n            }}\r\n            className=\"Option fa fa-trash\"\r\n          />\r\n        </td>\r\n      ) : (\r\n        <React.Fragment />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nclass Booklist extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.i = 1;\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  render() {\r\n    const list = this.props.books.map((book) => {\r\n      return (\r\n        <tr key={book.name}>\r\n          <RenderBook\r\n            book={book}\r\n            isAdmin={this.props.isAdmin}\r\n            changeSelected={this.props.changeSelected}\r\n            toggleDeleteModal={this.props.toggleDeleteModal}\r\n            toggleEditModal={this.props.toggleEditModal}\r\n            i={this.i++}\r\n          />\r\n        </tr>\r\n      );\r\n    });\r\n\r\n    if (this.props.booksLoading) {\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Loading />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.props.booksErrMess) {\r\n      return (\r\n        <div className=\"container loading\">\r\n          <div className=\"row heading\">\r\n            <div className=\"col-12\">\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <h3>{this.props.booksErrMess}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 heading\">\r\n              <h3 align=\"center\">List of All books</h3>\r\n              <Table striped bordered hover responsive>\r\n                <thead>\r\n                  <tr>\r\n                    <th>S.No.</th>\r\n                    <th>Name of Book</th>\r\n                    <th>ISBN number</th>\r\n                    <th>Authors</th>\r\n                    <th>Copies available</th>\r\n                    {this.props.isAdmin ? (\r\n                      <th>\r\n                        Edit / <br />\r\n                        Delete\r\n                      </th>\r\n                    ) : (\r\n                      <React.Fragment />\r\n                    )}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>{list}</tbody>\r\n              </Table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Booklist;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  FormGroup,\r\n  Row,\r\n  Col,\r\n  Label,\r\n  Input,\r\n  Badge,\r\n  ListGroupItem,\r\n  ListGroup,\r\n} from \"reactstrap\";\r\nimport Loading from \"./LoadingComponent.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      author: \"\",\r\n      cat: [\r\n        \"Romance\",\r\n        \"Technology\",\r\n        \"Computer Science\",\r\n        \"Management\",\r\n        \"Electronics\",\r\n        \"Physics\",\r\n        \"Chemistry\",\r\n        \"Mathematics\",\r\n        \"Fiction\",\r\n        \"Philosophy\",\r\n        \"Language\",\r\n        \"Arts\",\r\n        \"Other\",\r\n      ],\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    const options = this.state.cat;\r\n    let pos = -1;\r\n\r\n    if (e.target.checked) {\r\n      options.push(e.target.value);\r\n    } else {\r\n      let i = 0;\r\n      for (; i < options.length; i++) {\r\n        if (options[i] === e.target.value) {\r\n          pos = i;\r\n          break;\r\n        } else {\r\n        }\r\n      }\r\n      options.splice(pos, 1);\r\n    }\r\n    this.setState({ cat: options });\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  render() {\r\n    var colors = [\"warning\", \"danger\", \"success\", \"info\", \"secondary\"];\r\n    var nameRegex = new RegExp(this.state.name, \"i\");\r\n    var authorRegex = new RegExp(this.state.author, \"i\");\r\n    const list = this.props.books.map((book) => {\r\n      let category_matched = this.state.cat.some(\r\n        (category) => category === book.cat\r\n      );\r\n      if (\r\n        book.name.search(nameRegex) !== -1 &&\r\n        book.author.search(authorRegex) !== -1 &&\r\n        category_matched\r\n      )\r\n        return (\r\n          <ListGroupItem key={book._id}>\r\n            <Link to={`/books/${book._id}`}>\r\n              <b>{`${book.name}  `}</b>\r\n            </Link>\r\n            <Badge color={colors[book.cat.length % 5]} pill>\r\n              {\" \"}\r\n              {book.cat}\r\n            </Badge>\r\n            {this.props.isAdmin ? (\r\n              <React.Fragment>\r\n                &nbsp; &nbsp;\r\n                <span\r\n                  onClick={() => {\r\n                    this.props.changeSelected(book._id);\r\n                    this.props.toggleEditModal();\r\n                  }}\r\n                  className=\"Option fa fa-pencil\"\r\n                />\r\n                {\"  \"}&nbsp; &nbsp;{\" \"}\r\n                <span\r\n                  onClick={() => {\r\n                    this.props.changeSelected(book._id);\r\n                    this.props.toggleDeleteModal();\r\n                  }}\r\n                  className=\"Option fa fa-trash\"\r\n                />\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment />\r\n            )}\r\n            <br /> <p className=\"ml-auto\"> Authors : {`    ${book.author}`}</p>\r\n            <p> {book.copies} Copies available</p>\r\n            <p>Location : {` Floor- ${book.floor}, Shelf- ${book.shelf}`}</p>\r\n          </ListGroupItem>\r\n        );\r\n      else return <React.Fragment />;\r\n    });\r\n    if (this.props.booksLoading) {\r\n      return (\r\n        <div className=\"container loading\">\r\n          <div className=\"row\">\r\n            <Loading />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.props.booksErrMess) {\r\n      return (\r\n        <div className=\"container loading\">\r\n          <div className=\"row heading\">\r\n            <div className=\"col-12\">\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <h3>{this.props.booksErrMess}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container loading\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 heading\">\r\n              <h3 align=\"center\">Search your book here : </h3>\r\n              <Form>\r\n                <Row form>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"name\">Name of book</Label>\r\n                      <Input\r\n                        type=\"name\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        value={this.state.name}\r\n                        onChange={(e) => {\r\n                          this.setState({ name: e.target.value });\r\n                        }}\r\n                        placeholder=\"Enter name of the book\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label for=\"author\">Author</Label>\r\n                      <Input\r\n                        type=\"author\"\r\n                        name=\"author\"\r\n                        id=\"author\"\r\n                        value={this.state.author}\r\n                        onChange={(e) => {\r\n                          this.setState({ author: e.target.value });\r\n                        }}\r\n                        placeholder=\"Enter name of author\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col sm={6} md={2}>\r\n                    Category :{\" \"}\r\n                  </Col>\r\n                </Row>\r\n                <FormGroup check>\r\n                  <Row>\r\n                    <Col xs={6} md={3}>\r\n                      <Label check for=\"romance\">\r\n                        <Input\r\n                          defaultChecked\r\n                          type=\"checkbox\"\r\n                          onChange={this.onChange}\r\n                          id=\"romance\"\r\n                          value=\"Romance\"\r\n                          name=\"cat\"\r\n                        />\r\n                        Romance\r\n                      </Label>\r\n                    </Col>\r\n                    <Col xs={6} md={3}>\r\n                      <Label check for=\"fiction\">\r\n                        <Input\r\n                          defaultChecked\r\n                          type=\"checkbox\"\r\n                          onChange={this.onChange}\r\n                          id=\"fiction\"\r\n                          value=\"Fiction\"\r\n                          name=\"cat\"\r\n                        />\r\n                        Fiction\r\n                      </Label>\r\n                    </Col>\r\n\r\n                    <Col xs={6} md={3}>\r\n                      <Label check for=\"Arts\">\r\n                        <Input\r\n                          defaultChecked\r\n                          type=\"checkbox\"\r\n                          onChange={this.onChange}\r\n                          id=\"Arts\"\r\n                          value=\"Arts\"\r\n                          name=\"cat\"\r\n                        />\r\n                        Arts\r\n                      </Label>\r\n                    </Col>\r\n                    <Col xs={6} md={3}>\r\n                      <Label check for=\"computer\">\r\n                        <Input\r\n                          defaultChecked\r\n                          type=\"checkbox\"\r\n                          onChange={this.onChange}\r\n                          id=\"computer\"\r\n                          value=\"Computer Science\"\r\n                          name=\"cat\"\r\n                        />\r\n                        Computer Science\r\n                      </Label>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col xs={6} md={3}>\r\n                      <Label check for=\"management\">\r\n                        <Input\r\n                          defaultChecked\r\n                          type=\"checkbox\"\r\n                          onChange={this.onChange}\r\n                          id=\"management\"\r\n                          value=\"Management\"\r\n                          name=\"cat\"\r\n                        />\r\n                        Management\r\n                      </Label>\r\n                    </Col>\r\n                    <Col xs={6} md={3}>\r\n                      <Label check for=\"Physics\">\r\n                        <Input\r\n                          defaultChecked\r\n                          type=\"checkbox\"\r\n                          onChange={this.onChange}\r\n                          id=\"Physics\"\r\n                          value=\"Physics\"\r\n                          name=\"cat\"\r\n                        />\r\n                        Physics\r\n                      </Label>\r\n                    </Col>\r\n\r\n                    <Col xs={6} md={3}>\r\n                      <Label check for=\"technology\">\r\n                        <Input\r\n                          defaultChecked\r\n                          type=\"checkbox\"\r\n                          onChange={this.onChange}\r\n                          id=\"technology\"\r\n                          value=\"Technology\"\r\n                          name=\"cat\"\r\n                        />\r\n                        Technology\r\n                      </Label>\r\n                    </Col>\r\n                    <Col xs={6} md={3}>\r\n                      <Label check for=\"Philosophy\">\r\n                        <Input\r\n                          defaultChecked\r\n                          type=\"checkbox\"\r\n                          onChange={this.onChange}\r\n                          id=\"Philosophy\"\r\n                          value=\"Philosophy\"\r\n                          name=\"cat\"\r\n                        />\r\n                        Philosophy\r\n                      </Label>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col xs={6} md={3}>\r\n                      <Label check for=\"Mathematics\">\r\n                        <Input\r\n                          defaultChecked\r\n                          type=\"checkbox\"\r\n                          onChange={this.onChange}\r\n                          id=\"Mathematics\"\r\n                          value=\"Mathematics\"\r\n                          name=\"cat\"\r\n                        />\r\n                        Mathematics\r\n                      </Label>\r\n                    </Col>\r\n                    <Col xs={6} md={3}>\r\n                      <Label check for=\"Chemistry\">\r\n                        <Input\r\n                          defaultChecked\r\n                          type=\"checkbox\"\r\n                          onChange={this.onChange}\r\n                          id=\"Chemistry\"\r\n                          value=\"Chemistry\"\r\n                          name=\"cat\"\r\n                        />\r\n                        Chemistry\r\n                      </Label>\r\n                    </Col>\r\n\r\n                    <Col xs={6} md={3}>\r\n                      <Label check for=\"Electronics\">\r\n                        <Input\r\n                          defaultChecked\r\n                          type=\"checkbox\"\r\n                          onChange={this.onChange}\r\n                          id=\"Electronics\"\r\n                          value=\"Electronics\"\r\n                          name=\"cat\"\r\n                        />\r\n                        Electronics\r\n                      </Label>\r\n                    </Col>\r\n                    <Col xs={6} md={3}>\r\n                      <Label check for=\"Language\">\r\n                        <Input\r\n                          defaultChecked\r\n                          type=\"checkbox\"\r\n                          onChange={this.onChange}\r\n                          id=\"Language\"\r\n                          value=\"Language\"\r\n                          name=\"cat\"\r\n                        />\r\n                        Language\r\n                      </Label>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col xs={6} md={3}>\r\n                      <Label check for=\"Other\">\r\n                        <Input\r\n                          defaultChecked\r\n                          type=\"checkbox\"\r\n                          onChange={this.onChange}\r\n                          id=\"Other\"\r\n                          value=\"Other\"\r\n                          name=\"cat\"\r\n                        />\r\n                        Other\r\n                      </Label>\r\n                    </Col>\r\n                  </Row>\r\n                </FormGroup>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <br />\r\n              <ListGroup>{list}</ListGroup>\r\n            </div>\r\n          </div>\r\n          <br />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardText,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardBody,\r\n  CardTitle,\r\n} from \"reactstrap\";\r\nimport Loading from \"./LoadingComponent\";\r\nfunction RenderBook({ book, isAdmin, toggleEditModal, changeSelected }) {\r\n  if (book != null)\r\n    return (\r\n      <Card>\r\n        <CardHeader tag=\"h3\">\r\n          {book.name} &nbsp; &nbsp; &nbsp;&nbsp;\r\n          {isAdmin ? (\r\n            <span\r\n              className=\"fa fa-pencil Option\"\r\n              onClick={() => {\r\n                changeSelected(book._id);\r\n                toggleEditModal();\r\n              }}\r\n            />\r\n          ) : (\r\n            <React.Fragment />\r\n          )}\r\n        </CardHeader>\r\n        <CardBody>\r\n          <CardTitle align=\"right\"> - {book.author}</CardTitle>\r\n          <CardText>\r\n            <b> Category: </b> {book.cat} <br />\r\n            <br />\r\n            <b> ISBN number: </b> {book.isbn} <br />\r\n            <br />\r\n            <b>Descrption: </b>\r\n            <br /> {book.description} <br />\r\n            <br />\r\n            <b> Location: </b> <br />\r\n            Shelf no. {book.shelf} ,<br />\r\n            {book.floor === 0 ? \" Ground \" : book.floor}\r\n            {book.floor === 1\r\n              ? \"st \"\r\n              : book.floor === 2\r\n              ? \"nd \"\r\n              : book.floor === 3\r\n              ? \"rd \"\r\n              : book.floor === 0\r\n              ? \"\"\r\n              : \"th \"}\r\n            Floor <br />\r\n            <br />\r\n            <b> Copies available : </b> {book.copies}\r\n          </CardText>\r\n          <br />\r\n        </CardBody>\r\n        <CardFooter className=\"text-muted\">\r\n          <Row>\r\n            <Col md={6}>\r\n              Created at :{\" \"}\r\n              {new Intl.DateTimeFormat(\"en-US\", {\r\n                year: \"numeric\",\r\n                month: \"short\",\r\n                day: \"2-digit\",\r\n                hour: \"numeric\",\r\n                minute: \"numeric\",\r\n                hour12: true,\r\n              }).format(new Date(Date.parse(book.createdAt)))}\r\n            </Col>\r\n            <Col md={6}>\r\n              Last updated at :{\" \"}\r\n              {new Intl.DateTimeFormat(\"en-US\", {\r\n                year: \"numeric\",\r\n                month: \"short\",\r\n                day: \"2-digit\",\r\n                hour: \"numeric\",\r\n                minute: \"numeric\",\r\n                hour12: true,\r\n              }).format(new Date(Date.parse(book.updatedAt)))}\r\n            </Col>\r\n          </Row>\r\n        </CardFooter>\r\n      </Card>\r\n    );\r\n  else return <div></div>;\r\n}\r\n\r\nclass BookDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n  render() {\r\n    if (this.props.isLoading) {\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Loading />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.props.errMess) {\r\n      return (\r\n        <div className=\"container loading\">\r\n          <div className=\"row heading\">\r\n            <div className=\"col-12\">\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <h3>{this.props.errMess}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else\r\n      return (\r\n        <div className=\"container full\">\r\n          <div className=\"row heading\">\r\n            <div className=\"col-12\">\r\n              <br /> <br />\r\n              <RenderBook\r\n                book={this.props.book}\r\n                isAdmin={this.props.isAdmin}\r\n                toggleEditModal={this.props.toggleEditModal}\r\n                changeSelected={this.props.changeSelected}\r\n              ></RenderBook>\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default BookDetail;\r\n","import React, { Component } from \"react\";\r\nimport \"./stylesheets/ProfileComponent.css\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Label,\r\n  CardText,\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  FormGroup,\r\n} from \"reactstrap\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nconst validEmail = (val) =>\r\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nconst matchcreds = (original) => (val) => val === original;\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditModalOpen: false,\r\n      isPasswordModalOpen: false,\r\n    };\r\n    this.toggleEditModal = this.toggleEditModal.bind(this);\r\n    this.togglePasswordModal = this.togglePasswordModal.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  togglePasswordModal() {\r\n    this.setState({\r\n      isPasswordModalOpen: !this.state.isPasswordModalOpen,\r\n    });\r\n  }\r\n\r\n  toggleEditModal() {\r\n    this.setState({ isEditModalOpen: !this.state.isEditModalOpen });\r\n  }\r\n\r\n  render() {\r\n    if (this.props.auth.userinfo === null) {\r\n      return (\r\n        <div className=\"row heading\">\r\n          Failed to fetch. Please reload the page\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"profile-main\">\r\n        <div className=\"dark-bgm\">\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <Card className=\"heading\">\r\n              <CardHeader>\r\n                <h3>Personal Details</h3>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <CardText style={{ textAlign: \"left\" }}>\r\n                  <h5>First Name : {this.props.auth.userinfo.firstname}</h5>\r\n                  <h5>Last Name : {this.props.auth.userinfo.lastname}</h5>\r\n                  <h5>\r\n                    {this.props.auth.userinfo.admin ? \"Admin ID\" : \"Roll No.\"} : {this.props.auth.userinfo.roll}\r\n                  </h5>\r\n                  <h5>Email : {this.props.auth.userinfo.email}</h5>\r\n                </CardText>\r\n                <Button color=\"info\" onClick={this.toggleEditModal} style={{marginRight:10}}>\r\n                  Edit &nbsp;\r\n                  <span className=\"fa fa-pencil\" />\r\n                </Button>\r\n                {this.props.auth.userinfo.admin ? (\r\n                  <div />\r\n                ) : (\r\n                  <Button color=\"info\" onClick={this.togglePasswordModal}>\r\n                    Change Password &nbsp;\r\n                    <span className=\"fa fa-key\" />\r\n                  </Button>\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n          <Modal\r\n            isOpen={this.state.isEditModalOpen}\r\n            toggle={this.toggleEditModal}\r\n          >\r\n            <ModalHeader toggle={this.toggleEditModal}>\r\n              Edit Profile\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <LocalForm\r\n                model=\"user\"\r\n                onSubmit={(values) => {\r\n                  this.toggleEditModal();\r\n                  this.props.editUser(\r\n                    this.props.auth.userinfo._id,\r\n                    values.firstname,\r\n                    values.lastname,\r\n                    values.roll,\r\n                    values.email\r\n                  );\r\n                }}\r\n              >\r\n                <FormGroup>\r\n                  <Label htmlFor=\"firstname\">First Name</Label>\r\n                  <Control.text\r\n                    model=\".firstname\"\r\n                    id=\"firstname\"\r\n                    name=\"firstname\"\r\n                    className=\"form-control\"\r\n                    defaultValue={this.props.auth.userinfo.firstname}\r\n                    placeholder=\"firstname\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(20),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".firstname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \" Must be greater than 2 characters\",\r\n                      maxLength: \" Must be 20 characters or less\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"lastname\">Last Name</Label>\r\n                  <Control.text\r\n                    model=\".lastname\"\r\n                    id=\"lastname\"\r\n                    name=\"lastname\"\r\n                    className=\"form-control\"\r\n                    defaultValue={this.props.auth.userinfo.lastname}\r\n                    placeholder=\"lastname\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(20),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".lastname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \" Must be greater than 2 characters\",\r\n                      maxLength: \" Must be 20 characters or less\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"roll\">Roll No.</Label>\r\n                  <Control.text\r\n                    model=\".roll\"\r\n                    id=\"roll\"\r\n                    name=\"roll\"\r\n                    className=\"form-control\"\r\n                    defaultValue={this.props.auth.userinfo.roll}\r\n                    placeholder=\"roll\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(12),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".roll\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \" Must be greater than 2 characters\",\r\n                      maxLength: \" Must be 12 characters or less\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"email\">E-mail</Label>\r\n                  <Control.text\r\n                    model=\".email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    defaultValue={this.props.auth.userinfo.email}\r\n                    className=\"form-control\"\r\n                    placeholder=\"email\"\r\n                    validators={{ required, validEmail }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".email\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      validEmail: \" Enter a valid email\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n                <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                  Submit\r\n                </Button>\r\n              </LocalForm>\r\n            </ModalBody>\r\n          </Modal>\r\n\r\n          <Modal\r\n            isOpen={this.state.isPasswordModalOpen}\r\n            toggle={this.togglePasswordModal}\r\n          >\r\n            <ModalHeader toggle={this.togglePasswordModal}>\r\n              Change Password\r\n            </ModalHeader>\r\n            <ModalBody>\r\n              <LocalForm\r\n                model=\"passwordform\"\r\n                onSubmit={(values) => {\r\n                  if (values.newpassword === values.confirm) {\r\n                    this.togglePasswordModal();\r\n                    this.props.editPassword(\r\n                      this.props.auth.userinfo._id,\r\n                      this.props.auth.user.username,\r\n                      values.newpassword\r\n                    );\r\n                  } else {\r\n                    alert(\"Your passwords didn't match. Please try again\");\r\n                  }\r\n                }}\r\n              >\r\n                <FormGroup>\r\n                  <Label htmlFor=\"password\">Current Password</Label>\r\n                  <Control.password\r\n                    model=\".password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"password\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(6),\r\n                      maxLength: maxLength(20),\r\n                      matchcreds: matchcreds(this.props.auth.user.password),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".password\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \" Must be greater than 5 characters\",\r\n                      maxLength: \" Must be 20 characters or less\",\r\n                      matchcreds: \" Enter the correct password\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                  <Label htmlFor=\"newpassword\">New password</Label>\r\n                  <Control.password\r\n                    model=\".newpassword\"\r\n                    id=\"newpassword\"\r\n                    name=\"newpassword\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"New Password\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(6),\r\n                      maxLength: maxLength(20),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".newpassword\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \" Must be greater than 5 characters\",\r\n                      maxLength: \" Must be 20 characters or less\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                  <Label htmlFor=\"confirm\">Confirm Password</Label>\r\n                  <Control.password\r\n                    model=\".confirm\"\r\n                    id=\"confirm\"\r\n                    name=\"confirm\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Re-enter the new password\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(6),\r\n                      maxLength: maxLength(20),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".confirm\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \" Must be greater than 5 characters\",\r\n                      maxLength: \" Must be 20 characters or less\",\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                  Submit\r\n                </Button>\r\n              </LocalForm>\r\n            </ModalBody>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Label, Col, Row } from \"reactstrap\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\nimport Loading from \"./LoadingComponent\";\r\n\r\nconst required = (val) => val && val.length;\r\nconst requiredNum = (val) => !!val;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nconst maxVal = (len) => (val) => !val || val <= len;\r\nconst minVal = (len) => (val) => val && val >= len;\r\nconst isNumber = (val) => !isNaN(Number(val));\r\n\r\nclass AddBook extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  render() {\r\n    let uniqueIsbn = (val) =>\r\n      !this.props.books.some((book) => book.isbn === val);\r\n    let uniqueName = (val) =>\r\n      !this.props.books.some((book) => book.name === val);\r\n\r\n    if (this.props.booksLoading) {\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Loading />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.props.booksErrMess) {\r\n      return (\r\n        <div className=\"container loading\">\r\n          <div className=\"row heading\">\r\n            <div className=\"col-12\">\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <h3>{this.props.booksErrMess}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center heading\">\r\n            <div className=\"col-12\">\r\n              <h3 align=\"center\"> Add a book</h3>\r\n            </div>\r\n          </div>\r\n          <div className=\"row row-content justify-content-center\">\r\n            <LocalForm\r\n              onSubmit={(values) => {\r\n                this.props.postBook(\r\n                  values.name,\r\n                  values.author,\r\n                  values.description,\r\n                  values.isbn,\r\n                  values.cat,\r\n                  values.floor,\r\n                  values.shelf,\r\n                  values.copies\r\n                );\r\n              }}\r\n            >\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"name\" md={2}>\r\n                  Name{\" \"}\r\n                </Label>\r\n                <Col md={4}>\r\n                  <Control.text\r\n                    model=\".name\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Name of book\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      uniqueName,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".name\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \" Must be greater than 2 characters\",\r\n                      uniqueName: \" There exists a book with this name already\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Label htmlFor=\"author\" md={2}>\r\n                  Authors{\" \"}\r\n                </Label>\r\n                <Col md={4}>\r\n                  <Control.text\r\n                    model=\".author\"\r\n                    id=\"author\"\r\n                    name=\"author\"\r\n                    placeholder=\"Name of authors\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".author\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \" Must be greater than 2 characters\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"isbn\" md={2}>\r\n                  ISBN No.\r\n                </Label>\r\n                <Col md={4}>\r\n                  <Control.text\r\n                    model=\".isbn\"\r\n                    id=\"isbn\"\r\n                    name=\"isbn\"\r\n                    placeholder=\"ISBN no. of book\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(10),\r\n                      maxLength: maxLength(13),\r\n                      isNumber,\r\n                      uniqueIsbn,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".isbn\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \" Must be greater than 9 numbers\",\r\n                      maxLength: \" Must be 13 numbers or less\",\r\n                      isNumber: \" Must be a number\",\r\n                      uniqueIsbn: \" There exists a book with this ISBN No.\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n                <Label htmlFor=\"copies\" md={3}>\r\n                  {\" \"}\r\n                  Copies Available\r\n                </Label>\r\n                <Col md={3}>\r\n                  <Control.text\r\n                    model=\".copies\"\r\n                    id=\"copies\"\r\n                    name=\"copies\"\r\n                    placeholder=\"Number of copies available\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      requiredNum,\r\n                      minVal: minVal(1),\r\n                      maxVal: maxVal(1000),\r\n                      isNumber,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".copies\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      requiredNum: \"Required\",\r\n                      minVal: \" Must be greater than 0\",\r\n                      maxVal: \" Must be 1000 or less\",\r\n                      isNumber: \" Must be a number\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Col>\r\n                  <Label htmlFor=\"cat\">Category</Label>\r\n                  <Control.select\r\n                    defaultValue=\"Romance\"\r\n                    model=\".cat\"\r\n                    id=\"cat\"\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option>Romance</option> <option>Technology</option>\r\n                    <option>Computer Science</option>{\" \"}\r\n                    <option>Management</option>\r\n                    <option>Electronics</option> <option>Physics</option>\r\n                    <option>Chemistry</option> <option>Mathematics</option>\r\n                    <option>Fiction</option> <option>Philosophy</option>\r\n                    <option>Language</option> <option>Arts</option>\r\n                    <option>Other</option>\r\n                  </Control.select>\r\n                </Col>\r\n                <Col>\r\n                  <Label htmlFor=\"floor\">Floor </Label>\r\n                  <Control.select\r\n                    defaultValue={0}\r\n                    model=\".floor\"\r\n                    id=\"floor\"\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option>0</option> <option>1</option>\r\n                    <option>2</option> <option>3</option>\r\n                    <option>4</option> <option>5</option>\r\n                    <option>6</option> <option>7</option>\r\n                    <option>8</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group text-center justify-content-center\">\r\n                <Label htmlFor=\"shelf\" md={3}>\r\n                  {\" \"}\r\n                  Shelf\r\n                </Label>\r\n                <Col md={6}>\r\n                  <Control.text\r\n                    model=\".shelf\"\r\n                    id=\"shelf\"\r\n                    name=\"shelf\"\r\n                    placeholder=\"Shelf no. for locating book\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      requiredNum,\r\n                      minVal: minVal(1),\r\n                      maxVal: maxVal(100),\r\n                      isNumber,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".shelf\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      requiredNum: \"Required\",\r\n                      minVal: \" Must be greater than 0\",\r\n                      maxVal: \" Must be 100 or less\",\r\n                      isNumber: \" Must be a number\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"description\" md={2}>\r\n                  Description\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.textarea\r\n                    model=\".description\"\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    rows=\"12\"\r\n                    placeholder=\"Some description of the book\"\r\n                    className=\"form-control\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"align-self-center\">\r\n                <Col className=\"text-center\">\r\n                  <Button type=\"submit\" className=\"bg-primary\">\r\n                    Submit\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </LocalForm>\r\n          </div>\r\n          <br />\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default AddBook;\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"./LoadingComponent.js\";\r\n\r\nconst fineRate = 1;\r\nlet totalFine = 0;\r\nconst allowedDays = 30;\r\nfunction RenderIssue({ issue, i }) {\r\n  const dates = [];\r\n  const today = new Date();\r\n  dates.push(today);\r\n  const issueDate = new Date(Date.parse(issue.createdAt));\r\n  const deadline = new Date(Date.parse(issue.createdAt));\r\n  deadline.setDate(deadline.getDate() + 30);\r\n  dates.push(deadline);\r\n  const returnDate = issue.returned\r\n    ? new Date(Date.parse(issue.updatedAt))\r\n    : new Date(Math.min.apply(null, dates));\r\n  let fine = 0;\r\n  if (\r\n    (returnDate.getTime() - issueDate.getTime()) / (1000 * 60 * 60 * 24) >\r\n    allowedDays\r\n  ) {\r\n    fine =\r\n      Math.floor(\r\n        (returnDate.getTime() - issueDate.getTime()) / (1000 * 60 * 60 * 24)\r\n      ) * fineRate;\r\n  }\r\n  totalFine += fine;\r\n  return (\r\n    <React.Fragment>\r\n      <td>{i}</td>\r\n      <td>\r\n        <Link to={`/books/${issue.book._id}`}>{issue.book.name}</Link>\r\n      </td>\r\n      <td>{issue.book.isbn}</td>\r\n      <td>\r\n        {new Intl.DateTimeFormat(\"en-US\", {\r\n          year: \"numeric\",\r\n          month: \"short\",\r\n          day: \"2-digit\",\r\n        }).format(new Date(Date.parse(issue.createdAt)))}\r\n      </td>\r\n      <td>\r\n        {new Intl.DateTimeFormat(\"en-US\", {\r\n          year: \"numeric\",\r\n          month: \"short\",\r\n          day: \"2-digit\",\r\n        }).format(deadline)}\r\n      </td>\r\n      <td>\r\n        {issue.returned\r\n          ? \"Returned on \" +\r\n            new Intl.DateTimeFormat(\"en-US\", {\r\n              year: \"numeric\",\r\n              month: \"short\",\r\n              day: \"2-digit\",\r\n            }).format(new Date(Date.parse(returnDate)))\r\n          : \"Not returned yet\"}\r\n      </td>\r\n      <td>{fine}</td>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nclass History extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.i = 1;\r\n  }\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  render() {\r\n    if (this.props.issues.isLoading) {\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Loading />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.props.issues.errMess) {\r\n      return (\r\n        <div className=\"container loading\">\r\n          <div className=\"row heading\">\r\n            <div className=\"col-12\">\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <h3>{this.props.errMess}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.props.issues.issues.length === 0) {\r\n      return (\r\n        <div className=\"container loading\">\r\n          <div className=\"row heading\">\r\n            <div className=\"col-12 text-center\">\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <h4>{\"You have not issued any books.\"}</h4>\r\n              <h4>{\"Request admin to issue a book\"}</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      const list = this.props.issues.issues.map((issue) => {\r\n        return (\r\n          <tr key={issue._id}>\r\n            <RenderIssue issue={issue} i={this.i++} />\r\n          </tr>\r\n        );\r\n      });\r\n\r\n      return (\r\n        <div className=\"container mt-6 text-center align-self-center full\">\r\n          <div className=\"row text-center justify-content-center\">\r\n            <div className=\"col-12 heading\">\r\n              <h3>Issue History</h3>\r\n              <Table striped bordered hover responsive>\r\n                <thead>\r\n                  <tr>\r\n                    <th>S.No.</th>\r\n                    <th>Name of Book</th>\r\n                    <th>ISBN number</th>\r\n                    <th>Issue Date</th>\r\n                    <th>Return Deadline</th>\r\n                    <th>Return status</th>\r\n                    <th>Fine (in Rs.)</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>{list}</tbody>\r\n              </Table>\r\n              <br />\r\n              <h6>\r\n                {\" \"}\r\n                Total Fine due (if all pending books are returned today) : Rs.{\" \"}\r\n                {totalFine}{\" \"}\r\n              </h6>\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default History;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Form, FormGroup, Label, Input, Col, Row } from \"reactstrap\";\r\nimport Loading from \"./LoadingComponent\";\r\n\r\nclass Issue extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isbn: \"\",\r\n      roll: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  render() {\r\n    if (this.props.booksLoading || this.props.usersLoading) {\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Loading />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.props.booksErrMess) {\r\n      return (\r\n        <div className=\"container loading\">\r\n          <div className=\"row heading\">\r\n            <div className=\"col-12\">\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <h3>{this.props.booksErrMess}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.props.usersErrMess) {\r\n      return (\r\n        <div className=\"container loading\">\r\n          <div className=\"row heading\">\r\n            <div className=\"col-12\">\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <h3>{this.props.usersErrMess}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      const bookoptions = this.props.books.map((book, index) => (\r\n        <option key={book.isbn}>{book.isbn}</option>\r\n      ));\r\n      const defaultBook = this.props.books[0];\r\n      // To just get list of the students (not the admins)\r\n      let useroptions = this.props.users.filter((user) => !user.admin);\r\n      const defaultUser = useroptions[0];\r\n      useroptions = useroptions.map((user, index) => (\r\n        <option key={user.roll}>{user.roll}</option>\r\n      ));\r\n      if (this.state.isbn === \"\") {\r\n        this.setState({ isbn: defaultBook.isbn, roll: defaultUser.roll });\r\n      }\r\n      return (\r\n        <div className=\"container full\">\r\n          <div className=\"row justify-content-center heading\">\r\n            <div className=\"col-12\">\r\n              <h3 align=\"center\"> Issue book</h3>\r\n            </div>\r\n          </div>\r\n          <div className=\"row row-content justify-content-center\">\r\n            <Form\r\n              onSubmit={(e) => {\r\n                let bookid = this.props.books.filter(\r\n                  (book) => book.isbn === this.state.isbn\r\n                )[0]._id;\r\n                let studentid = this.props.users.filter(\r\n                  (user) => user.roll === this.state.roll\r\n                )[0]._id;\r\n                this.props.postIssue(bookid, studentid);\r\n                e.preventDefault();\r\n              }}\r\n            >\r\n              <FormGroup row>\r\n                <Label htmlFor=\"isbn\"> ISBN No. of book</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  defaultValue={defaultBook.name}\r\n                  name=\"isbn\"\r\n                  id=\"isbn\"\r\n                  className=\"form-control\"\r\n                  onInput={(e) => {\r\n                    this.setState({ isbn: e.target.value });\r\n                  }}\r\n                >\r\n                  {bookoptions}\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Label htmlFor=\"roll\"> Roll No. of student </Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  id=\"roll\"\r\n                  className=\"form-control\"\r\n                  onInput={(e) => {\r\n                    this.setState({ roll: e.target.value });\r\n                  }}\r\n                >\r\n                  {useroptions}\r\n                </Input>\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Label htmlFor=\"name\"> Name of book </Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  placeholder=\"Name of Book\"\r\n                  defaultValue={defaultBook.name}\r\n                  value={\r\n                    !this.state.isbn\r\n                      ? \"\"\r\n                      : this.props.books.filter(\r\n                          (book) => book.isbn === this.state.isbn\r\n                        )[0].name\r\n                  }\r\n                  className=\"form-control\"\r\n                  disabled\r\n                />\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Label htmlFor=\"author\"> Authors </Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"author\"\r\n                  name=\"author\"\r\n                  placeholder=\"Name of authors\"\r\n                  defaultValue={defaultBook.author}\r\n                  value={\r\n                    !this.state.isbn\r\n                      ? \"\"\r\n                      : this.props.books.filter(\r\n                          (book) => book.isbn === this.state.isbn\r\n                        )[0].author\r\n                  }\r\n                  className=\"form-control\"\r\n                  disabled\r\n                />\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Label htmlFor=\"name_student\"> Name of student </Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"name_student\"\r\n                  name=\"name_student\"\r\n                  placeholder=\"Name of student\"\r\n                  defaultValue={\r\n                    defaultUser.firstname + \" \" + defaultUser.lastname\r\n                  }\r\n                  value={\r\n                    !this.state.roll\r\n                      ? \"\"\r\n                      : this.props.users.filter(\r\n                          (user) => user.roll === this.state.roll\r\n                        )[0].firstname +\r\n                        \" \" +\r\n                        this.props.users.filter(\r\n                          (user) => user.roll === this.state.roll\r\n                        )[0].lastname\r\n                  }\r\n                  className=\"form-control\"\r\n                  disabled\r\n                />\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Label htmlFor=\"username\"> Username of student </Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  placeholder=\"Username of student\"\r\n                  defaultValue={defaultUser.username}\r\n                  value={\r\n                    !this.state.roll\r\n                      ? \"\"\r\n                      : this.props.users.filter(\r\n                          (user) => user.roll === this.state.roll\r\n                        )[0].username\r\n                  }\r\n                  className=\"form-control\"\r\n                  disabled\r\n                />\r\n              </FormGroup>\r\n              <Row className=\"align-self-center\">\r\n                <Col className=\"text-center\">\r\n                  <Button type=\"submit\" className=\"bg-primary\">\r\n                    Submit\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n          <br />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Issue;\r\n","import React, { Component } from \"react\";\r\nimport { Table, Button } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"./LoadingComponent.js\";\r\n\r\nconst fineRate = 1;\r\nlet totalFine = 0;\r\nconst allowedDays = 30;\r\nfunction RenderIssue({ issue, i, returnBook }) {\r\n  const dates = [];\r\n  const today = new Date();\r\n  dates.push(today);\r\n  const issueDate = new Date(Date.parse(issue.createdAt));\r\n  const deadline = new Date(Date.parse(issue.createdAt));\r\n  deadline.setDate(deadline.getDate() + 30);\r\n  dates.push(deadline);\r\n  const returnDate = issue.returned\r\n    ? new Date(Date.parse(issue.updatedAt))\r\n    : new Date(Math.min.apply(null, dates));\r\n  let fine = 0;\r\n  if (\r\n    (returnDate.getTime() - issueDate.getTime()) / (1000 * 60 * 60 * 24) >\r\n    allowedDays\r\n  ) {\r\n    fine =\r\n      Math.floor(\r\n        (returnDate.getTime() - issueDate.getTime()) / (1000 * 60 * 60 * 24)\r\n      ) * fineRate;\r\n  }\r\n  totalFine += fine;\r\n  return (\r\n    <React.Fragment>\r\n      <td>{i}</td>\r\n      <td>\r\n        <Link to={`/users/${issue.student._id}`}>\r\n          {issue.student.firstname + \" \" + issue.student.lastname}\r\n        </Link>\r\n      </td>\r\n      <td>{issue.student.roll}</td>\r\n      <td>\r\n        {issue.book == null ? (\r\n          \"N/A\"\r\n        ) : (\r\n          <Link to={`/books/${issue.book._id}`}>{issue.book.name}</Link>\r\n        )}\r\n      </td>\r\n      <td>{issue.book == null ? \"N/A\" : issue.book.isbn}</td>\r\n      <td>\r\n        {new Intl.DateTimeFormat(\"en-US\", {\r\n          year: \"numeric\",\r\n          month: \"short\",\r\n          day: \"2-digit\",\r\n        }).format(new Date(Date.parse(issue.createdAt)))}\r\n      </td>\r\n      <td>\r\n        {new Intl.DateTimeFormat(\"en-US\", {\r\n          year: \"numeric\",\r\n          month: \"short\",\r\n          day: \"2-digit\",\r\n        }).format(deadline)}\r\n      </td>\r\n      <td>{fine}</td>\r\n      <td>\r\n        <Button\r\n          color=\"info\"\r\n          onClick={() => {\r\n            returnBook(issue._id);\r\n          }}\r\n        >\r\n          Return\r\n        </Button>\r\n      </td>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nclass Return extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.i = 1;\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.issues);\r\n    if (this.props.issues.isLoading) {\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Loading />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.props.issues.errMess) {\r\n      return (\r\n        <div className=\"container loading\">\r\n          <div className=\"row heading\">\r\n            <div className=\"col-12\">\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <h3>{this.props.errMess}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.props.issues.issues.length === 0) {\r\n      return (\r\n        <div className=\"container loading\">\r\n          <div className=\"row heading\">\r\n            <div className=\"col-12 text-center\">\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <h4>{\"All books have been returned.\"}</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      const dueIssues = this.props.issues.issues.filter(\r\n        (issue) => !issue.returned\r\n      );\r\n      const list = dueIssues.map((issue) => {\r\n        return (\r\n          <tr key={issue._id}>\r\n            <RenderIssue\r\n              issue={issue}\r\n              i={this.i++}\r\n              returnBook={this.props.returnIssue}\r\n            />\r\n          </tr>\r\n        );\r\n      });\r\n\r\n      return (\r\n        <div className=\"container mt-6 text-center align-self-center full\">\r\n          <div className=\"row text-center justify-content-center\">\r\n            <div className=\"col-12 heading\">\r\n              <h3>List of books not returned</h3>\r\n              <Table striped bordered hover responsive>\r\n                <thead>\r\n                  <tr>\r\n                    <th>S.No.</th>\r\n                    <th>Name of Student</th>\r\n                    <th>Roll No.</th>\r\n                    <th>Name of Book</th>\r\n                    <th>ISBN number</th>\r\n                    <th>Issue Date</th>\r\n                    <th>Return Deadline</th>\r\n                    <th>Fine (in Rs.)</th>\r\n                    <th>Return book</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>{list}</tbody>\r\n              </Table>\r\n              <br />\r\n              <h6>\r\n                {\" \"}\r\n                Total Fine due (if all pending books are returned today) : Rs.{\" \"}\r\n                {totalFine}{\" \"}\r\n              </h6>\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Return;\r\n","import React, { Component } from \"react\";\r\nimport { Card, CardBody, CardHeader, CardText } from \"reactstrap\";\r\nimport Loading from \"./LoadingComponent\";\r\n\r\nclass UserDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  render() {\r\n    if (this.props.isLoading) {\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Loading />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.props.errMess) {\r\n      return (\r\n        <div className=\"container loading\">\r\n          <div className=\"row heading\">\r\n            <div className=\"col-12\">\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <h3>{this.props.errMess}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else\r\n      return (\r\n        <div className=\"container mt-6 home text-center align-self-center\">\r\n          <div className=\"row text-center justify-content-center\">\r\n            <Card className=\"heading\">\r\n              <CardHeader>\r\n                <h3>User Details</h3>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <CardText>\r\n                  <h5>\r\n                    {\" \"}\r\n                    First Name : {\"          \" + this.props.user.firstname}\r\n                  </h5>\r\n                  <h5>\r\n                    {\" \"}\r\n                    Last Name : {\"          \" + this.props.user.lastname}\r\n                  </h5>\r\n                  <h5>\r\n                    {\" \"}\r\n                    {this.props.user.admin ? \"Admin ID\" : \"Roll No.\"} :{\" \"}\r\n                    {\"          \" + this.props.user.roll}\r\n                  </h5>\r\n                  <h5> Email : {\"          \" + this.props.user.email}</h5>\r\n                  <h5> Username : {\"          \" + this.props.user.username}</h5>\r\n                </CardText>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default UserDetail;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardText,\r\n  CardBody,\r\n  CardLink,\r\n  CardTitle,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"./LoadingComponent.js\";\r\n\r\nclass Stats extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.i = 1;\r\n  }\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  render() {\r\n    if (\r\n      this.props.issues.isLoading ||\r\n      this.props.booksLoading ||\r\n      this.props.usersLoading\r\n    ) {\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Loading />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.props.issues.errMess) {\r\n      return (\r\n        <div className=\"container loading\">\r\n          <div className=\"row heading\">\r\n            <div className=\"col-12\">\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <h3>{this.props.issues.errMess}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.props.usersErrMess) {\r\n      return (\r\n        <div className=\"container loading\">\r\n          <div className=\"row heading\">\r\n            <div className=\"col-12\">\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <h3>{this.props.usersErrMess}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.props.booksErrMess) {\r\n      return (\r\n        <div className=\"container loading\">\r\n          <div className=\"row heading\">\r\n            <div className=\"col-12\">\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <h3>{this.props.booksErrMess}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container mt-6 text-center align-self-center full\">\r\n          <div className=\"row text-center justify-content-center heading\">\r\n            <div className=\"col-12\">\r\n              <h3>Stats</h3>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6 col-xl-4 mt-4\">\r\n              <Card>\r\n                <CardBody>\r\n                  <CardTitle>\r\n                    <h1>{this.props.books.length}</h1>\r\n                  </CardTitle>\r\n                  <CardText>Different books available</CardText>\r\n                  <CardLink tag={Link} to=\"/books\">\r\n                    <Button color=\"info\">\r\n                      <i className=\"fa fa-eye fa-lg\" /> &nbsp;View\r\n                    </Button>\r\n                  </CardLink>\r\n                </CardBody>\r\n              </Card>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-6 col-xl-4 mt-4\">\r\n              <Card>\r\n                <CardBody>\r\n                  <CardTitle>\r\n                    <h1>{this.props.issues.issues.length}</h1>\r\n                  </CardTitle>\r\n                  <CardText>Books Issued</CardText>\r\n                  <CardLink tag={Link} to=\"/logs\">\r\n                    <Button color=\"info\">\r\n                      <i className=\"fa fa-eye fa-lg\" /> &nbsp;View\r\n                    </Button>\r\n                  </CardLink>\r\n                </CardBody>\r\n              </Card>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-xl-4 mt-4\">\r\n              <Card>\r\n                <CardBody>\r\n                  <CardTitle>\r\n                    <h1>\r\n                      {\r\n                        this.props.issues.issues.filter(\r\n                          (issue) => !issue.returned\r\n                        ).length\r\n                      }\r\n                    </h1>\r\n                  </CardTitle>\r\n                  <CardText>Books not yet returned</CardText>\r\n                  <CardLink>\r\n                    <Button tag={Link} to=\"/return\" color=\"info\">\r\n                      <i className=\"fa fa-eye fa-lg\" /> &nbsp;View\r\n                    </Button>\r\n                  </CardLink>\r\n                </CardBody>\r\n              </Card>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-xl-4 mt-4\">\r\n              <Card>\r\n                <CardBody>\r\n                  <CardTitle>\r\n                    <h1>\r\n                      {this.props.users.filter((user) => !user.admin).length}\r\n                    </h1>\r\n                  </CardTitle>\r\n                  <CardText>Students registered</CardText>\r\n                  <CardLink tag={Link} to=\"/list_students\">\r\n                    <Button color=\"info\">\r\n                      <i className=\"fa fa-eye fa-lg\" /> &nbsp;View\r\n                    </Button>\r\n                  </CardLink>\r\n                </CardBody>\r\n              </Card>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-xl-4 mt-4\">\r\n              <Card>\r\n                <CardBody>\r\n                  <CardTitle>\r\n                    <h1>\r\n                      {this.props.users.filter((user) => user.admin).length}\r\n                    </h1>\r\n                  </CardTitle>\r\n                  <CardText>Administrators in-charge</CardText>\r\n                  <CardLink tag={Link} to=\"/list_admins\">\r\n                    <Button color=\"info\">\r\n                      <i className=\"fa fa-eye fa-lg\" /> &nbsp;View\r\n                    </Button>\r\n                  </CardLink>\r\n                </CardBody>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n\r\n          <br />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Stats;\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"./LoadingComponent.js\";\r\n\r\nconst fineRate = 1;\r\n\r\nconst allowedDays = 30;\r\nfunction RenderIssue({ issue, i }) {\r\n  const dates = [];\r\n  const today = new Date();\r\n  dates.push(today);\r\n  const issueDate = new Date(Date.parse(issue.createdAt));\r\n  const deadline = new Date(Date.parse(issue.createdAt));\r\n  deadline.setDate(deadline.getDate() + 30);\r\n  dates.push(deadline);\r\n  const returnDate = issue.returned\r\n    ? new Date(Date.parse(issue.updatedAt))\r\n    : new Date(Math.min.apply(null, dates));\r\n  let fine = 0;\r\n  if (\r\n    (returnDate.getTime() - issueDate.getTime()) / (1000 * 60 * 60 * 24) >\r\n    allowedDays\r\n  ) {\r\n    fine =\r\n      Math.floor(\r\n        (returnDate.getTime() - issueDate.getTime()) / (1000 * 60 * 60 * 24)\r\n      ) * fineRate;\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <td>{i}</td>\r\n      <td>\r\n        <Link to={`/users/${issue.student._id}`}>\r\n          {issue.student.firstname + \" \" + issue.student.lastname}\r\n        </Link>\r\n      </td>\r\n      <td>{issue.student.roll}</td>\r\n      <td>\r\n        {issue.book == null ? (\r\n          \"N/A\"\r\n        ) : (\r\n          <Link to={`/books/${issue.book._id}`}>{issue.book.name}</Link>\r\n        )}\r\n      </td>\r\n      <td>{issue.book == null ? \"N/A\" : issue.book.isbn}</td>\r\n      <td>\r\n        {new Intl.DateTimeFormat(\"en-US\", {\r\n          year: \"numeric\",\r\n          month: \"short\",\r\n          day: \"2-digit\",\r\n        }).format(new Date(Date.parse(issue.createdAt)))}\r\n      </td>\r\n      <td>\r\n        {new Intl.DateTimeFormat(\"en-US\", {\r\n          year: \"numeric\",\r\n          month: \"short\",\r\n          day: \"2-digit\",\r\n        }).format(deadline)}\r\n      </td>\r\n      <td>\r\n        {issue.returned\r\n          ? \"Returned on \" +\r\n            new Intl.DateTimeFormat(\"en-US\", {\r\n              year: \"numeric\",\r\n              month: \"short\",\r\n              day: \"2-digit\",\r\n            }).format(new Date(Date.parse(returnDate)))\r\n          : \"Not returned yet\"}\r\n      </td>\r\n      <td>{fine}</td>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nclass Log extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.i = 1;\r\n  }\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  render() {\r\n    if (this.props.issues.isLoading) {\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Loading />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.props.issues.errMess) {\r\n      return (\r\n        <div className=\"container loading\">\r\n          <div className=\"row heading\">\r\n            <div className=\"col-12\">\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <h3>{this.props.errMess}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.props.issues.issues.length === 0) {\r\n      return (\r\n        <div className=\"container loading\">\r\n          <div className=\"row heading\">\r\n            <div className=\"col-12 text-center\">\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <h4>{\"You have not issued any books.\"}</h4>\r\n              <h4>{\"Request admin to issue a book\"}</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      const list = this.props.issues.issues.map((issue) => {\r\n        return (\r\n          <tr key={issue._id}>\r\n            <RenderIssue issue={issue} i={this.i++} />\r\n          </tr>\r\n        );\r\n      });\r\n\r\n      return (\r\n        <div className=\"container mt-6 text-center align-self-center full\">\r\n          <div className=\"row text-center justify-content-center\">\r\n            <div className=\"col-12 heading\">\r\n              <h3>Issue Log</h3>\r\n              <Table striped bordered hover responsive>\r\n                <thead>\r\n                  <tr>\r\n                    <th>S.No.</th>\r\n                    <th>Name of Student</th>\r\n                    <th>Roll No.</th>\r\n                    <th>Name of Book</th>\r\n                    <th>ISBN number</th>\r\n                    <th>Issue Date</th>\r\n                    <th>Return Deadline</th>\r\n                    <th>Return status</th>\r\n                    <th>Fine (in Rs.)</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>{list}</tbody>\r\n              </Table>\r\n              <br />\r\n\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Log;\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"./LoadingComponent.js\";\r\n\r\nfunction RenderUser({ user, i }) {\r\n  return (\r\n    <React.Fragment>\r\n      <td>{i}</td>\r\n      <td>\r\n        <Link to={`/users/${user._id}`}>\r\n          {user.firstname + \" \" + user.lastname}\r\n        </Link>\r\n      </td>\r\n      <td>{user.roll}</td>\r\n      <td>{user.username}</td>\r\n      <td>{user.email}</td>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nclass UserList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.i = 1;\r\n  }\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  render() {\r\n    if (this.props.usersLoading) {\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Loading />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.props.usersErrMess) {\r\n      return (\r\n        <div className=\"container loading\">\r\n          <div className=\"row heading\">\r\n            <div className=\"col-12\">\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <h3>{this.props.errMess}</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.props.users.length === 0) {\r\n      return (\r\n        <div className=\"container loading\">\r\n          <div className=\"row heading\">\r\n            <div className=\"col-12 text-center\">\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <h4>{\"No users found\"}</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      const list = this.props.users.map((user) => {\r\n        return (\r\n          <tr key={user._id}>\r\n            <RenderUser user={user} i={this.i++} />\r\n          </tr>\r\n        );\r\n      });\r\n\r\n      return (\r\n        <div className=\"container mt-6 text-center align-self-center full\">\r\n          <div className=\"row text-center justify-content-center\">\r\n            <div className=\"col-12 heading\">\r\n              <h3>\r\n                List of{\" \"}\r\n                {this.props.users[0].admin\r\n                  ? \" admins in-charge\"\r\n                  : \" students registered\"}\r\n              </h3>\r\n              <Table striped bordered hover responsive>\r\n                <thead>\r\n                  <tr>\r\n                    <th>S.No.</th>\r\n                    <th>\r\n                      Name of{\" \"}\r\n                      {this.props.users[0].admin ? \" admin\" : \" student\"}\r\n                    </th>\r\n                    <th>\r\n                      {this.props.users[0].admin ? \" Admin Id\" : \" Roll No.\"}\r\n                    </th>\r\n                    <th>Username</th>\r\n                    <th>Email</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>{list}</tbody>\r\n              </Table>\r\n              <br />\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default UserList;\r\n","export const BOOKS_LOADING = \"BOOKS_LOADING\";\r\nexport const BOOKS_FAILED = \"BOOKS_FAILED\";\r\nexport const ADD_BOOKS = \"ADD_BOOKS\";\r\nexport const ADD_BOOK = \"ADD_BOOK\";\r\nexport const EDIT_BOOK = \"EDIT_BOOK\";\r\nexport const DELETE_BOOK = \"DELETE_BOOK\";\r\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\r\nexport const EDIT_USER = \"EDIT_USER\";\r\nexport const EDIT_PASSWORD = \"EDIT_PASSWORD\";\r\nexport const ISSUES_LOADING = \"ISSUES_LOADING\";\r\nexport const ISSUES_FAILED = \"ISSUES_FAILED\";\r\nexport const ADD_ISSUES = \"ADD_ISSUES\";\r\nexport const ADD_ISSUE = \"ADD_ISSUE\";\r\nexport const RETURN_ISSUE = \"RETURN_ISSUE\";\r\nexport const USERS_LOADING = \"USERS_LOADING\";\r\nexport const USERS_FAILED = \"USERS_FAILED\";\r\nexport const ADD_USERS = \"ADD_USERS\";\r\n","export const baseUrl=\"https://lims-skit.herokuapp.com/api/\";\r\n// export const baseUrl=\"http://localhost:5000/api/\";\r\n","import * as ActionTypes from \"./ActionTypes\";\r\nimport { baseUrl } from \"../baseUrl\";\r\n\r\nexport const addBook = (book) => ({\r\n  type: ActionTypes.ADD_BOOK,\r\n  payload: book,\r\n});\r\n\r\nexport const postBook =\r\n  (name, author, description, isbn, cat, floor, shelf, copies) =>\r\n  (dispatch) => {\r\n    const newBook = {\r\n      name: name,\r\n      author: author,\r\n      description: description,\r\n      isbn: isbn,\r\n      cat: cat,\r\n      floor: floor,\r\n      shelf: shelf,\r\n      copies: copies,\r\n    };\r\n    const bearer = \"Bearer \" + localStorage.getItem(\"token\");\r\n    return fetch(baseUrl + \"books\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newBook),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: bearer,\r\n      },\r\n      //   ,        credentials: \"same-origin\"\r\n    })\r\n      .then(\r\n        (response) => {\r\n          if (response.ok) {\r\n            return response;\r\n          } else {\r\n            var error = new Error(\r\n              \"Error \" + response.status + \": \" + response.statusText\r\n            );\r\n            error.response = response;\r\n            throw error;\r\n          }\r\n        },\r\n        (error) => {\r\n          throw error;\r\n        }\r\n      )\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        alert(\"Book added successfully\");\r\n        return dispatch(addBook(response));\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Your book could not be added\\nError: \" + error.message);\r\n      });\r\n  };\r\n\r\nexport const editBook =\r\n  (_id, name, author, description, isbn, cat, floor, shelf, copies) =>\r\n  (dispatch) => {\r\n    const newBook = {\r\n      name: name,\r\n      author: author,\r\n      description: description,\r\n      isbn: isbn,\r\n      cat: cat,\r\n      floor: floor,\r\n      shelf: shelf,\r\n      copies: copies,\r\n    };\r\n    const bearer = \"Bearer \" + localStorage.getItem(\"token\");\r\n    return fetch(baseUrl + \"books/\" + _id, {\r\n      method: \"PUT\",\r\n      //  ,     credentials: 'same-origin'\r\n      body: JSON.stringify(newBook),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: bearer,\r\n      },\r\n    })\r\n      .then(\r\n        (response) => {\r\n          if (response.ok) {\r\n            return response;\r\n          } else {\r\n            var error = new Error(\r\n              \"Error \" + response.status + \": \" + response.statusText\r\n            );\r\n            error.response = response;\r\n            throw error;\r\n          }\r\n        },\r\n        (error) => {\r\n          throw error;\r\n        }\r\n      )\r\n      .then((response) => response.json())\r\n      .then((response) => dispatch(editBookdispatch(response)))\r\n      .catch((error) => {\r\n        alert(\"Your book could not be edited\\nError: \" + error.message);\r\n      });\r\n  };\r\n\r\nexport const editPassword = (_id, username, password) => (dispatch) => {\r\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\r\n  return fetch(baseUrl + \"users/password/\" + _id, {\r\n    method: \"PUT\",\r\n    //  ,     credentials: 'same-origin'\r\n    body: JSON.stringify({ password: password }),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: bearer,\r\n    },\r\n  })\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText + \"\\n \"\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        throw error;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      let newCreds = { username: username, password: password };\r\n      localStorage.removeItem(\"creds\");\r\n      localStorage.setItem(\"creds\", JSON.stringify(newCreds));\r\n      alert(\"Password changed successfully\");\r\n      return dispatch(editPasswordDispatch(newCreds));\r\n    })\r\n    .catch((error) => {\r\n      alert(\"Your password could not be changed\\nError: \" + error.message);\r\n    });\r\n};\r\n\r\nexport const editUser =\r\n  (_id, firstname, lastname, roll, email) => (dispatch) => {\r\n    const newUser = {\r\n      firstname: firstname,\r\n      lastname: lastname,\r\n      roll: roll,\r\n      email: email,\r\n    };\r\n    const bearer = \"Bearer \" + localStorage.getItem(\"token\");\r\n    return fetch(baseUrl + \"users/\" + _id, {\r\n      method: \"PUT\",\r\n      //  ,     credentials: 'same-origin'\r\n      body: JSON.stringify(newUser),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: bearer,\r\n      },\r\n    })\r\n      .then(\r\n        (response) => {\r\n          if (response.ok) {\r\n            return response;\r\n          } else {\r\n            var error = new Error(\r\n              \"Error \" + response.status + \": \" + response.statusText\r\n            );\r\n            error.response = response;\r\n            throw error;\r\n          }\r\n        },\r\n        (error) => {\r\n          throw error;\r\n        }\r\n      )\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        localStorage.removeItem(\"userinfo\");\r\n        localStorage.setItem(\"userinfo\", JSON.stringify(response));\r\n        return dispatch(editUserdispatch(response));\r\n      })\r\n      .catch((error) => {\r\n        alert(\r\n          \"Your profile could not be edited\\nError: \" +\r\n            error.message +\r\n            \"\\n May be someone has already registered with that Roll No. or Email\"\r\n        );\r\n      });\r\n  };\r\n\r\nexport const deleteBook = (_id) => (dispatch) => {\r\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\r\n  return fetch(baseUrl + \"books/\" + _id, {\r\n    method: \"DELETE\",\r\n    //  ,       credentials: \"same-origin\"\r\n    headers: {\r\n      Authorization: bearer,\r\n    },\r\n  })\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        throw error;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((response) => dispatch(deleteBookdispatch(response)))\r\n    .catch((error) => {\r\n      alert(\"Your book could not be deleted\\nError: \" + error.message);\r\n    });\r\n};\r\n\r\nexport const fetchBooks = () => (dispatch) => {\r\n  dispatch(booksLoading(true));\r\n  return fetch(baseUrl + \"books\")\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((books) => dispatch(addBooks(books)))\r\n    .catch((error) => dispatch(booksFailed(error.message)));\r\n};\r\n\r\nexport const fetchUsers = () => (dispatch) => {\r\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\r\n  dispatch(usersLoading(true));\r\n  return fetch(baseUrl + \"users\", {\r\n    headers: {\r\n      Authorization: bearer,\r\n    },\r\n  })\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((users) => dispatch(addUsers(users)))\r\n    .catch((error) => dispatch(usersFailed(error.message)));\r\n};\r\n\r\nexport const booksLoading = () => ({\r\n  type: ActionTypes.BOOKS_LOADING,\r\n});\r\n\r\nexport const booksFailed = (errmess) => ({\r\n  type: ActionTypes.BOOKS_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addBooks = (books) => ({\r\n  type: ActionTypes.ADD_BOOKS,\r\n  payload: books,\r\n});\r\n\r\nexport const addUsers = (users) => ({\r\n  type: ActionTypes.ADD_USERS,\r\n  payload: users,\r\n});\r\n\r\nexport const usersLoading = () => ({\r\n  type: ActionTypes.USERS_LOADING,\r\n});\r\n\r\nexport const editBookdispatch = (books) => ({\r\n  type: ActionTypes.EDIT_BOOK,\r\n  payload: books,\r\n});\r\n\r\nexport const returnBookdispatch = (issue) => ({\r\n  type: ActionTypes.RETURN_ISSUE,\r\n  payload: issue,\r\n});\r\n\r\nexport const editUserdispatch = (USER) => ({\r\n  type: ActionTypes.EDIT_USER,\r\n  payload: USER,\r\n});\r\n\r\nexport const editPasswordDispatch = (CREDS) => ({\r\n  type: ActionTypes.EDIT_PASSWORD,\r\n  payload: CREDS,\r\n});\r\n\r\nexport const deleteBookdispatch = (resp) => ({\r\n  type: ActionTypes.DELETE_BOOK,\r\n  payload: resp,\r\n});\r\n\r\nexport const requestLogin = (creds) => {\r\n  return {\r\n    type: ActionTypes.LOGIN_REQUEST,\r\n    creds,\r\n  };\r\n};\r\n\r\nexport const receiveLogin = (response) => {\r\n  return {\r\n    type: ActionTypes.LOGIN_SUCCESS,\r\n    token: response.token,\r\n    userinfo: response.userinfo,\r\n  };\r\n};\r\n\r\nexport const loginError = (message) => {\r\n  return {\r\n    type: ActionTypes.LOGIN_FAILURE,\r\n    message,\r\n  };\r\n};\r\n\r\nexport const loginUser = (creds) => (dispatch) => {\r\n  dispatch(requestLogin(creds));\r\n  return fetch(baseUrl + \"users/login\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(creds),\r\n  })\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        throw error;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      if (response.success) {\r\n        // If login was successful, set the token in local storage\r\n        localStorage.setItem(\"token\", response.token);\r\n        localStorage.setItem(\"creds\", JSON.stringify(creds));\r\n        localStorage.setItem(\"userinfo\", JSON.stringify(response.userinfo));\r\n        dispatch(fetchIssues(!response.userinfo.admin));\r\n        if (response.userinfo.admin) {\r\n          dispatch(fetchUsers());\r\n        }\r\n        setTimeout(() => {\r\n          logoutUser();\r\n          alert(\r\n            \"Your JWT token has expired. \\nPlease log in again to continue.\"\r\n          );\r\n        }, 3600 * 1000);\r\n        // Dispatch the success action\r\n        dispatch(receiveLogin(response));\r\n      } else {\r\n        var error = new Error(\"Error \" + response.status);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      alert(error.message + \"\\n\" + \"Username and password didn't match\");\r\n      return dispatch(loginError(error.message));\r\n    });\r\n};\r\n\r\nexport const registerUser = (creds) => (dispatch) => {\r\n  return fetch(baseUrl + \"users/signup\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(creds),\r\n  })\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        throw error;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      if (response.success) {\r\n        // If Registration was successful, alert the user\r\n        alert(\"Registration Successful\");\r\n      } else {\r\n        var error = new Error(\"Error \" + response.status);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    })\r\n    .catch((error) =>\r\n      alert(\r\n        error.message +\r\n          \"\\n\" +\r\n          \"May be someone has already registered with that username, email or Roll No.\\nTry Entering a new username,email or Roll No. \"\r\n      )\r\n    );\r\n};\r\n\r\nexport const addIssue = (issue) => ({\r\n  type: ActionTypes.ADD_ISSUE,\r\n  payload: issue,\r\n});\r\n\r\nexport const postIssue = (bookId, studentId) => (dispatch) => {\r\n  const newIssue = {\r\n    book: bookId,\r\n    student: studentId,\r\n  };\r\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\r\n  return fetch(baseUrl + \"issues\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(newIssue),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: bearer,\r\n    },\r\n    //   ,        credentials: \"same-origin\"\r\n  })\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        throw error;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      alert(\"Book issued successfully\");\r\n      return dispatch(addIssue(response));\r\n    })\r\n    .catch((error) => {\r\n      alert(\r\n        \"Book could not be issued\\nError: \" +\r\n          error.message +\r\n          \"\\n\" +\r\n          \"May be the student has already issued 3 books and not returned. Please return them first. \\n\" +\r\n          \"or the book may not available. You can wait for some days, until the book is returned to library.\"\r\n      );\r\n    });\r\n};\r\n\r\nexport const returnIssue = (issueId) => (dispatch) => {\r\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\r\n  return fetch(baseUrl + \"issues/\" + issueId, {\r\n    method: \"PUT\",\r\n    //  ,     credentials: 'same-origin'\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: bearer,\r\n    },\r\n  })\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        throw error;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((response) => {\r\n      alert(\"Book returned successfully\");\r\n      return dispatch(returnBookdispatch(response));\r\n    })\r\n    .catch((error) => {\r\n      alert(\"The book could not be returned\\nError: \" + error.message);\r\n    });\r\n};\r\n\r\nexport const fetchIssues = (student) => (dispatch) => {\r\n  let issueUrl;\r\n  const bearer = \"Bearer \" + localStorage.getItem(\"token\");\r\n  if (student) {\r\n    issueUrl = \"issues/student\";\r\n  } else {\r\n    issueUrl = \"issues\";\r\n  }\r\n  dispatch(issuesLoading(true));\r\n  return fetch(baseUrl + issueUrl, {\r\n    headers: {\r\n      Authorization: bearer,\r\n    },\r\n  })\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            \"Error \" + response.status + \": \" + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((issues) => dispatch(addIssues(issues)))\r\n    .catch((error) => dispatch(issuesFailed(error.message)));\r\n};\r\n\r\nexport const issuesLoading = () => ({\r\n  type: ActionTypes.ISSUES_LOADING,\r\n});\r\n\r\nexport const issuesFailed = (errmess) => ({\r\n  type: ActionTypes.ISSUES_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addIssues = (issues) => ({\r\n  type: ActionTypes.ADD_ISSUES,\r\n  payload: issues,\r\n});\r\n\r\nexport const usersFailed = (errmess) => ({\r\n  type: ActionTypes.USERS_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const requestLogout = () => {\r\n  return {\r\n    type: ActionTypes.LOGOUT_REQUEST,\r\n  };\r\n};\r\n\r\nexport const receiveLogout = () => {\r\n  return {\r\n    type: ActionTypes.LOGOUT_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n  dispatch(requestLogout());\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"creds\");\r\n  localStorage.removeItem(\"userinfo\");\r\n  dispatch(receiveLogout());\r\n};\r\n","import \"./stylesheets/AboutComponent.css\";\r\nfunction About() {\r\n  return (\r\n    <div className=\"about-main\">\r\n      <div className=\"about-background\">\r\n        <div className=\"about-content\">\r\n          <h1>Library Manangement System</h1>\r\n          <p>\r\n            It is software that is designed to manage all the functions of a\r\n            library. It helps librarian to maintain the database of new books\r\n            and the books that are borrowed by students along with their due\r\n            dates. It also helps students in finding books and check status of\r\n            issued books.\r\n          </p>\r\n        </div>\r\n\r\n        <h2>Designed & Developed By: </h2>\r\n        <div className=\"about-developed\">\r\n          <div className=\"developer-div\">\r\n            <img className=\"developer-logo\" src=\"arunabh-dp.png\" alt=\"\" />\r\n            <h3>Arunabh Jain</h3>\r\n            <h4>19ESKCS046</h4>\r\n          </div>\r\n          <div className=\"developer-div\">\r\n            <img className=\"developer-logo\" src=\"aryan-dp.png\" alt=\"\" />\r\n            <h3>Aryan Sharma</h3>\r\n            <h4>19ESKCS047</h4>\r\n          </div>\r\n          <div className=\"developer-div\">\r\n            <img className=\"developer-logo\" src=\"anshika-dp.png\" alt=\"\" />\r\n            <h3>Anshika Mittal</h3>\r\n            <h4>19ESKCS038</h4>\r\n          </div>\r\n          <div className=\"developer-div\">\r\n            <img className=\"developer-logo\" src=\"aman-dp.png\" alt=\"\" />\r\n            <h3>Aman Jain</h3>\r\n            <h4>19ESKCS032</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Header from \"./HeaderComponent.js\";\r\nimport Home from \"./HomeComponent.js\";\r\nimport Booklist from \"./BooksComponent.js\";\r\nimport Search from \"./SearchComponent.js\";\r\nimport BookDetail from \"./BookDetailComponent.js\";\r\nimport Profile from \"./ProfileComponent.js\";\r\nimport AddBook from \"./AddBookComponent.js\";\r\nimport History from \"./HistoryComponent.js\";\r\nimport Issue from \"./IssueComponent.js\";\r\nimport Return from \"./ReturnComponent.js\";\r\nimport UserDetail from \"./UserDetailComponent.js\";\r\nimport Stats from \"./StatsComponent.js\";\r\nimport Log from \"./LogComponent.js\";\r\nimport UserList from \"./UserListComponent.js\";\r\n\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Button,\r\n  Label,\r\n  Col,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport {\r\n  postBook,\r\n  fetchBooks,\r\n  editBook,\r\n  deleteBook,\r\n  loginUser,\r\n  logoutUser,\r\n  registerUser,\r\n  editUser,\r\n  editPassword,\r\n  postIssue,\r\n  returnIssue,\r\n  fetchIssues,\r\n  fetchUsers,\r\n} from \"../redux/ActionCreators\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\nimport About from \"./AboutComponent.js\";\r\n\r\nconst required = (val) => val && val.length;\r\nconst requiredNum = (val) => !!val;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nconst maxVal = (len) => (val) => !val || val <= len;\r\nconst minVal = (len) => (val) => val && val >= len;\r\nconst isNumber = (val) => !isNaN(Number(val));\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    books: state.books,\r\n    auth: state.auth,\r\n    issues: state.issues,\r\n    users: state.users,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchBooks: () => {\r\n    dispatch(fetchBooks());\r\n  },\r\n  fetchIssues: (student) => {\r\n    dispatch(fetchIssues(student));\r\n  },\r\n  fetchUsers: () => {\r\n    dispatch(fetchUsers());\r\n  },\r\n  postBook: (name, author, description, isbn, cat, floor, shelf, copies) =>\r\n    dispatch(\r\n      postBook(name, author, description, isbn, cat, floor, shelf, copies)\r\n    ),\r\n  editBook: (_id, name, author, description, isbn, cat, floor, shelf, copies) =>\r\n    dispatch(\r\n      editBook(_id, name, author, description, isbn, cat, floor, shelf, copies)\r\n    ),\r\n  deleteBook: (_id) => dispatch(deleteBook(_id)),\r\n  loginUser: (creds) => dispatch(loginUser(creds)),\r\n  logoutUser: () => dispatch(logoutUser()),\r\n  registerUser: (creds) => dispatch(registerUser(creds)),\r\n  editUser: (_id, firstname, lastname, roll, email) =>\r\n    dispatch(editUser(_id, firstname, lastname, roll, email)),\r\n  editPassword: (_id, username, password) =>\r\n    dispatch(editPassword(_id, username, password)),\r\n  postIssue: (bookId, studentId) => dispatch(postIssue(bookId, studentId)),\r\n  returnIssue: (issueId) => dispatch(returnIssue(issueId)),\r\n});\r\n\r\nclass Main extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchBooks();\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.fetchIssues(!this.props.auth.userinfo.admin);\r\n    }\r\n    if (this.props.auth.isAuthenticated && this.props.auth.userinfo.admin) {\r\n      this.props.fetchUsers();\r\n    }\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isDeleteModalOpen: false,\r\n      isEditModalOpen: false,\r\n      selectedBook: null,\r\n    };\r\n    this.toggleDeleteModal = this.toggleDeleteModal.bind(this);\r\n    this.toggleEditModal = this.toggleEditModal.bind(this);\r\n    this.changeSelected = this.changeSelected.bind(this);\r\n    this.handleSubmitEdit = this.handleSubmitEdit.bind(this);\r\n  }\r\n\r\n  handleSubmitEdit(values) {\r\n    this.toggleEditModal();\r\n    this.props.editBook(\r\n      this.state.selectedBook._id,\r\n      values.name,\r\n      values.author,\r\n      values.description,\r\n      values.isbn,\r\n      values.cat,\r\n      values.floor,\r\n      values.shelf,\r\n      values.copies\r\n    );\r\n  }\r\n\r\n  changeSelected(_id) {\r\n    this.setState({\r\n      selectedBook: this.props.books.books.filter(\r\n        (book) => book._id === _id\r\n      )[0],\r\n    });\r\n  }\r\n\r\n  toggleDeleteModal() {\r\n    this.setState({ isDeleteModalOpen: !this.state.isDeleteModalOpen });\r\n  }\r\n\r\n  toggleEditModal() {\r\n    this.setState({ isEditModalOpen: !this.state.isEditModalOpen });\r\n  }\r\n\r\n  render() {\r\n    const BookWithId = ({ match }) => {\r\n      let selectedBook = this.props.books.books.filter(\r\n        (book) => book._id === match.params.bookId\r\n      )[0];\r\n      let notFoundErr = null;\r\n      if (selectedBook === undefined) {\r\n        notFoundErr = \"\\n\\n Error 404 :  Book not found\";\r\n      }\r\n      return (\r\n        <BookDetail\r\n          book={selectedBook}\r\n          isLoading={this.props.books.isLoading}\r\n          errMess={this.props.books.errMess || notFoundErr}\r\n          toggleEditModal={this.toggleEditModal}\r\n          changeSelected={this.changeSelected}\r\n          isAdmin={\r\n            this.props.auth.userinfo == null\r\n              ? false\r\n              : this.props.auth.userinfo.admin\r\n          }\r\n        />\r\n      );\r\n    };\r\n\r\n    const UserWithId = ({ match }) => {\r\n      let selectedUser = this.props.users.users.filter(\r\n        (user) => user._id === match.params.userId\r\n      )[0];\r\n      let notFoundErr = null;\r\n      if (selectedUser === undefined) {\r\n        notFoundErr = \"\\n\\n Error 404 :  User not found\";\r\n      }\r\n      return (\r\n        <UserDetail\r\n          user={selectedUser}\r\n          isLoading={this.props.users.isLoading}\r\n          errMess={this.props.users.errMess || notFoundErr}\r\n        />\r\n      );\r\n    };\r\n\r\n    const PrivateRouteCommon = ({ component: Component, ...rest }) => (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          this.props.auth.isAuthenticated ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/home\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n\r\n    const PrivateRouteAdmin = ({ component: Component, ...rest }) => (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          this.props.auth.isAuthenticated && this.props.auth.userinfo.admin ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/home\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n\r\n    const PrivateRoute = ({ component: Component, ...rest }) => (\r\n      <Route\r\n        {...rest}\r\n        render={(props) =>\r\n          this.props.auth.isAuthenticated && !this.props.auth.userinfo.admin ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/home\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n\r\n    let uniqueIsbn = (defaultIsbn) => (val) =>\r\n      !this.props.books.books.some((book) => book.isbn === val) ||\r\n      val === defaultIsbn;\r\n    let uniqueName = (defaultName) => (val) =>\r\n      !this.props.books.books.some((book) => book.name === val) ||\r\n      val === defaultName;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Header\r\n          auth={this.props.auth}\r\n          loginUser={this.props.loginUser}\r\n          logoutUser={this.props.logoutUser}\r\n          registerUser={this.props.registerUser}\r\n        />\r\n        <Switch location={this.props.location}>\r\n          <Route exact path=\"/home\" component={() => <Home />} />\r\n          <Route exact path=\"/about\" component={() => <About />} />\r\n          <Route\r\n            exact\r\n            path=\"/search\"\r\n            component={() => (\r\n              <Search\r\n                books={this.props.books.books}\r\n                booksLoading={this.props.books.isLoading}\r\n                booksErrMess={this.props.books.errMess}\r\n                isSignedIn={this.props.auth.isAuthenticated}\r\n                isAdmin={\r\n                  this.props.auth.userinfo == null\r\n                    ? false\r\n                    : this.props.auth.userinfo.admin\r\n                }\r\n                toggleEditModal={this.toggleEditModal}\r\n                toggleDeleteModal={this.toggleDeleteModal}\r\n                changeSelected={this.changeSelected}\r\n              />\r\n            )}\r\n          />\r\n\r\n          <Route\r\n            exact\r\n            path=\"/books\"\r\n            component={() => (\r\n              <Booklist\r\n                books={this.props.books.books}\r\n                booksLoading={this.props.books.isLoading}\r\n                booksErrMess={this.props.books.errMess}\r\n                isSignedIn={this.props.auth.isAuthenticated}\r\n                isAdmin={\r\n                  this.props.auth.userinfo == null\r\n                    ? false\r\n                    : this.props.auth.userinfo.admin\r\n                }\r\n                auth={this.props.auth}\r\n                toggleEditModal={this.toggleEditModal}\r\n                toggleDeleteModal={this.toggleDeleteModal}\r\n                changeSelected={this.changeSelected}\r\n              />\r\n            )}\r\n          />\r\n          <Route path=\"/books/:bookId\" component={BookWithId} />\r\n          <PrivateRouteCommon\r\n            exact\r\n            path=\"/profile\"\r\n            component={() => (\r\n              <Profile\r\n                auth={this.props.auth}\r\n                editUser={this.props.editUser}\r\n                editPassword={this.props.editPassword}\r\n              />\r\n            )}\r\n          />\r\n          <PrivateRouteAdmin\r\n            exact\r\n            path=\"/add_book\"\r\n            component={() => (\r\n              <AddBook\r\n                isAdmin={\r\n                  this.props.auth.userinfo == null\r\n                    ? false\r\n                    : this.props.auth.userinfo.admin\r\n                }\r\n                postBook={this.props.postBook}\r\n                books={this.props.books.books}\r\n                booksLoading={this.props.books.isLoading}\r\n                booksErrMess={this.props.books.errMess}\r\n              />\r\n            )}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/profile\"\r\n            component={() => (\r\n              <Profile auth={this.props.auth} editUser={this.props.editUser} />\r\n            )}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/history\"\r\n            component={() => (\r\n              <History issues={this.props.issues} auth={this.props.auth} />\r\n            )}\r\n          />\r\n          <PrivateRouteAdmin\r\n            exact\r\n            path=\"/logs\"\r\n            component={() => <Log issues={this.props.issues} />}\r\n          />\r\n          <PrivateRouteAdmin\r\n            exact\r\n            path=\"/list_students\"\r\n            component={() => (\r\n              <UserList\r\n                users={this.props.users.users.filter((user) => !user.admin)}\r\n                usersLoading={this.props.users.isLoading}\r\n                usersErrMess={this.props.users.errMess}\r\n              />\r\n            )}\r\n          />\r\n          <PrivateRouteAdmin\r\n            exact\r\n            path=\"/list_admins\"\r\n            component={() => (\r\n              <UserList\r\n                users={this.props.users.users.filter((user) => user.admin)}\r\n                usersLoading={this.props.users.isLoading}\r\n                usersErrMess={this.props.users.errMess}\r\n              />\r\n            )}\r\n          />\r\n          <PrivateRouteAdmin\r\n            exact\r\n            path=\"/issue\"\r\n            component={() => (\r\n              <Issue\r\n                auth={this.props.auth}\r\n                books={this.props.books.books}\r\n                booksLoading={this.props.books.isLoading}\r\n                booksErrMess={this.props.books.errMess}\r\n                users={this.props.users.users}\r\n                usersLoading={this.props.users.isLoading}\r\n                usersErrMess={this.props.users.errMess}\r\n                postIssue={this.props.postIssue}\r\n              />\r\n            )}\r\n          />\r\n          <PrivateRouteAdmin\r\n            exact\r\n            path=\"/return\"\r\n            component={() => (\r\n              <Return\r\n                issues={this.props.issues}\r\n                auth={this.props.auth}\r\n                returnIssue={this.props.returnIssue}\r\n              />\r\n            )}\r\n          />\r\n          <PrivateRouteAdmin path=\"/users/:userId\" component={UserWithId} />\r\n          <PrivateRouteAdmin\r\n            path=\"/stats\"\r\n            component={() => (\r\n              <Stats\r\n                issues={this.props.issues}\r\n                books={this.props.books.books}\r\n                booksLoading={this.props.books.isLoading}\r\n                booksErrMess={this.props.books.errMess}\r\n                users={this.props.users.users}\r\n                usersLoading={this.props.users.isLoading}\r\n                usersErrMess={this.props.users.errMess}\r\n              />\r\n            )}\r\n          />\r\n          <Redirect to=\"/home\" />\r\n        </Switch>\r\n        <Modal\r\n          isOpen={this.state.isDeleteModalOpen}\r\n          toggle={this.toggleDeleteModal}\r\n        >\r\n          <ModalHeader toggle={this.toggleDeleteModal}>\r\n            Confirm Deletion\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            Book details : <br />\r\n            <br />\r\n            Name : {this.state.selectedBook\r\n              ? this.state.selectedBook.name\r\n              : \"\"}{\" \"}\r\n            <br />\r\n            Authors :{\" \"}\r\n            {this.state.selectedBook ? this.state.selectedBook.author : \"\"}{\" \"}\r\n            <br />\r\n            ISBN Number :{\" \"}\r\n            {this.state.selectedBook ? this.state.selectedBook.isbn : \"\"} <br />\r\n            Available Copies :{\" \"}\r\n            {this.state.selectedBook ? this.state.selectedBook.copies : \"\"}{\" \"}\r\n            <br /> <br />\r\n            Are you sure you wish to delete this book ? <br />\r\n            <br />\r\n            <Button\r\n              color=\"danger\"\r\n              onClick={() => {\r\n                this.props.deleteBook(this.state.selectedBook._id);\r\n                this.toggleDeleteModal();\r\n              }}\r\n            >\r\n              Yes\r\n            </Button>{\" \"}\r\n            <Button\r\n              color=\"warning\"\r\n              onClick={() => {\r\n                this.toggleDeleteModal();\r\n              }}\r\n            >\r\n              No\r\n            </Button>\r\n          </ModalBody>\r\n        </Modal>\r\n        {this.state.selectedBook ? (\r\n          <Modal\r\n            isOpen={this.state.isEditModalOpen}\r\n            toggle={this.toggleEditModal}\r\n          >\r\n            <ModalHeader toggle={this.toggleEditModal}>Edit a book</ModalHeader>\r\n            <ModalBody>\r\n              <LocalForm onSubmit={(values) => this.handleSubmitEdit(values)}>\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"name\" md={2}>\r\n                    Name{\" \"}\r\n                  </Label>\r\n                  <Col md={10}>\r\n                    <Control.text\r\n                      model=\".name\"\r\n                      id=\"name\"\r\n                      name=\"name\"\r\n                      defaultValue={this.state.selectedBook.name}\r\n                      className=\"form-control\"\r\n                      validators={{\r\n                        required,\r\n                        minLength: minLength(3),\r\n                        uniqueName: uniqueName(this.state.selectedBook.name),\r\n                      }}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".name\"\r\n                      show=\"touched\"\r\n                      messages={{\r\n                        required: \"Required\",\r\n                        minLength: \"Must be greater than 2 characters\",\r\n                        uniqueName:\r\n                          \" There exists a book with this name already\",\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"author\" md={2}>\r\n                    Authors{\" \"}\r\n                  </Label>\r\n                  <Col md={10}>\r\n                    <Control.text\r\n                      model=\".author\"\r\n                      id=\"author\"\r\n                      name=\"author\"\r\n                      defaultValue={this.state.selectedBook.author}\r\n                      className=\"form-control\"\r\n                      validators={{\r\n                        required,\r\n                        minLength: minLength(3),\r\n                      }}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".author\"\r\n                      show=\"touched\"\r\n                      messages={{\r\n                        required: \"Required\",\r\n                        minLength: \"Must be greater than 2 characters\",\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"isbn\" md={4}>\r\n                    ISBN No.\r\n                  </Label>\r\n                  <Col md={8}>\r\n                    <Control.text\r\n                      model=\".isbn\"\r\n                      id=\"isbn\"\r\n                      name=\"isbn\"\r\n                      defaultValue={this.state.selectedBook.isbn}\r\n                      className=\"form-control\"\r\n                      validators={{\r\n                        required,\r\n                        minLength: minLength(10),\r\n                        maxLength: maxLength(13),\r\n                        isNumber,\r\n                        uniqueIsbn: uniqueIsbn(this.state.selectedBook.isbn),\r\n                      }}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".isbn\"\r\n                      show=\"touched\"\r\n                      messages={{\r\n                        required: \"Required\",\r\n                        minLength: \"Must be greater than 9 numbers\",\r\n                        maxLength: \"Must be 13 numbers or less\",\r\n                        isNumber: \"Must be a number\",\r\n                        uniqueIsbn: \" There exists a book with this ISBN No.\",\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row className=\"form-group\">\r\n                  <Col>\r\n                    <Label htmlFor=\"cat\">Category</Label>\r\n                    <Control.select\r\n                      model=\".cat\"\r\n                      id=\"cat\"\r\n                      className=\"form-control\"\r\n                      defaultValue={this.state.selectedBook.cat}\r\n                    >\r\n                      <option>Romance</option> <option>Technology</option>\r\n                      <option>Computer Science</option>{\" \"}\r\n                      <option>Management</option>\r\n                      <option>Electronics</option> <option>Physics</option>\r\n                      <option>Chemistry</option> <option>Mathematics</option>\r\n                      <option>Fiction</option> <option>Philosophy</option>\r\n                      <option>Language</option> <option>Arts</option>\r\n                      <option>Other</option>\r\n                    </Control.select>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"copies\" md={6}>\r\n                    {\" \"}\r\n                    Copies Available\r\n                  </Label>\r\n                  <Col md={6}>\r\n                    <Control.text\r\n                      model=\".copies\"\r\n                      id=\"copies\"\r\n                      name=\"copies\"\r\n                      defaultValue={this.state.selectedBook.copies}\r\n                      className=\"form-control\"\r\n                      validators={{\r\n                        requiredNum,\r\n                        minVal: minVal(1),\r\n                        maxVal: maxVal(1000),\r\n                        isNumber,\r\n                      }}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".copies\"\r\n                      messages={{\r\n                        requiredNum: \"Required\",\r\n                        minVal: \"Must be greater than 0\",\r\n                        maxVal: \"Must be 1000 or less\",\r\n                        isNumber: \"Must be a number\",\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row className=\"form-group\">\r\n                  <Col>\r\n                    <Label htmlFor=\"floor\">Floor </Label>\r\n                    <Control.select\r\n                      model=\".floor\"\r\n                      id=\"floor\"\r\n                      className=\"form-control\"\r\n                      defaultValue={this.state.selectedBook.floor}\r\n                    >\r\n                      <option>0</option> <option>1</option>\r\n                      <option>2</option> <option>3</option>\r\n                      <option>4</option> <option>5</option>\r\n                      <option>6</option> <option>7</option>\r\n                      <option>8</option>\r\n                    </Control.select>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"shelf\" md={6}>\r\n                    {\" \"}\r\n                    Shelf\r\n                  </Label>\r\n                  <Col md={6}>\r\n                    <Control.text\r\n                      model=\".shelf\"\r\n                      id=\"shelf\"\r\n                      name=\"shelf\"\r\n                      defaultValue={this.state.selectedBook.shelf}\r\n                      className=\"form-control\"\r\n                      validators={{\r\n                        requiredNum,\r\n                        minVal: minVal(1),\r\n                        maxVal: maxVal(100),\r\n                        isNumber,\r\n                      }}\r\n                    />\r\n                    <Errors\r\n                      className=\"text-danger\"\r\n                      model=\".shelf\"\r\n                      messages={{\r\n                        requiredNum: \"Required\",\r\n                        minVal: \"Must be greater than 0\",\r\n                        maxVal: \"Must be 100 or less\",\r\n                        isNumber: \"Must be a number\",\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Row className=\"form-group\">\r\n                  <Label htmlFor=\"description\" md={2}>\r\n                    Description\r\n                  </Label>\r\n                  <Col md={10}>\r\n                    <Control.textarea\r\n                      model=\".description\"\r\n                      id=\"description\"\r\n                      name=\"description\"\r\n                      rows=\"12\"\r\n                      defaultValue={this.state.selectedBook.description}\r\n                      className=\"form-control\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col className=\"ml-auto mr-auto\">\r\n                    <Button type=\"submit\" className=\"bg-primary\">\r\n                      Submit\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </LocalForm>\r\n            </ModalBody>\r\n          </Modal>\r\n        ) : (\r\n          <React.Fragment />\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nconst Books = (\r\n  state = { isLoading: true, errMess: null, books: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_BOOKS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMess: null,\r\n        books: action.payload,\r\n      };\r\n\r\n    case ActionTypes.BOOKS_LOADING:\r\n      return { ...state, isLoading: true, errMess: null, books: [] };\r\n\r\n    case ActionTypes.BOOKS_FAILED:\r\n      return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n    case ActionTypes.ADD_BOOK:\r\n      var book = action.payload;\r\n      return { ...state, books: state.books.concat(book) };\r\n\r\n    case ActionTypes.EDIT_BOOK:\r\n      var newbook = action.payload;\r\n      return {\r\n        ...state,\r\n        books: state.books.map((book) => {\r\n          if (book._id === newbook._id) {\r\n            return newbook;\r\n          } else {\r\n            return book;\r\n          }\r\n        }),\r\n      };\r\n\r\n    case ActionTypes.DELETE_BOOK:\r\n      var resp = action.payload;\r\n      return {\r\n        ...state,\r\n        books: state.books.filter((book) => {\r\n          return book._id !== resp._id;\r\n        }),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default Books;\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\n// The auth reducer. The starting state sets authentication\r\n// based on a token being in local storage. In a real app,\r\n// we would also want a util to check if the token is expired.\r\nconst Auth = (\r\n  state = {\r\n    isLoading: false,\r\n    isAuthenticated: localStorage.getItem(\"token\") ? true : false,\r\n    token: localStorage.getItem(\"token\"),\r\n    user: localStorage.getItem(\"creds\")\r\n      ? JSON.parse(localStorage.getItem(\"creds\"))\r\n      : null,\r\n    userinfo: localStorage.getItem(\"userinfo\")\r\n      ? JSON.parse(localStorage.getItem(\"userinfo\"))\r\n      : null,\r\n    errMess: null,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isAuthenticated: false,\r\n        user: action.creds,\r\n      };\r\n    case ActionTypes.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isAuthenticated: true,\r\n        errMess: \"\",\r\n        token: action.token,\r\n        userinfo: action.userinfo,\r\n      };\r\n    case ActionTypes.LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isAuthenticated: false,\r\n        errMess: action.message,\r\n      };\r\n    case ActionTypes.LOGOUT_REQUEST:\r\n      return { ...state, isLoading: true, isAuthenticated: true };\r\n\r\n    case ActionTypes.LOGOUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isAuthenticated: false,\r\n        token: \"\",\r\n        user: null,\r\n        userinfo: null,\r\n      };\r\n\r\n    case ActionTypes.EDIT_USER:\r\n      return { ...state, userinfo: action.payload };\r\n\r\n    case ActionTypes.EDIT_PASSWORD:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default Auth;\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nconst Issues = (\r\n  state = { isLoading: true, errMess: null, issues: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_ISSUES:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMess: null,\r\n        issues: action.payload,\r\n      };\r\n\r\n    case ActionTypes.ISSUES_LOADING:\r\n      return { ...state, isLoading: true, errMess: null, issues: [] };\r\n\r\n    case ActionTypes.ISSUES_FAILED:\r\n      return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n    case ActionTypes.ADD_ISSUE:\r\n      var issue = action.payload;\r\n      return { ...state, issues: state.issues.concat(issue) };\r\n\r\n    case ActionTypes.RETURN_ISSUE:\r\n      var newissue = action.payload;\r\n      return {\r\n        ...state,\r\n        issues: state.issues.map((issue) => {\r\n          if (issue._id === newissue._id) {\r\n            return newissue;\r\n          } else {\r\n            return issue;\r\n          }\r\n        }),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default Issues;\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nconst Users = (\r\n  state = { isLoading: true, errMess: null, users: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_USERS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMess: null,\r\n        users: action.payload,\r\n      };\r\n\r\n    case ActionTypes.USERS_LOADING:\r\n      return { ...state, isLoading: true, errMess: null, users: [] };\r\n\r\n    case ActionTypes.USERS_FAILED:\r\n      return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default Users;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport Books from \"./books.js\";\r\nimport Auth from \"./auth.js\";\r\nimport Issues from \"./issues.js\";\r\nimport Users from \"./users.js\";\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const ConfigureStore = () => {\r\n  const store = createStore(\r\n    combineReducers({\r\n      books: Books,\r\n      auth: Auth,\r\n      issues: Issues,\r\n      users: Users,\r\n    }),\r\n    composeEnhancers(applyMiddleware(thunk))\r\n  );\r\n  return store;\r\n};\r\n","import React from \"react\";\r\nimport Main from \"./components/MainComponent\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { ConfigureStore } from \"./redux/store.js\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"font-awesome/css/font-awesome.css\";\r\nimport \"./App.css\";\r\n\r\nconst store = ConfigureStore();\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n          <Main />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}